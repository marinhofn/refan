{
  "session_info": {
    "start_time": "2025-08-26T21:34:27.202006",
    "end_time": "2025-08-27T08:58:00.899022",
    "total_processed": 1135,
    "successful_analyses": 946,
    "failed_analyses": 188,
    "skipped_already_analyzed": 2825,
    "processing_errors": 0
  },
  "analyses": [
    {
      "hash": "79594a942e24c86933603e3e7490e2d3f2501f7b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-26T21:35:14.215962",
      "diff_size": 18610,
      "diff_lines": 434
    },
    {
      "hash": "7971872940cec74501be7a754e98f2ab5b633021",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T21:35:21.910658",
      "diff_size": 107045,
      "diff_lines": 2075
    },
    {
      "hash": "798118ccdb8d39378ecf045d343d3b4ab22e6342",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method 'makeSnippet' that replaces the existing 'createHit' logic. This change alters the way KeywordHits are created, specifically by modifying how snippets and hits are constructed and passed to the constructor. The new code uses different parameters (only docId is used directly in the hit creation) and changes the return value from a full KeywordHit object to just the snippet string when calling makeSnippet. Additionally, there's a change in the handling of credit card numbers where now they must be valid CCN for hits to be added, which adds conditional logic affecting behavior.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T21:35:30.651121",
      "diff_size": 3712,
      "diff_lines": 73
    },
    {
      "hash": "79b3fa802a981c2ae547a4813a88e8994b23f614",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include modifications to method signatures, addition of new conditional logic (checking argument length), and restructuring that alters the behavior by handling variable arguments differently. Specifically, in au.js, the 'invoke' function now handles multiple cases based on argument count, changing how it processes calls compared to before. In AuInvoke.java, a new constructor is added with variable arguments, which changes the way method invocations are handled. The Applet class and its API counterpart also show functional changes by adding more specific methods for setting parameters and invoking functions with different argument types.",
      "llm_confidence": "high",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-26T21:35:40.644434",
      "diff_size": 13043,
      "diff_lines": 387
    },
    {
      "hash": "79b4e2e6483ceff7975069d15289b03d8cce726e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T21:35:49.598001",
      "diff_size": 54557,
      "diff_lines": 929
    },
    {
      "hash": "79c799fdbd4d410fefc47f70c6adbca31f63ed95",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit changes variable and method names from 'honorReassignment' to 'follow', but the functional behavior is altered. The honorReassignment flag was used in activateOptions() and closeWriter(), now replaced by follow, indicating a change in functionality where the appender's behavior regarding system reassignments has been renamed but its purpose remains similar, thus combining structural changes with functional ones.",
      "llm_confidence": "medium",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-26T21:35:57.082580",
      "diff_size": 1842,
      "diff_lines": 53
    },
    {
      "hash": "79c79b82b210de37a7e005bb4b43bad6ecf585bd",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-26T21:36:05.823295",
      "diff_size": 1385627,
      "diff_lines": 35450
    },
    {
      "hash": "79d48df4cf250d2b7497bb8273438587037ff459",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-26T21:36:15.813518",
      "diff_size": 164124,
      "diff_lines": 3191
    },
    {
      "hash": "79d4a49b74b0391ede1ba7ae67460b74be0cf394",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T21:37:34.328812",
      "diff_size": 718711,
      "diff_lines": 16849
    },
    {
      "hash": "79fd3fb651f8c1340073d65b990b6ef322bd57ad",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit changes the method signature from handling BeforeRemoveComponent to BeforeDeactivateComponent, indicating a change in event type which likely alters the behavior. The logic inside the method remains similar (checking for null tree and removing entity interpreters), but the structural change involves renaming events and methods, with potential functional differences due to different lifecycle events.",
      "llm_confidence": "medium",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-26T21:40:19.849439",
      "diff_size": 1878,
      "diff_lines": 35
    },
    {
      "hash": "7a21241fc87f00689f6c078c279a939315d76d45",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T21:40:33.548781",
      "diff_size": 493559,
      "diff_lines": 9215
    },
    {
      "hash": "7a3e697d836ca6fd7f41215678c977cb48a2ce1f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T21:40:52.705826",
      "diff_size": 2683929,
      "diff_lines": 61772
    },
    {
      "hash": "7a41a1af791c189449eb34495f7fc6b2b4c9c726",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in FileChecksumContainer.java involve renaming a field from 'fileReferenceMap' to 'checksumFileInfoMap'. This is a structural change, but the method signatures and logic remain unchanged. However, the commit also includes a bug fix in MainMenuActivity.java where it removes an unnecessary System.out.println statement that was cluttering logs. Although this removal doesn't add new functionality, it does alter existing behavior by changing log output.",
      "llm_confidence": "medium",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-26T21:42:21.545306",
      "diff_size": 3533,
      "diff_lines": 83
    },
    {
      "hash": "7a4a3eca86d29efef61c649d612d8daa59d63f58",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve adding a `toString()` method to several classes, which is a pure structural addition. In the Haberman class, there are modifications to static variables and their loop method signature, but these appear to be refactoring efforts for code clarity without altering functionality.",
      "llm_confidence": "high",
      "project_name": "encog-java-core",
      "analysis_timestamp": "2025-08-26T21:42:27.473378",
      "diff_size": 5548,
      "diff_lines": 117
    },
    {
      "hash": "7a4cebea181660a2fdb9aac27ed03f2fd12c9aaa",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method signature change from void to boolean in removeMergeJavaScriptPackage, which alters the behavior by returning whether removal was successful. Additionally, it adds conditional logic for handling browser-specific CSS issues (Gecko3 bug) and modifies exception handling implicitly through these conditionals.",
      "llm_confidence": "medium",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-26T21:42:32.911619",
      "diff_size": 5373,
      "diff_lines": 128
    },
    {
      "hash": "7a52a273d12d5c1437ac4ad6e90f5c0835f57202",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the diff primarily involve updating dependency versions and refactoring method parameter comments. The pom.xml update replaces two version strings from '1.0-alpha-2' to '1.0-alpha-3-SNAPSHOT', which is a typical version bump without functional change. In DoxiaMojo.java, there are extensive changes to the XML documentation of parameters, including adding aliases and expressions, but no actual code modifications that alter behavior or structure beyond simple renaming and reorganization. The method signatures remain unchanged, and no new conditional logic or exception handling is introduced. This commit appears to be a pure refactor focused on improving comments and updating dependencies without affecting functionality.",
      "llm_confidence": "high",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-26T21:42:40.337446",
      "diff_size": 8622,
      "diff_lines": 277
    },
    {
      "hash": "7a5680b559e73b461bda4b1b07586c0e06357391",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method `calculateTimeout` in multiple classes (DubboInvoker, InjvmInvoker, TripleInvoker) and modifies the usage of timeout-related constants. The key change is replacing hardcoded timeouts with dynamic ones based on DEFAULT_TIMEOUT constant or URL parameters. This alters behavior by changing how timeouts are calculated and passed, indicating functional changes rather than pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-26T21:42:50.452630",
      "diff_size": 16144,
      "diff_lines": 282
    },
    {
      "hash": "7a5e03bd275e37f44716e0d6e269f84341e4c324",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T21:42:56.924515",
      "diff_size": 23822,
      "diff_lines": 483
    },
    {
      "hash": "7a5f2704747f54b68bd75c89d0e00766c5391c41",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T21:43:06.557656",
      "diff_size": 159887,
      "diff_lines": 3076
    },
    {
      "hash": "7a6446f8add96ad7872525f2c7eac5eacd9c8e1c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method signature change in WebDAVService by replacing direct calls to 'session.execute' with 'session().execute', which is a new instance method. This modification alters the behavior of the system, as it now creates and manages a LocalQuery context dynamically within these methods rather than using an existing session reference. Additionally, there are changes in multiple files including Namespaces.java where the static helper method 'addNSNodes' was renamed to 'prepare', indicating a shift from static utility methods to instance methods. The change also includes performance-related adjustments (e.g., reducing sleep time from 1000ms to 100ms) and updates test cases, demonstrating that the commit is not purely structural but adds functional changes.",
      "llm_confidence": "low",
      "project_name": "basex",
      "analysis_timestamp": "2025-08-26T21:43:16.325147",
      "diff_size": 16680,
      "diff_lines": 411
    },
    {
      "hash": "7a815fb8cbff0332d7dfaeb93e1216eefb4f7bd1",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method signature in the BackendManagerTest class, changing from (Configuration pConfig) to (LogHandler log). Additionally, it adds a new test case 'notChanged' which uses this modified parameter. This change is not purely structural as it alters how logging is handled within the tests and potentially changes behavior by using a different LogHandler instance.",
      "llm_confidence": "medium",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-26T21:43:27.801886",
      "diff_size": 28100,
      "diff_lines": 648
    },
    {
      "hash": "7a85c14b2d6104a84169a9913c3ef39efcf22ea3",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T21:43:34.056715",
      "diff_size": 86523,
      "diff_lines": 1951
    },
    {
      "hash": "7a94e03a7cf10ad2a31cda1a409b8ad746efbb2d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-26T21:43:46.386363",
      "diff_size": 1930423,
      "diff_lines": 55572
    },
    {
      "hash": "7aafe053e7ffffc3b2e4ac1b2a444749df3dbbaa",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T21:45:06.609192",
      "diff_size": 322944,
      "diff_lines": 6961
    },
    {
      "hash": "7acc91a9fecf3e0bcdf8e31824d7e5ff80b4ad75",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-26T21:49:58.353290",
      "diff_size": 24435,
      "diff_lines": 613
    },
    {
      "hash": "7ad2b5b5ae29218c4e6f5dc60a44a34ceb7de7c3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T21:51:19.010875",
      "diff_size": 182519,
      "diff_lines": 2804
    },
    {
      "hash": "7ae490a39305400b87da4d7c161d248df2b5031c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the MSOfficeDemo.java file by adding conditional logic to check for PDF format support and modifying the SaveAs method call. Additionally, it changes how arguments are handled in COMBaseObject.java by reversing their order before passing to the COM runtime, which alters the structure of the code without direct evidence of pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "jna",
      "analysis_timestamp": "2025-08-26T21:51:27.333123",
      "diff_size": 5231,
      "diff_lines": 127
    },
    {
      "hash": "7af855040b3fc3b1e558024c69dccbf01d11db30",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new static field 'serverDB' and modifies the BlueprintDatabase class to use BuildCraftBuilders for accessing it. This indicates a change in structure but also includes functional modifications as the server now uses its own instance of BlueprintDatabase, affecting how blueprints are loaded and managed on the client side.",
      "llm_confidence": "medium",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T21:51:38.445025",
      "diff_size": 24595,
      "diff_lines": 779
    },
    {
      "hash": "7afac11f67ef21f520dc7b2e797e36f432624222",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-26T21:52:58.558048",
      "diff_size": 298211,
      "diff_lines": 6908
    },
    {
      "hash": "7afbeee47e1a82680c815f2fb8cfdba32d6b0b84",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "platform_packages_apps_email",
      "analysis_timestamp": "2025-08-26T21:54:19.035938",
      "diff_size": 54687,
      "diff_lines": 1006
    },
    {
      "hash": "7b0c7daa0502489d6aecf8d978d82fa0ed703472",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "restlet-framework-java",
      "analysis_timestamp": "2025-08-26T21:57:00.395504",
      "diff_size": 30527,
      "diff_lines": 784
    },
    {
      "hash": "7b1d91dfd69e06cbee3eda88fddad4b16f23d8f0",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include modifications to method signatures, addition of new conditional logic in test cases, and alterations to exception handling. Specifically, the introduction of Optional<CdoSnapshot> return type for getLatest() methods indicates a functional change by allowing empty results. The renaming of collection names (e.g., 'snapshots' to 'jv_snapshots') is structural but accompanied by changes in query parameters and logic flow. New test cases with @Unroll annotation and where blocks suggest added functionality, while the existing tests are refactored.",
      "llm_confidence": "medium",
      "project_name": "javers",
      "analysis_timestamp": "2025-08-26T21:57:10.322668",
      "diff_size": 14539,
      "diff_lines": 340
    },
    {
      "hash": "7b1dd3d8f0191c7d53211a6312e591cd29128184",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The diff contains multiple changes that are not just structural refactoring. Changes include modifications to the `get_range_slices` method in test files, adjustments to column family definitions with specific values (like row_cache_size), and updates to expiration time handling in SSTableImport.java which involve type casting and value changes. These changes alter behavior by adding new conditions or modifying existing ones for index queries and expiring columns, indicating a change in functionality rather than pure code structure.",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T21:57:20.564452",
      "diff_size": 27107,
      "diff_lines": 532
    },
    {
      "hash": "7b1ee0ab5d1c089ed2db9d3ad9038cc6c8ade596",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'getExecutedURI' in the AsyncLoadBalancingClient class, which returns the URI of the executed request. This is a functional change as it adds new conditional logic and alters existing methods to include this functionality. The test file was renamed from HttpAsyncClienTest.java to HttpAsyncClientTest.java, but no other changes were made there. However, the addition of 'getExecutedURI' method indicates an intent to track executed URIs, which is a change in behavior.",
      "llm_confidence": "medium",
      "project_name": "ribbon",
      "analysis_timestamp": "2025-08-26T21:57:29.049238",
      "diff_size": 4338,
      "diff_lines": 90
    },
    {
      "hash": "7b20cc8668f9019764cff0f468e585859b8f4c63",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-26T21:58:52.111885",
      "diff_size": 45601,
      "diff_lines": 1113
    },
    {
      "hash": "7b242554d127715b132a5e04a43d6f0358e5a763",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-26T21:59:47.761487",
      "diff_size": 435381,
      "diff_lines": 9224
    },
    {
      "hash": "7b2aa4e2b631de6a47cb5008df2b85eb6e922962",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-26T22:01:08.198655",
      "diff_size": 3211768,
      "diff_lines": 95848
    },
    {
      "hash": "7b2fd345c8e389a45b444db6dcacd36ac93a617c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit changes the value of TABLET_TESTING from false to true, which is a modification of method parameters (or flags) affecting behavior. This change enables or disables functionality based on the flag's new state, indicating a functional alteration rather than pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T22:01:16.181577",
      "diff_size": 8564,
      "diff_lines": 235
    },
    {
      "hash": "7b2fe52eafdaa83730b88517bf13b9d296536750",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jackrabbit-oak",
      "analysis_timestamp": "2025-08-26T22:01:44.545968",
      "diff_size": 80473,
      "diff_lines": 1626
    },
    {
      "hash": "7b3f91c30f5f11be82f2dc8a53c4b54955b9e814",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "javers",
      "analysis_timestamp": "2025-08-26T22:02:00.455538",
      "diff_size": 61847,
      "diff_lines": 1468
    },
    {
      "hash": "7b637d5c2dbfcb387fc24d4d7145f6eb1e2f2052",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T22:07:22.725423",
      "diff_size": 933137,
      "diff_lines": 19513
    },
    {
      "hash": "7b64473c5aa45409e428133448c936d6033984d2",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "ps3mediaserver",
      "analysis_timestamp": "2025-08-26T22:08:43.190250",
      "diff_size": 34372,
      "diff_lines": 898
    },
    {
      "hash": "7b72e5123e5e426fe543c1474ef3f3bdeb1ccb69",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-26T22:10:04.331088",
      "diff_size": 99072,
      "diff_lines": 3010
    },
    {
      "hash": "7b77008d97752d92f0cce1aee14a0bb06c2453b0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T22:11:25.160292",
      "diff_size": 830188,
      "diff_lines": 22464
    },
    {
      "hash": "7ba7ebe8868067d5967b7aadf76c1100e5f423af",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes involve renaming a variable from 'excluded' to 'imported' and adding an import statement in ReportDocumentRenderer. The method signature change is minimal, only the addition of one parameter (ClassRealm classRealm) which does not alter behavior as it's just being passed through without changing logic. The new conditional block around setting the context class loader indicates a structural improvement for better resource management but doesn't change functionality.",
      "llm_confidence": "high",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-26T22:11:33.560963",
      "diff_size": 4807,
      "diff_lines": 102
    },
    {
      "hash": "7bad1a1f64e987c67f3709f9a54aed51fc620368",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new enum classes (DomainActionTypeEnum, NotificationTypeEnum, SettingTypeEnum, ThreadStateEnum) which are structural changes. However, the deletion method in DefaultFacebookClient.java is modified to return a boolean value by parsing JSON differently and handling exceptions via string comparison instead of logging. This change alters the behavior from returning a string to returning a parsed boolean, indicating functional modification (FLOSS). Additionally, the test case for deleteObject now checks for a specific JSON response which wasn't present before, further supporting that this commit includes functionality changes.",
      "llm_confidence": "high",
      "project_name": "restfb",
      "analysis_timestamp": "2025-08-26T22:11:40.613191",
      "diff_size": 9760,
      "diff_lines": 214
    },
    {
      "hash": "7bc6f15c0d2d0040306049c37c804514dd189a9c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-26T22:11:47.443254",
      "diff_size": 20506,
      "diff_lines": 504
    },
    {
      "hash": "7bd7e4f0b26a7a339016a3c678db50a1b2f423bd",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the diff primarily involve renaming and restructuring without altering functionality. The method 'readSymlink' is replaced by a call to 'filter.read(link)', but this can be explained as part of the filter's responsibility, which was previously handled implicitly by 'readSymlink'. Similarly, the 'writing' method now explicitly checks for file existence before filtering, ensuring consistency with its original intent. The 'mkdirs' method has an added condition that returns false if the directory exists, but this is a safe guard and does not change behavior since it would have returned false anyway after calling mkdirs().",
      "llm_confidence": "high",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-26T22:11:56.360518",
      "diff_size": 1467,
      "diff_lines": 41
    },
    {
      "hash": "7be0b57611466b92502adbed7fab35257a853264",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new DescriptionFilter class and modifies the SQLHelper to handle it. This includes adding conditional logic (if-else) in getSQLWhere for handling DescriptionFilter, which changes the behavior of how filters are processed. The method signature is altered by introducing a new parameter type and additional parameters that affect the query construction.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T22:12:01.981818",
      "diff_size": 7627,
      "diff_lines": 165
    },
    {
      "hash": "7c0d1fc041746fb337e683c198ed5d618481004e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-26T22:12:09.344729",
      "diff_size": 333561,
      "diff_lines": 9870
    },
    {
      "hash": "7c1ffde4d482e76bbdb9c9397fd054f8417fb60b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "ribbon",
      "analysis_timestamp": "2025-08-26T22:12:16.039505",
      "diff_size": 23515,
      "diff_lines": 371
    },
    {
      "hash": "7c221f13ed7bc91ea080458df9dc50c874494316",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes involve renaming constants and updating references to them. The constant EMPTY_FULL_CTX_INVOKING_STATE is replaced with EMPTY_INVOKING_STATE in multiple files (ArrayPredictionContext, EmptyPredictionContext, ParserATNSimulator, PredictionContext, SingletonPredictionContext). This change maintains the same functionality as these constants represent a special state value for representing an empty context or wildcard states. There are no changes to method signatures, logic flow, return values, exception handling, or algorithmic behavior.",
      "llm_confidence": "high",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-26T22:12:29.730423",
      "diff_size": 12166,
      "diff_lines": 246
    },
    {
      "hash": "7c5d62704ac1d3e586f3bfe26265a534e5362c73",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "FML",
      "analysis_timestamp": "2025-08-26T22:12:36.923031",
      "diff_size": 93867,
      "diff_lines": 2370
    },
    {
      "hash": "7c6c444418b44fb10cb81b9f250c53f0cf644713",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-26T22:13:12.070348",
      "diff_size": 30078,
      "diff_lines": 671
    },
    {
      "hash": "7c8348e8b7a96338d3f3c6d9ff1fcd7e666224a2",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-26T22:14:34.999930",
      "diff_size": 93322,
      "diff_lines": 1585
    },
    {
      "hash": "7c97d3845004229f5a1db2c729cc90462cf727b4",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the behavior of error handling by modifying the 'log' method to conditionally adjust log levels based on an ignoreError flag. This is evident from the addition of conditional logic (if(ignoreError && level<2)) and changes to exception handling, which fall under FLOSS indicators.",
      "llm_confidence": "medium",
      "project_name": "rundeck",
      "analysis_timestamp": "2025-08-26T22:17:32.765903",
      "diff_size": 15001,
      "diff_lines": 255
    },
    {
      "hash": "7c9f259df3e065e93302e4e60ce5f3fb169dd156",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-26T22:17:40.957168",
      "diff_size": 35969,
      "diff_lines": 939
    },
    {
      "hash": "7caa56739230b43257571e03dd538b6c6049c999",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-26T22:17:48.876807",
      "diff_size": 19429,
      "diff_lines": 667
    },
    {
      "hash": "7cde4a6351fab6af59e935bac7f2d7257654ad2b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-26T22:17:58.162043",
      "diff_size": 1221157,
      "diff_lines": 35366
    },
    {
      "hash": "7ce07b46f5a45e9fd7766971ccdc2e7031812245",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T22:18:31.269746",
      "diff_size": 1184502,
      "diff_lines": 27124
    },
    {
      "hash": "7cfd8bdd34abf0efe7c7be85c668680ffa0c85ed",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-26T22:19:54.595132",
      "diff_size": 65430,
      "diff_lines": 1468
    },
    {
      "hash": "7d0351cdcd7ce1cbc526aa393ab3c810724dff38",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "nifty-gui",
      "analysis_timestamp": "2025-08-26T22:21:38.768920",
      "diff_size": 20681,
      "diff_lines": 526
    },
    {
      "hash": "7d0db867588309a5e00c455e6752ac90e8e35bf2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a fix for CASSANDRA-2786, which involves changes to the EchoedRow class and related classes. In EchoedRow.java, the constructor is modified by removing the gcBefore parameter and changing the isEmpty method's return value from conditional logic to always returning false. This change alters the behavior of the EchoedRow object because it no longer uses gcBefore for tombstone checks, which could affect when tombstones are dropped during compaction. Additionally, in CompactionController.java, a comment is added that changes how the shouldPurge method is interpreted by providing context about its usage. These modifications constitute functional changes beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T22:21:48.794279",
      "diff_size": 9763,
      "diff_lines": 196
    },
    {
      "hash": "7d11782d567765e9960292a2347bc68317380785",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-26T22:22:09.103873",
      "diff_size": 74628,
      "diff_lines": 1727
    },
    {
      "hash": "7d2a7b542a1a97e13846c0d42a2510eeb6969409",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "modeshape",
      "analysis_timestamp": "2025-08-26T22:23:32.355962",
      "diff_size": 40146,
      "diff_lines": 636
    },
    {
      "hash": "7d36034b59b57cc4471b28c2a82121f36dd45cfd",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new private static method 'getCurrentStack' to encapsulate the logic of retrieving the NDC stack from the current thread. This refactoring replaces direct access to the hash table with this helper method in multiple places (clear(), cloneStack(), get(), getDepth(), pop(), peek(), push, setMaxDepth). While it appears structural, the introduction of a new method and its use across several methods constitute a code reorganization that alters the internal structure without changing functionality. However, since there is an addition of new code (the getCurrentStack method) and changes to how stack retrieval is handled, this qualifies as FLOSS due to the presence of non-mapped nodes/leaves and unjustified replacements in the diff.",
      "llm_confidence": "medium",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-26T22:24:59.092332",
      "diff_size": 3302,
      "diff_lines": 115
    },
    {
      "hash": "7d4d1a32581ff40ed1049833631832054bcf2316",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T22:25:21.616847",
      "diff_size": 1416018,
      "diff_lines": 31351
    },
    {
      "hash": "7d6dfaa7eac72fc43518aaff914a406f4d6567c1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T22:26:03.455009",
      "diff_size": 38585,
      "diff_lines": 785
    },
    {
      "hash": "7d7773119686adab39c0d8a5662f3e9395493cad",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-26T22:26:12.901966",
      "diff_size": 22217,
      "diff_lines": 564
    },
    {
      "hash": "7d857b46fb070548bf5e5f6ff81db588f08ec22a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T22:27:38.711218",
      "diff_size": 3602057,
      "diff_lines": 78680
    },
    {
      "hash": "7d8afba0f4843b6dbaf849ff97823c3e6f2065d5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jna",
      "analysis_timestamp": "2025-08-26T22:29:02.095381",
      "diff_size": 58111,
      "diff_lines": 1328
    },
    {
      "hash": "7d8b650c4b706bbb45a1c6f9aa4a8b8596a35de5",
      "purity_classification": "FALSE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve updating version numbers across multiple pom.xml files and the changelog. The commit updates the parent pom versions from 1.308-SNAPSHOT to 1.309-SNAPSHOT in various modules, which is a typical version bump without functional changes. In AuthorizationMatrixProperty.java, there's a change in parameter type (from AbstractProject to Job) but this appears to be due to refactoring and the method signature remains consistent with its purpose of checking names for FormValidation. The release.sh script updates an HTAccess file content which is part of deployment infrastructure and doesn't alter core functionality.",
      "llm_confidence": "high",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-26T22:29:13.112146",
      "diff_size": 13900,
      "diff_lines": 346
    },
    {
      "hash": "7d9c1f1f0d9d21e630df5b8cc2a7c88d4da7adc0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces several functional changes. It adds a new method 'validFaces()' in EnumPipePart, which is used to iterate over faces and check for triggering neighbors. This replaces the old iteration with EnumFacing.VALUES. Additionally, it modifies parameter handling by replacing EnumFacing with EnumPipePart in multiple places (e.g., TriggerEnergy, PipeTester). The change alters how parameters are passed and processed, affecting behavior. There's also a new method 'opposite()' that returns an opposite part based on the current one, which is not present before. This indicates a shift from using EnumFacing to EnumPipePart for direction handling, potentially changing logic flow or error conditions.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T22:29:22.084612",
      "diff_size": 18275,
      "diff_lines": 354
    },
    {
      "hash": "7db3285e7b745e591dc4c405ae9af6c1cddb0c79",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T22:30:48.407916",
      "diff_size": 680080,
      "diff_lines": 13897
    },
    {
      "hash": "7db3e1f0e0bb4c4b77e638df7580b4b8377aeb4a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-26T22:32:11.672540",
      "diff_size": 117205,
      "diff_lines": 3321
    },
    {
      "hash": "7dba4be3cc05f323920171b11b3082dab4c096f0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the logic of tag handling, specifically modifying how category tags are managed. In CategorizeAction.java, there is an addition of conditional behavior: if the tag name matches Category.ZERO (no tags), it removes all existing content tags for that file; otherwise, it checks for absence of specific tags before adding new ones. This alters the functional behavior by introducing a condition to avoid redundant additions and handle deletions differently based on category.",
      "llm_confidence": "medium",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T22:33:44.386063",
      "diff_size": 9194,
      "diff_lines": 171
    },
    {
      "hash": "7dbb7983c248419e2d43ad11296f6d8f3e7e87dc",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in ColumnFamilyStore.java by adding a new parameter to the getFlushPath method and modifying its implementation. This affects the behavior of related code, such as StreamIn.java where the requestRanges method now requires an additional parameter for version handling. Additionally, BootstrapTest.java includes a test that checks for specific version conditions (assert !desc.isLatestVersion) which indicates functional changes are being tested. These modifications include adding conditional logic and changing how versions are handled during streaming operations.",
      "llm_confidence": "medium",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T22:33:51.972471",
      "diff_size": 9710,
      "diff_lines": 174
    },
    {
      "hash": "7dc578c1bed60b0bca22fcb1cb0c54d1cba758dc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "eclim",
      "analysis_timestamp": "2025-08-26T22:34:00.754843",
      "diff_size": 168432,
      "diff_lines": 4209
    },
    {
      "hash": "7dce99074a9f0b80e232240b1251237122a0f86d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "ps3mediaserver",
      "analysis_timestamp": "2025-08-26T22:34:15.078638",
      "diff_size": 61141,
      "diff_lines": 1306
    },
    {
      "hash": "7df67eff2d66dba4bed2b4f6aeabf05144d9b057",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T22:35:38.410218",
      "diff_size": 3173296,
      "diff_lines": 68518
    },
    {
      "hash": "7e22a389e70a917a73f42711615350d5b1a55ef6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Rajawali",
      "analysis_timestamp": "2025-08-26T22:39:52.291751",
      "diff_size": 349673,
      "diff_lines": 7555
    },
    {
      "hash": "7e26be7b50e5c78e724df9e9aa4b1170ae8c08ef",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "rundeck",
      "analysis_timestamp": "2025-08-26T22:41:15.682857",
      "diff_size": 57358,
      "diff_lines": 1404
    },
    {
      "hash": "7e53db0b927ad2f7bd25dbebc6c01a942afd79da",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T22:42:40.766018",
      "diff_size": 732968,
      "diff_lines": 16395
    },
    {
      "hash": "7e5e866cbf3954bd4f72be505537fb910de2a9dc",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "pdfbox",
      "analysis_timestamp": "2025-08-26T22:44:06.056770",
      "diff_size": 57185,
      "diff_lines": 1367
    },
    {
      "hash": "7e6c1d5483b35ab911113dff0f5fd559760d733b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T22:45:31.673322",
      "diff_size": 2326360,
      "diff_lines": 49288
    },
    {
      "hash": "7e9a86a3e1a9db96dea0867d0073d4b8310bc61c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-26T22:49:38.600608",
      "diff_size": 10401,
      "diff_lines": 256
    },
    {
      "hash": "7ea31967006854c0a8ebff6e7ce9742a8b2f49bb",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "ActionBarSherlock",
      "analysis_timestamp": "2025-08-26T22:49:50.053218",
      "diff_size": 109729,
      "diff_lines": 2646
    },
    {
      "hash": "7ead1e755b9976c93f67d4c2ad3c6f4a277c7335",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-26T22:49:59.508819",
      "diff_size": 359577,
      "diff_lines": 8229
    },
    {
      "hash": "7ebf51edf98e13bbc4f7e2b96cb7cb761d15e6b7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-26T22:51:25.207269",
      "diff_size": 4265028,
      "diff_lines": 114621
    },
    {
      "hash": "7eee2edf39c252ac7b4e05d78a3671075ba90fbe",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method 'getScriptIndex' in the Sprite class, replacing the existing 'getScriptList' and related methods. This change alters how scripts are accessed (from list to index-based), which can affect behavior by enabling more efficient lookups or removals. Additionally, several files were modified to use this new method instead of relying on direct list operations, indicating a functional shift from collection-based to indexed access. The test cases also reflect this change, confirming that the refactoring includes modifications beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-26T22:54:26.393433",
      "diff_size": 13539,
      "diff_lines": 299
    },
    {
      "hash": "7eeec26f6294eac886c3309475886a81a94f54c0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-26T22:54:40.013224",
      "diff_size": 164190,
      "diff_lines": 3584
    },
    {
      "hash": "7f1f0b42e81516aa6bb40e1e67d9fe7d2e0cf7cb",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-26T22:54:48.595504",
      "diff_size": 19472,
      "diff_lines": 479
    },
    {
      "hash": "7f2c3a8e40f97c626def5c510d77c1da3d9ae926",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T22:55:27.768865",
      "diff_size": 377466,
      "diff_lines": 7483
    },
    {
      "hash": "7f6a0fec90ded7aa54f7e03f8f9f59c8620ac003",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T22:55:44.256103",
      "diff_size": 230281,
      "diff_lines": 6085
    },
    {
      "hash": "7fa015c0b26f38be6ed49544f2e814f8cda2771e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve replacing MavenReportManager with Map and altering the logic to use a different approach for executing reports, which includes adding new conditional checks (if project.getReports() != null) and changing exception handling from PluginExecutionException to MojoExecutionException. These modifications change the behavior of the code by introducing new conditions and exceptions that are not present in pure structural refactoring.",
      "llm_confidence": "high",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-26T22:57:18.147478",
      "diff_size": 6885,
      "diff_lines": 197
    },
    {
      "hash": "7fb08433079d52033c6df509c24836e915db174e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T22:57:29.207491",
      "diff_size": 47557,
      "diff_lines": 1254
    },
    {
      "hash": "7fdef1c1393e23aefd3f015e233d3ef83140bdae",
      "purity_classification": "FALSE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the diff primarily involve updating dependencies and adding developer information. The method signatures, logic flow, and functionality remain unchanged. Method extraction is not present; instead, existing methods are called with updated parameters or inputs without altering their behavior.",
      "llm_confidence": "high",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-26T22:57:37.135887",
      "diff_size": 24798,
      "diff_lines": 624
    },
    {
      "hash": "7fedd9455f516c19d3a28b571c9c58c792cb08ca",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "infinispan",
      "analysis_timestamp": "2025-08-26T22:58:05.317365",
      "diff_size": 880135,
      "diff_lines": 14407
    },
    {
      "hash": "7ff70ade9b9501d5cf07718e955983b55ff6fc6d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve adding new functionality by introducing a parameter 'deleteEventIfExists' in the GCalHelper class, which alters the behavior of method calls. This is evident from the addition of conditional logic and modified method signatures that now include this boolean parameter, affecting how events are handled.",
      "llm_confidence": "high",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-26T22:59:34.734249",
      "diff_size": 5366,
      "diff_lines": 100
    },
    {
      "hash": "7ff78f0c6b696f186060540e7fd6447f31ca07fe",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-26T22:59:45.380829",
      "diff_size": 159495,
      "diff_lines": 3662
    },
    {
      "hash": "7ff8149c1e2792467a8b3ece152659cd887daaef",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T23:00:11.954795",
      "diff_size": 43181,
      "diff_lines": 902
    },
    {
      "hash": "801fbfb859333747ac01e55a146f0964234f55c5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces several changes that alter the functional behavior. In CollisionHelper.java, 'GenericMath.sqrt' is replaced with 'Math.sqrt', which may change precision or performance if GenericMath had a different implementation (though it's deprecated). Similarly, in ModelComponent.java renamed to ModelHolderComponent.java, the method signatures and internal structure are modified: getModel() becomes getModels(), and new methods like addModel and removeModel are added. This indicates more than just structural changes; there is evidence of functional modifications.",
      "llm_confidence": "medium",
      "project_name": "Spout",
      "analysis_timestamp": "2025-08-26T23:01:42.066020",
      "diff_size": 7174,
      "diff_lines": 204
    },
    {
      "hash": "803173ea64d94103876a0d7eafcb8f0cd4001d54",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-26T23:01:50.249911",
      "diff_size": 599715,
      "diff_lines": 15218
    },
    {
      "hash": "803a23b2f1b24701c22e7fadaf98c2c9a9491d35",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:02:24.770324",
      "diff_size": 1511758,
      "diff_lines": 31761
    },
    {
      "hash": "804ce6f41c5e810e9ee63e6fa287574175deaabc",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve replacing direct message sends with a MessageProducer abstraction, which is a structural change. The code reuses existing patterns by introducing CacheingMessageProducer for specific commands (insert, read, rangeSlice, indexScan, truncate) without altering their functional behavior or inputs/outputs. This refactor improves maintainability and adheres to the pure refactoring criteria as it does not introduce new functionality but enhances structure through abstraction.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:02:33.724879",
      "diff_size": 9619,
      "diff_lines": 181
    },
    {
      "hash": "804dd099121f4b1b16344526e25c45c913bd5082",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces functional changes by modifying exception handling and method signatures. In QueryProcessor.java, the checkAccess method for DROP_INDEX now throws UnauthorizedException instead of InvalidRequestException, which is a behavioral change as it alters how exceptions are handled. Similarly, in CreateColumnFamilyStatement.java and CreateKeyspaceStatement.java, the checkAccess methods have their exception declarations updated to include UnauthorizedException without changing the core logic, but this addition indicates an intent to handle security differently. These changes involve altering method signatures for functional reasons (security) rather than pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:02:40.140202",
      "diff_size": 4623,
      "diff_lines": 83
    },
    {
      "hash": "804f4e5bcf7544eee6b15087476dea6d2c9a9557",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T23:02:48.308046",
      "diff_size": 323109,
      "diff_lines": 6475
    },
    {
      "hash": "805430177c024ffb39b99174d79c2e30dcb1e978",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-26T23:03:03.028982",
      "diff_size": 106357,
      "diff_lines": 2786
    },
    {
      "hash": "80560efcf84b27ddf20f7a7cc177bcca8306746c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in the diff include modifications to method signatures, removal of locking mechanisms (which affects concurrency behavior), and restructuring that alters exception handling. Specifically, in LexerATNSimulator.java, the 'match' block no longer uses read/write locks, which could impact thread safety if not handled elsewhere. In ParserATNSimulator.java, several methods now lack proper locking or have changed their logic flow regarding DFA state management and conflict resolution. Additionally, there are changes to how context caching is done in PredictionContextCache.java, with the removal of synchronized methods that might affect thread safety. These alterations indicate functional changes beyond pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-26T23:03:13.962168",
      "diff_size": 15458,
      "diff_lines": 375
    },
    {
      "hash": "805623c7629c289890c2836db21569d4ca87e5f6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-26T23:03:23.744036",
      "diff_size": 90059,
      "diff_lines": 1985
    },
    {
      "hash": "805bbbcbfe53830daa600dbe35acbea879c3e8eb",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in the diff include modifications to method signatures and logic, specifically changing the parameter from 'message' to 'replyMessage', altering return values by using different parameters for extraction, adding new conditional logic (checking if portList is not empty), and modifying exception handling with additional logging. These functional changes indicate a floss refactor.",
      "llm_confidence": "high",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-26T23:03:33.100814",
      "diff_size": 7419,
      "diff_lines": 156
    },
    {
      "hash": "805ddea206f09c4805a10fb0ea34e7c5407daff3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a conditional check for null data and an explicit assignment within the if-else block, which alters the control flow and error handling behavior. Previously, the code simply assigned the byte array from IOUtil without considering potential null values or exceptions, now it includes a specific exception throw when readData is null, changing how errors are handled.",
      "llm_confidence": "high",
      "project_name": "epublib",
      "analysis_timestamp": "2025-08-26T23:03:38.033207",
      "diff_size": 898,
      "diff_lines": 26
    },
    {
      "hash": "807d46143128d270f84421b6517726586023584a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "metrics",
      "analysis_timestamp": "2025-08-26T23:03:57.993793",
      "diff_size": 249715,
      "diff_lines": 6234
    },
    {
      "hash": "808a4223d94655ed1c4fd6ec03a4b3149d150ef6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-26T23:05:04.024876",
      "diff_size": 92485,
      "diff_lines": 2096
    },
    {
      "hash": "80cad9071e2b13cd2d7d5437bb8f11fef214a1ae",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-26T23:10:28.753018",
      "diff_size": 37015,
      "diff_lines": 1064
    },
    {
      "hash": "80cd6ec4b310f0eb19ad0099b1f18158ce213f8e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a dependency change and refactors the DoxiaMojo class by changing its superclass from AbstractPlugin to AbstractMojo, altering method signatures (execute() now throws MojoExecutionException instead of PluginExecutionException) and modifying parameter names. Additionally, it changes the logic in ScpSiteDeployMojo by replacing exceptions with MojoExecutionException but keeping similar error messages, indicating functional adjustments.",
      "llm_confidence": "high",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-26T23:10:37.412350",
      "diff_size": 6885,
      "diff_lines": 197
    },
    {
      "hash": "80defe5d6204e98628763eaaa94a915bd1e00578",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "openpnp",
      "analysis_timestamp": "2025-08-26T23:10:44.870094",
      "diff_size": 263673,
      "diff_lines": 6061
    },
    {
      "hash": "80ea03f5e928fec184f33682038df528652e97ba",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:11:08.947418",
      "diff_size": 292401,
      "diff_lines": 6471
    },
    {
      "hash": "80ec3cbe17d846dc81cb886ddb7cf4c8f3559e0c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-26T23:11:20.285684",
      "diff_size": 22524,
      "diff_lines": 477
    },
    {
      "hash": "810c2d5fe64333c0bcfe0b2ed3ea2c8f6aaf89b7",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:11:33.904694",
      "diff_size": 5434438,
      "diff_lines": 124439
    },
    {
      "hash": "8110c63b16563e930504afaad800fb7b84b69410",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:12:17.255787",
      "diff_size": 568056,
      "diff_lines": 14652
    },
    {
      "hash": "8116a5aabfe29f04659f1fb92119432c7138fc64",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The AdaBoost class constructor was modified to include an additional parameter (trainFactory) and a new field, indicating functional changes. The BaggingET class now extends EvaluationTechnique instead of being independent, with the method signatures changed accordingly. This involves restructuring but also introduces new functionality by leveraging the parent class's methods for misclassification and performance testing.",
      "llm_confidence": "high",
      "project_name": "encog-java-core",
      "analysis_timestamp": "2025-08-26T23:12:26.251229",
      "diff_size": 9562,
      "diff_lines": 307
    },
    {
      "hash": "81209f1c80c61f6965391e04510bb57f5d25a95e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:12:37.190088",
      "diff_size": 122751,
      "diff_lines": 3256
    },
    {
      "hash": "812e1ce632bcb70656465ca8d0ba2fc41052baf5",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-26T23:14:16.573358",
      "diff_size": 52993,
      "diff_lines": 1184
    },
    {
      "hash": "815621f6322ea36593d06041e2c4d16cdabc6aa8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "PinDroid",
      "analysis_timestamp": "2025-08-26T23:18:21.296602",
      "diff_size": 41198,
      "diff_lines": 1155
    },
    {
      "hash": "815b81608560ed9b604e60ed7ca7929fa7741004",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-26T23:18:33.177079",
      "diff_size": 10263,
      "diff_lines": 295
    },
    {
      "hash": "8163d351cfebc9d5b4ca7f9dbd55412402d097c8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T23:18:47.046508",
      "diff_size": 40900,
      "diff_lines": 813
    },
    {
      "hash": "816dc604b0c7e217dcf3bcb3fc2aa94ed10b6bd5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-26T23:18:58.672497",
      "diff_size": 36191,
      "diff_lines": 804
    },
    {
      "hash": "81747d3e7aee473075959803cf26a91a931dfdd5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "saiku",
      "analysis_timestamp": "2025-08-26T23:20:15.106267",
      "diff_size": 681042,
      "diff_lines": 17949
    },
    {
      "hash": "81957606baf326068460f5aea245a63404ea3bfd",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new interface OnMissionDetailListener and modifies the behavior of the addItemDetail method by changing how the item detail fragment is shown (now using ITEM_DETAIL_TAG for tag-based retrieval) and adds an onDismiss callback that interacts with the mListener. This includes changes to method signatures, addition of conditional logic in onAttach/onDetach methods, and modification of exception handling via interface casting.",
      "llm_confidence": "high",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-26T23:22:56.997018",
      "diff_size": 7014,
      "diff_lines": 164
    },
    {
      "hash": "819b1aa79218dbd4c0df0ade255c726cecd2540e",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes involve renaming and reorganizing variables, methods, and imports without altering functionality. The variable 'overrideFinishAnim' is renamed to avoid confusion with the static final field in another class, preserving its original purpose of controlling animation behavior during finish transitions.",
      "llm_confidence": "high",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-26T23:23:01.961036",
      "diff_size": 6592,
      "diff_lines": 117
    },
    {
      "hash": "81ab8a16c3f6f7c56b15e440bc23db19426d1fb0",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-26T23:23:17.307082",
      "diff_size": 140475,
      "diff_lines": 3601
    },
    {
      "hash": "81b01cf12fc7f35757aef061741d4a1431f6865b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality to handle escape sequences in the shell command line parsing, specifically for Linux systems. It adds a condition to check if a line contains an escape sequence (like arrow keys) and then prints a warning message before ignoring that line. This is a functional change because it alters how commands are processed, adding specific behavior for certain inputs.",
      "llm_confidence": "high",
      "project_name": "opencms-core",
      "analysis_timestamp": "2025-08-26T23:23:27.344975",
      "diff_size": 19495,
      "diff_lines": 385
    },
    {
      "hash": "81b3e15912d6abb4b80c8e6b5d5a7dc062bad939",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-26T23:23:49.019638",
      "diff_size": 19855,
      "diff_lines": 467
    },
    {
      "hash": "81bc0fe11b212bbb32845253f3879eb83d927c0c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T23:23:58.060380",
      "diff_size": 124522,
      "diff_lines": 3388
    },
    {
      "hash": "81c8308aa4141297a2fc20539e9792c10061cbac",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit replaces multiple occurrences of 'runScript' with 'run', indicating a method signature change. This is a functional modification as the new name and parameters may imply different behavior or usage patterns, even if the underlying implementation remains unchanged.",
      "llm_confidence": "medium",
      "project_name": "jedis",
      "analysis_timestamp": "2025-08-26T23:24:06.473334",
      "diff_size": 3658,
      "diff_lines": 98
    },
    {
      "hash": "81ca3a81811a8e8ff9ba687b16f71d92f9096ea0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in DistributedRelay.java and RelayRPC.java involve modifying method signatures from 'encodeRegistrationId' to 'encodeString' and 'decodeRegistrationId' to 'decodeString'. This indicates a change in the parameter type handling, as the new methods accept any string rather than specifically Google Cloud Messaging registration IDs. Additionally, the logic within these methods remains similar but now handles general strings, suggesting a broader functional scope that could affect behavior beyond just GCM registrations.",
      "llm_confidence": "medium",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-26T23:24:12.551017",
      "diff_size": 3225,
      "diff_lines": 75
    },
    {
      "hash": "81cdd6b9433c2dd15467de780b3a584d18609070",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-26T23:24:20.610059",
      "diff_size": 26359,
      "diff_lines": 471
    },
    {
      "hash": "81dea5a6fde1e853424c4e7c43d73f64c8e218c1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class PatternParameterCenter and modifies the Pyramid pattern to use it, which adds new functionality by changing how parameters are handled. The Stairs pattern is also updated with changes that affect its behavior, including modifications to loops and conditional logic for handling different parameter types.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T23:24:29.929111",
      "diff_size": 14787,
      "diff_lines": 454
    },
    {
      "hash": "81e72c4f0e7ff05ace5981541c720694b7d76c58",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'extractTxManager' and refactors the existing logic to use this method, which includes throwing CacheException on failure. Additionally, it adds a conditional block for when transactional cache is enabled but no transaction manager is found, using a specific instantiation of GenericTransactionManagerLookup. These changes alter the behavior by introducing exception handling and new conditional logic that wasn't present before.",
      "llm_confidence": "high",
      "project_name": "infinispan",
      "analysis_timestamp": "2025-08-26T23:24:38.171454",
      "diff_size": 4352,
      "diff_lines": 102
    },
    {
      "hash": "8206429f2fd3293c688bc8c868f64c580ad844cf",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-26T23:24:48.990229",
      "diff_size": 32394,
      "diff_lines": 686
    },
    {
      "hash": "821a5b304bc30c51370ddb7ecac9f7917946b92a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "basex",
      "analysis_timestamp": "2025-08-26T23:25:23.682583",
      "diff_size": 671418,
      "diff_lines": 15969
    },
    {
      "hash": "82276837ac938a749c6dc639a4abae5864c3f008",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "github-api",
      "analysis_timestamp": "2025-08-26T23:26:41.049917",
      "diff_size": 118053,
      "diff_lines": 2782
    },
    {
      "hash": "822d61ad477aa785ffd01204d89c177f0da3e993",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The commit adds a new contributor to contributors.txt, which is purely structural and does not affect functionality. In Parser.java, the changes involve replacing two import statements with slightly modified ones (changing 'NotNull' and 'Nullable' removal) but this is likely due to code cleanup or dependency updates without functional impact. The method setProfile() has been updated by adding a call to getInterpreter().setPredictionMode(saveMode); at the end, which maintains the same functionality as before since it was already present in the original class (though not shown). There are no changes to logic flow, conditional statements, or behavior; only minor structural adjustments and imports removal.",
      "llm_confidence": "medium",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-26T23:28:07.362548",
      "diff_size": 2998,
      "diff_lines": 62
    },
    {
      "hash": "824aaf9b5efa96b03cf71314263059fcd317288a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-26T23:28:16.659874",
      "diff_size": 20178,
      "diff_lines": 380
    },
    {
      "hash": "82668ff7524fd060288d7b57e73003500bd5dd5a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the method signature of setGcWarnThresholdInMs by replacing 'Threashold' with 'Threshold', which is a minor functional modification. Additionally, it updates test methods and their logic to reflect new names (testNaReadMc instead of testMdReadMc) while preserving behavior. The removal of the static modifier from volatile fields does not change functionality but alters structure slightly.",
      "llm_confidence": "medium",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:28:24.735395",
      "diff_size": 5312,
      "diff_lines": 129
    },
    {
      "hash": "829b2eb084e12b53f58f409349497e3ba2805f79",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-26T23:28:32.927079",
      "diff_size": 130940,
      "diff_lines": 3690
    },
    {
      "hash": "82a207132b34377d532f19882f5bfc70bc657da0",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "platform_packages_apps_email",
      "analysis_timestamp": "2025-08-26T23:29:13.724722",
      "diff_size": 94146,
      "diff_lines": 1960
    },
    {
      "hash": "82a7c9e87fd4d82cbfb53cdccf7ad46eee9b568f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "basex",
      "analysis_timestamp": "2025-08-26T23:30:30.447537",
      "diff_size": 2682057,
      "diff_lines": 70733
    },
    {
      "hash": "82b94838c3132064c8011a041466fea04a602b19",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a functional change by modifying the condition for determining if a master key can encrypt. In ProviderHelper.java, the method getSecretMasterKeyCanSign is renamed to getSecretMasterKeyCanCertify and its logic changes from checking CAN_SIGN to CAN_CERTIFY with an additional has_private check in the return statement. This alteration affects behavior because now it requires both being a certification key and having private access for the 'can encrypt' functionality, which was previously only based on encryption key status.",
      "llm_confidence": "high",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-26T23:30:39.512694",
      "diff_size": 4606,
      "diff_lines": 73
    },
    {
      "hash": "82cd02654d6907e5bdddda9fe424321612b911b6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "androidannotations",
      "analysis_timestamp": "2025-08-26T23:30:48.662267",
      "diff_size": 519313,
      "diff_lines": 8739
    },
    {
      "hash": "82d47aede5760469fb22b9b9eae24dd689e75bcd",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-26T23:30:57.308161",
      "diff_size": 101370,
      "diff_lines": 2301
    },
    {
      "hash": "83026e100101a0cbe542bd04ac018c7187beb795",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in TileQuarry.java introduce a new method 'canIgnoreInFrameBox' that replaces direct calls to world.getBlockState and world.isAirBlock with this helper method. This alters the logic by changing conditions for adding/removing block positions from frameBreak/Place lists, which is a functional change. In TileEngineIron_BC8.java, an else clause was removed and replaced with explicit condition checks outside the loop, altering the heat calculation behavior when fuel is present but burn time is zero or negative. These changes include new conditional logic (if statements) and method signature modifications for 'onReceivePower', indicating a floss refactor.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T23:31:06.200632",
      "diff_size": 3160,
      "diff_lines": 74
    },
    {
      "hash": "83049edb3fbeb134d02ba212007d84d00985f163",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jackrabbit-oak",
      "analysis_timestamp": "2025-08-26T23:31:18.227445",
      "diff_size": 77635,
      "diff_lines": 1769
    },
    {
      "hash": "8305d1decca27b2e6607f55240bdb08145ea7e93",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-26T23:31:33.730091",
      "diff_size": 500479,
      "diff_lines": 11052
    },
    {
      "hash": "830df9948f9f0c70b58103ec20bafed4e78db07c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T23:32:50.802756",
      "diff_size": 443236,
      "diff_lines": 14023
    },
    {
      "hash": "831bebdba86ac1956852bd216a4cc62d898c87d7",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:34:07.989492",
      "diff_size": 337211,
      "diff_lines": 7342
    },
    {
      "hash": "832d979fe83b422a1a0faf6e12a64b8872ea31e1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'SchematicBlockFloored' which adds conditional logic for checking block placement. This is combined with changes to existing classes (SchematicCactus, SchematicDoor, etc.) where they extend this new class instead of the old one, altering their behavior by adding floor-based placement checks. Additionally, there are modifications in BptBuilderBlueprint that change buildStage assignments and remove a loop structure, indicating functional adjustments.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T23:35:34.170622",
      "diff_size": 9138,
      "diff_lines": 209
    },
    {
      "hash": "833ec356ca6b9e151c894de766e5f00d16332d7e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve renaming a file and its contents, which is a structural change. However, the new code introduces additional methods (deserialize with InputStream) and modifies existing ones to handle different input types, indicating functional changes. The introduction of new conditional logic for handling different serialization formats and modifications in method signatures that affect behavior classify this as FLOSS refactoring.",
      "llm_confidence": "high",
      "project_name": "ribbon",
      "analysis_timestamp": "2025-08-26T23:35:39.442828",
      "diff_size": 4461,
      "diff_lines": 95
    },
    {
      "hash": "83418fa80613c37461c47ee61e02b6c489bbb6c8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change to the `findSuitableEndpoint` method in CounterMutation, which now includes an additional parameter for local data center and uses FBUtilities.threadLocalRandom() instead of Random.get(). This alters the behavior by prioritizing replicas within the same data center randomly. Additionally, it updates references from Random to FBUtilities.threadLocalRandom(), indicating a functional change rather than pure structural refactoring.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:35:46.210856",
      "diff_size": 9641,
      "diff_lines": 213
    },
    {
      "hash": "8351bd9de0a83df6fde71d305775e33c62ebbaab",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method signature change from parseFileObject(Long, COSObjectKey, COSObject) to parseFileObject(Long, COSObjectKey), and the return type changes from void to COSBase. Additionally, it adds new conditional logic in the form of if/else statements that check for null values and handle different types differently (COSDictionary vs COSNumber). There are also modifications to method parameters where a parameter is removed but its functionality is now handled internally through variable assignment. These changes alter the behavior by changing how objects are parsed and decrypted, thus indicating floss refactoring.",
      "llm_confidence": "high",
      "project_name": "pdfbox",
      "analysis_timestamp": "2025-08-26T23:35:52.434759",
      "diff_size": 8711,
      "diff_lines": 217
    },
    {
      "hash": "835974e5309fdde436fc53f702a135b47b96e7ea",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T23:36:08.326466",
      "diff_size": 859111,
      "diff_lines": 21292
    },
    {
      "hash": "83633b238f4ccb597390edc51093526c7c12b304",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "redisson",
      "analysis_timestamp": "2025-08-26T23:36:24.981354",
      "diff_size": 34215,
      "diff_lines": 832
    },
    {
      "hash": "83634f38703a201e5358923cce1731de02c4d9d3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'FileLineDifferenceIterator' that extends AbstractIterator and implements Closeable, replacing the old nested classes. This change includes modifications to method signatures (e.g., constructor parameters changed from File objects to LineIterator) and adds new conditional logic for handling line comparisons in the iterator. Additionally, it updates test cases with more specific assertions and changes batch sizes, indicating functional adjustments beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "jackrabbit-oak",
      "analysis_timestamp": "2025-08-26T23:36:34.939298",
      "diff_size": 18389,
      "diff_lines": 471
    },
    {
      "hash": "8365d1ca35396985c5959eda419632c904ef5475",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T23:37:00.339011",
      "diff_size": 42184,
      "diff_lines": 1082
    },
    {
      "hash": "8368665a539fb5adb312caa45306fd5fb4b7d180",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T23:37:08.489015",
      "diff_size": 42934,
      "diff_lines": 1030
    },
    {
      "hash": "8377eb94f7eb808585b70d6f91ec7ff20e472abc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new functionality by adding a 'Filter' mode to the lens item (ItemLens.java). This includes changes to how recipes are registered, rendering passes, and dye color handling. Additionally, there is modification of method parameters in LensPluggable.java where the readData method now uses different logic for setting the color value (-1 vs 0-15), which alters behavior.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T23:37:17.373758",
      "diff_size": 8445,
      "diff_lines": 210
    },
    {
      "hash": "838bd37355127189a35df7cff97ee347e8a79340",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jbake",
      "analysis_timestamp": "2025-08-26T23:37:30.369096",
      "diff_size": 43467,
      "diff_lines": 993
    },
    {
      "hash": "83b12077c29f6794153a2b128c173afe60f82818",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve renaming and reorganizing configuration-related code. In JolokiaServerConfig, the method 'initHttpsRelatedSettings' is renamed to 'initKeystore', but its functionality remains unchanged as it still initializes keystore settings from agentConfig. The parameters in SSLContext initialization are hardcoded (from 'pConfig.getSecureSocketProtocol()' to fixed string \"TLS\"), which can be considered a structural change, and the method signature changes for KeyManagerFactory and TrustManagerFactory instances do not alter behavior since they use hard-coded constants that were previously variable. Similarly, JolokiaServer uses hard-coded strings for SSLContext protocol and KeyStore type without changing functionality.",
      "llm_confidence": "high",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-26T23:37:39.925497",
      "diff_size": 9966,
      "diff_lines": 246
    },
    {
      "hash": "83b4be82ba38cc6d7998d086765b87bf67a3512e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-26T23:38:01.295920",
      "diff_size": 140912,
      "diff_lines": 3235
    },
    {
      "hash": "83b54a8ed93b6ff34443084ec0f238c625621611",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-26T23:38:11.306772",
      "diff_size": 129473,
      "diff_lines": 3119
    },
    {
      "hash": "83cb3baf7cda789cc9b47e27ddecc1e0c9103bea",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'LedgerCounters' by renaming the existing 'LedgerCounter'. This change is not purely structural as it involves creating a new component with similar functionality but distinct name, and there are references to new strings in the language file. The method signature remains unchanged (same parameters), but the introduction of a new class indicates functional restructuring rather than pure refactoring.",
      "llm_confidence": "medium",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T23:38:19.103006",
      "diff_size": 3743,
      "diff_lines": 84
    },
    {
      "hash": "83dcaa45dc9dfc3bfdf34a8a90d2c2f30dbab1ea",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "spark",
      "analysis_timestamp": "2025-08-26T23:38:29.639075",
      "diff_size": 32504,
      "diff_lines": 797
    },
    {
      "hash": "83e1e9e45193322f18f57aa7cc4ad31d9d5a152d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:38:55.396320",
      "diff_size": 487796,
      "diff_lines": 10842
    },
    {
      "hash": "83faf92a85d4555605b2bc5aa6b3cb1ee2437164",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OpenTripPlanner",
      "analysis_timestamp": "2025-08-26T23:40:13.482974",
      "diff_size": 253519,
      "diff_lines": 4066
    },
    {
      "hash": "8437b880c527bb6e3a000b64a79c80adde4806a7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include the introduction of a new CacheMonitor interface and its implementation, which adds functionality for JMX monitoring. Additionally, there are modifications to the ViewFactory class where it now implements CacheMonitor and includes logging. The cache provider in View is updated to use a factory cache provider that holds state (the _cache field). These changes involve adding new conditional logic for caching behavior based on annotations and altering method signatures with added parameters or return types, indicating functional changes beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-26T23:41:39.970751",
      "diff_size": 16095,
      "diff_lines": 311
    },
    {
      "hash": "8439e74e6f39317c1731aeb438b6ee17c09fa57d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:42:06.353226",
      "diff_size": 2517344,
      "diff_lines": 57062
    },
    {
      "hash": "843e2ee35b7918477989f07ca6ca7c7a418578e8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-26T23:42:26.302095",
      "diff_size": 528207,
      "diff_lines": 12052
    },
    {
      "hash": "8459b5f60e6dab83da3742aebfacb8795bd6247c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-26T23:48:50.300073",
      "diff_size": 45042,
      "diff_lines": 699
    },
    {
      "hash": "84626372c0ae007bb55e0072d981d856f5a8e72c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:50:08.071017",
      "diff_size": 1137675,
      "diff_lines": 24404
    },
    {
      "hash": "846a55129dab110e2b850672ca78cdb51f2c3408",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "error-prone",
      "analysis_timestamp": "2025-08-26T23:50:15.460941",
      "diff_size": 23727,
      "diff_lines": 489
    },
    {
      "hash": "84966e5fae68714b2c59ae386205930f82b55fd2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a significant change by replacing the default icon path and adding comprehensive video support. The method thumbnailSupported now checks for both image and video MIME types/extensions, expanding its functionality beyond just images. Additionally, generateVideoIcon is introduced to handle video thumbnails, which was not present before. These changes add new conditional logic (checking for video) and implement entirely new behavior for handling videos.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T23:50:25.079096",
      "diff_size": 10354,
      "diff_lines": 198
    },
    {
      "hash": "849975c6961fb2532d693ece8f18b36bdeaed6c0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T23:50:34.554338",
      "diff_size": 795277,
      "diff_lines": 17488
    },
    {
      "hash": "84ab1db2d28fef14b44af5c98e0d2be0604e74ce",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-26T23:50:42.990193",
      "diff_size": 19042,
      "diff_lines": 423
    },
    {
      "hash": "84bc49e900772b04cda4c21e48f23b84f0e0b2cd",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:50:53.040621",
      "diff_size": 4816237,
      "diff_lines": 110417
    },
    {
      "hash": "84d349458dbb24c76e0b7cb39ff30271d40598ed",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit involves a significant refactoring where the class name and method names are changed from JmxRequestFactory to JolokiaRequestFactory, indicating a change in functionality. Additionally, there are changes in parameter types (e.g., getProcessingParameter(pParameterMap) vs getProcessingParameter(pParameterMap)), which may affect behavior due to potential differences in how parameters are processed.",
      "llm_confidence": "medium",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-26T23:51:01.076891",
      "diff_size": 24870,
      "diff_lines": 395
    },
    {
      "hash": "84d7fbd7352c9d539bf4d031f3e88f25c3085891",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T23:51:14.468792",
      "diff_size": 212123,
      "diff_lines": 4471
    },
    {
      "hash": "84dd13cadcc2dc8df45c090a1eef0b1a3e8c9058",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T23:52:31.279723",
      "diff_size": 97521,
      "diff_lines": 2629
    },
    {
      "hash": "84e4221c478aeb09d7d186aa3b8ad066b364d801",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in the diff include a method signature alteration from HashMap to Map and List, which is a structural change. However, there are significant functional modifications in the RecordingService.java file where the recordingMatchesMetadata method now includes complex conditional logic for pattern matching with wildcards (%, %) instead of simple equality checks. This addition of new conditions that handle different cases based on wildcard presence alters the behavior by allowing more flexible filtering compared to the original strict equality check, thus introducing functional changes.",
      "llm_confidence": "high",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-26T23:52:40.188060",
      "diff_size": 4365,
      "diff_lines": 76
    },
    {
      "hash": "84eeb28e3c60fee44597f4e4c663472ef147c811",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:52:48.196946",
      "diff_size": 109792,
      "diff_lines": 2632
    },
    {
      "hash": "850d1a4c907648d06c7ca93dab8d12fff0e17566",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:53:13.968812",
      "diff_size": 114296,
      "diff_lines": 2741
    },
    {
      "hash": "8526427b4f07bdfa3e91b0870bb3ba5ac54d3d39",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in the diff include several functional modifications. In ArtifactTextExtractor.java, the method getDataSource now throws TskCoreException and returns Content or null, altering its behavior compared to before. Additionally, the isDisabled() method replaces noExtractionOptionsAreEnabled(), which may change how extractors are configured. The HtmlTextExtractor.java update changes the constant MAX_EXTR_TEXT_CHARS to MAX_SIZE with a different value (50MB), affecting extraction limits and potentially performance. In Ingester.java, the condition from extractor.noExtractionOptionsAreEnabled() is changed to extractor.isDisabled(), which could alter control flow if implementations differ. The TextExtractor.java interface now uses abstract methods for functionality that previously existed as concrete in subclasses, changing how text extraction works across all extractors. These changes involve both structural reorganization and functional behavior shifts.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-26T23:53:25.623581",
      "diff_size": 17424,
      "diff_lines": 416
    },
    {
      "hash": "8529cbf1c88bdb8c36b6c5314a106cdaae4df62d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-26T23:53:36.524741",
      "diff_size": 985505,
      "diff_lines": 21995
    },
    {
      "hash": "8529fd2bd80a7f6b015b760c56eeaac4b08d82d6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit includes multiple changes that alter functionality. The version and mappings in build.gradle are updated, which is a functional change as it affects the project's configuration and behavior. In BuildCraftRobotics.java, the thread creation uses a different parameter but maintains the same structure. However, in EntityRobot.java, methods have been renamed (func_110146_f to updateDistance) with identical logic flow, which is structural. The most significant changes are in PipeItemsObsidian.java where comments were removed and an EnumFacing variable was modified without changing behavior, but the addition of a new method parameter 'isActive' in TabletManagerClient.java indicates functional change due to potential impact on item active state.",
      "llm_confidence": "medium",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T23:53:46.250470",
      "diff_size": 7143,
      "diff_lines": 163
    },
    {
      "hash": "853119bb0b5e940d7402512ca627b78b00ea8826",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "geoserver",
      "analysis_timestamp": "2025-08-26T23:55:06.538358",
      "diff_size": 41690,
      "diff_lines": 969
    },
    {
      "hash": "8540415a6b5a44b86c62fc46450bb21866dab2dc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-26T23:56:23.499454",
      "diff_size": 6728176,
      "diff_lines": 146597
    },
    {
      "hash": "8551969bc9c98333b292f8903b71def0a237caec",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include a method signature modification from 'route.type.getTypeStrRes()' to 'route.getTypeStrRes()', which is an addition of new functionality (a new method in TransportStopRoute). The new method introduces conditional logic and multiple string resources, altering the behavior by providing more specific resource IDs based on route type. This constitutes floss refactoring due to functional changes.",
      "llm_confidence": "high",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-26T23:59:05.741102",
      "diff_size": 4748,
      "diff_lines": 139
    },
    {
      "hash": "8554edd9ac61a447db206adfc9de3cb67712ea5e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-26T23:59:14.943613",
      "diff_size": 45303,
      "diff_lines": 1083
    },
    {
      "hash": "85870fbbaffac6266f7a30e46fa3ba7ec7c006c6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in Costume.java and Sprite.java involve restructuring with functional modifications. In Costume.java, the getDownsizedBitmap method was replaced by a more efficient downsampling approach using Math.ceil to calculate sample size, which alters the algorithm for creating thumbnails. Additionally, the getBitmap method now includes scaling logic based on screen dimensions and sprite scale, changing how bitmaps are resized compared to previous versions where conditional checks were used differently. The introduction of Pair<Integer, Integer> in Costume.java indicates a change in data handling structure that affects behavior by providing image width and height for use elsewhere. Similarly, the test files now import BitmapFactory and update their setup methods to calculate bitmap dimensions dynamically instead of fixed values, which is part of refactoring but combined with functional changes.",
      "llm_confidence": "medium",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-26T23:59:25.725695",
      "diff_size": 13912,
      "diff_lines": 371
    },
    {
      "hash": "85a5434017ceba7ddac52b2772a3892fcafacf58",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "androidannotations",
      "analysis_timestamp": "2025-08-26T23:59:47.132352",
      "diff_size": 48211,
      "diff_lines": 978
    },
    {
      "hash": "85b1482619b2ced0309ccc8b9a57efe13bdab7c6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a refactor that changes the logic of the mining operation. The variable 'depth' is replaced by a BlockPos object, which alters how positions are handled and potentially impacts behavior due to different methods called on these types (e.g., down() vs direct integer manipulation). Additionally, the condition checking now uses the new position object for comparisons, changing the way blocks are evaluated. This represents a functional change beyond pure structural reorganization.\",",
      "llm_confidence": "medium\",",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-26T23:59:56.021315",
      "diff_size": 3951,
      "diff_lines": 79
    },
    {
      "hash": "85bc6ea47230b682d088047965475191ad645460",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T00:01:20.974658",
      "diff_size": 1455769,
      "diff_lines": 31694
    },
    {
      "hash": "85c371b3ae677ab90b7f198491df05e9b9f2d9a1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "rest-assured",
      "analysis_timestamp": "2025-08-27T00:02:37.701348",
      "diff_size": 419838,
      "diff_lines": 10049
    },
    {
      "hash": "85cdf8eddb14c70c32d64c31be4acd02e74bc7b1",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in this commit primarily involve renaming and reorganizing existing code without altering its functionality. In Bundle.properties, several keys are renamed (e.g., 'CaseDeleteAction.msgDlg.fileInUse.title' to 'Error: Folder In Use', but the messages remain consistent with their original intent. The CaseMetadata.java change replaces a return statement from one variable to another, which is purely structural and does not affect behavior since both variables hold similar case-related data. The most significant changes are in CaseOpenAction.java where method names and comments were updated for clarity, including renaming 'CaseOpenAction' to better reflect its purpose, but no functional logic was changed—only the way it handles errors or displays messages is slightly adjusted by using existing bundles which doesn't alter behavior.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T00:05:22.141551",
      "diff_size": 11829,
      "diff_lines": 235
    },
    {
      "hash": "85ce39ca3e251cf79904088f6f0ecf3c91432070",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jedis",
      "analysis_timestamp": "2025-08-27T00:05:41.939398",
      "diff_size": 30205,
      "diff_lines": 1203
    },
    {
      "hash": "85d75a8a0417f21530f0f4431ec7edfb0b7f190e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T00:06:01.882300",
      "diff_size": 67628,
      "diff_lines": 1782
    },
    {
      "hash": "85e57f10b63d0fefeae902ce1abf47435f9223ec",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit changes the access modifier of a method from 'private static' to 'private'. This is more than just structural change because it alters the visibility and encapsulation, which can affect how other parts of the code interact with this method. Additionally, there are comments indicating that certain lines should be uncommented for data migration, suggesting potential functional changes in the future or context-dependent behavior.",
      "llm_confidence": "medium",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-27T00:06:10.431836",
      "diff_size": 3122,
      "diff_lines": 64
    },
    {
      "hash": "85ea37356e666c2780294bbd29daa89a32ebf333",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T00:06:21.474833",
      "diff_size": 768565,
      "diff_lines": 16263
    },
    {
      "hash": "85ebaf80b1220737c886a7f0aeb04546c5c66b11",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include modifications to method signatures, addition of new conditional logic for configuration handling, and structural changes in the codebase that alter how thrift frame size and max message size are handled. Specifically, the BerkeleyJEKeyValueStore class now includes a call to Preconditions.checkArgument(), which is a functional change as it adds an argument check without changing behavior. The Cassandra-related classes show significant refactoring with new configuration handling logic for Thrift options, including conditional checks and changes in how connections are managed.",
      "llm_confidence": "medium",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T00:06:30.157844",
      "diff_size": 27247,
      "diff_lines": 506
    },
    {
      "hash": "8618b869d355c70672a216e9d77db1f92ca9f9a7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T00:06:39.861869",
      "diff_size": 192560,
      "diff_lines": 5114
    },
    {
      "hash": "86192e39d90a329b327e6b9255b08a17ae5ede0b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T00:07:56.660260",
      "diff_size": 36763,
      "diff_lines": 860
    },
    {
      "hash": "863483017b8145d93439b49e3e7a9f2237453a97",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jedis",
      "analysis_timestamp": "2025-08-27T00:08:04.314878",
      "diff_size": 19304,
      "diff_lines": 548
    },
    {
      "hash": "8693a26e42851b99716317f8c44d571f674fb697",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T00:08:15.167366",
      "diff_size": 1650671,
      "diff_lines": 34429
    },
    {
      "hash": "8697fdb6d9a42d09034b9006105847e8f478c012",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-27T00:08:31.733366",
      "diff_size": 79053,
      "diff_lines": 1991
    },
    {
      "hash": "869edd0c1a0a65348e9ddb673f3707ee755d616c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "encog-java-core",
      "analysis_timestamp": "2025-08-27T00:09:48.506355",
      "diff_size": 29079,
      "diff_lines": 1015
    },
    {
      "hash": "86a4f265967d73314d8db86753a3b5e6f41f8fb3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces several changes that alter functionality. In ATNConfigSet.java, there are modifications to the computeReachSet method where new parameters (input and startIndex) are added, changing how intermediate configurations are processed. This is a functional change as it affects the computation of reach sets by incorporating additional context-dependent evaluations. Similarly, in ParserATNSimulator.java, multiple methods have been updated with new conditional logic for debugging and error handling, including changes to method signatures and additions of parameters like 'input' and '_outerContext'. These updates include performance optimizations (e.g., caching) that alter execution paths and behavior through predicate evaluation.",
      "llm_confidence": "high",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T00:09:58.635123",
      "diff_size": 12983,
      "diff_lines": 292
    },
    {
      "hash": "86bb1794034e03a5ad955cbcf29d750fe7db8401",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit changes the method name from getCursorProvier to getCursorProvider in multiple files, which is a simple rename. However, it also updates calls to this method throughout the codebase and adds debug print statements (System.out.println) for tracing purposes during page write and page event handling. These additions of new functionality (debug prints) constitute behavioral changes, making the refactoring mixed with functional adjustments.",
      "llm_confidence": "medium",
      "project_name": "hornetq",
      "analysis_timestamp": "2025-08-27T00:10:05.561328",
      "diff_size": 17798,
      "diff_lines": 331
    },
    {
      "hash": "86bc51a0b9aa5d6d59ec1770f6fdafff8d0a5f7e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T00:11:24.436822",
      "diff_size": 51097,
      "diff_lines": 1004
    },
    {
      "hash": "86e06eeabeaff5e9470ec23b2cc02ebd74fd15d9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method parameter 'force_new' and changes the condition for creating a new instance of Preferences. This alters the behavior by allowing an additional way to force creation, which is not purely structural.\",",
      "llm_confidence": "high\",",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T00:14:04.464857",
      "diff_size": 897,
      "diff_lines": 20
    },
    {
      "hash": "86e5a9f4a2e899115ed01634f4a5abf2fe7bfdd7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces functional changes by altering the logic of the spawnPrefab method. It now includes a rotation calculation and checks for both presence and absence of the prefab, which modifies behavior compared to the original implementation.",
      "llm_confidence": "high",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T00:14:09.718842",
      "diff_size": 3439,
      "diff_lines": 78
    },
    {
      "hash": "86ed77711b2a409e3f74bd1e068817d070bc3603",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The change renames the test method from 'testWaitForStartAndCancelBeforeStart' to '@Test waitForStartAndCancelBeforeStart', which is a pure structural refactoring. The renaming preserves semantics, and there are no other changes in the code block that would alter behavior or introduce new functionality.",
      "llm_confidence": "high",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-27T00:14:14.822352",
      "diff_size": 581,
      "diff_lines": 13
    },
    {
      "hash": "87004fd0ca3a5178fba3050599a445ba9c64662c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new utility class 'IterableIterator' and modifies the method signatures in PgpKeyOperation. The buildSecretKey method now uses PGPPublicKey instead of long masterKeyId, which changes its behavior by requiring explicit public key objects rather than relying on ID lookups. Additionally, the certifyKey method is updated to accept List<String> userIds, altering how user IDs are handled and processed. These signature changes indicate functional modifications beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T00:14:24.097519",
      "diff_size": 15963,
      "diff_lines": 296
    },
    {
      "hash": "8706ba452b3f6fcd8d73cb7b0a1cd6ae7874ca16",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The commit primarily involves refactoring the CustomErrorPages class by reorganizing its internal structure. The changes include renaming variables and methods, but no new functionality is added or existing behavior altered. For instance, the method 'getDefaultFor' was renamed from 'getDefaultFor' to maintain consistency with the rest of the codebase. Additionally, the static initializer block for defaultPages has been moved into a constructor without changing its logic.",
      "llm_confidence": "high",
      "project_name": "spark",
      "analysis_timestamp": "2025-08-27T00:14:32.865860",
      "diff_size": 10726,
      "diff_lines": 299
    },
    {
      "hash": "870e9f4462b8ef7e839a6d01d574f682559f31ce",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T00:14:39.984139",
      "diff_size": 31769,
      "diff_lines": 729
    },
    {
      "hash": "871f0039c5bf89be343039478c64ce835b04b5cf",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T00:14:47.624810",
      "diff_size": 380183,
      "diff_lines": 8314
    },
    {
      "hash": "871f9af19d28df58ddde023108dcc21ddfc7c509",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a version change from 1.2.12 to 1.2.13rc1 and modifies the ConsoleAppender class by renaming variables and methods (honorReassignment -> follow, getHonorReassignment() -> getFollow()) while also changing their functionality in activateOptions(). Additionally, it includes bug fixes for compatibility issues with JBoss and behavior changes related to TRACE level logs.",
      "llm_confidence": "high",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-27T00:14:56.331128",
      "diff_size": 3020,
      "diff_lines": 89
    },
    {
      "hash": "872d59df16c6162e03ff9870aab22df58e2d1e3f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-27T00:15:19.772886",
      "diff_size": 158735,
      "diff_lines": 3135
    },
    {
      "hash": "87320663ad02706ddd20ba330d309329decf2ea7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-27T00:15:38.169297",
      "diff_size": 46916,
      "diff_lines": 1261
    },
    {
      "hash": "874829ad2d8cc891408b1f20557ac57e5c5200a2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces several changes that alter the functional behavior. Specifically, it replaces 'Set' with 'Collection' in multiple places (lines 364-368 and lines 1029-1073), which is a type change without justification for why this specific collection interface was required over Set. This violates the semantic preservation criterion as Collection does not necessarily imply identical functionality to Set, especially since no other changes are present in these areas. Additionally, there are minor formatting and comment changes but they do not outweigh the functional alteration due to the unjustified type change.",
      "llm_confidence": "medium",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-27T00:15:47.037686",
      "diff_size": 6446,
      "diff_lines": 164
    },
    {
      "hash": "874f01b15f38c168d386ac6d922fcc67752df3ef",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T00:15:57.566770",
      "diff_size": 74511,
      "diff_lines": 1419
    },
    {
      "hash": "876ec3d8fd072fbcc393e351469d5fd48c74c2c2",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'getMimeType' which adds functionality by returning an Optional of the mime type. This is combined with changes to existing methods, such as rewriting hasDrawableMimeType and isVideoFile using this new method and additional logic for handling cases when mimeType is absent or null. The use of Optional.map() indicates functional changes beyond simple structural reorganization.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T00:16:05.647029",
      "diff_size": 6334,
      "diff_lines": 125
    },
    {
      "hash": "877e4efa74a270406a9f4f7e73833f8815e47f47",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-27T00:16:14.672347",
      "diff_size": 189487,
      "diff_lines": 4914
    },
    {
      "hash": "8781450d29e801ae127fe19f60fd00c46fa7e644",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T00:17:22.664126",
      "diff_size": 64861,
      "diff_lines": 1321
    },
    {
      "hash": "8791fc410f3dd351f9e341e6994e158ed6f614dd",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve renaming and minor structural adjustments without altering functionality. In the strings.xml files, both German and English translations were updated to reflect new terminology for creating sprites (\"Neues Sprite\", \"New Sprite\"). The button text in ToolboxSpritesDialog.java was changed from a generic string to the user input, but this is part of normal UI behavior and does not change code logic. Similarly, MainActivity.java removed a TODO comment without functional impact. MainListViewAdapter.java contained commented-out code that was left unchanged, indicating no behavioral modification. StageActivity.java updated the start method call in onOptionsItemSelected for starting/pausing actions, which aligns with standard control flow but maintains existing behavior.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T00:17:33.088380",
      "diff_size": 13174,
      "diff_lines": 272
    },
    {
      "hash": "87aa7775d8cfb696f9f772c8ec361d75a105acbd",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T00:17:38.215836",
      "diff_size": 19989,
      "diff_lines": 563
    },
    {
      "hash": "87afff498f5a6e2d11915d6465341b54b249f056",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "gephi",
      "analysis_timestamp": "2025-08-27T00:17:52.460845",
      "diff_size": 457206,
      "diff_lines": 8952
    },
    {
      "hash": "87bddb0f52962d929a8e111e0bd761d06cabdc20",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the property name from 'globalIdCacheDisabled' to 'sqlGlobalIdCacheDisabled', which alters method signatures and parameter names. This is evident in multiple files including SqlRepositoryBuilder, JaversSqlProperties, and test configurations. The renaming of properties affects how they are accessed and set, indicating functional changes rather than pure structural refactoring.",
      "llm_confidence": "high",
      "project_name": "javers",
      "analysis_timestamp": "2025-08-27T00:18:01.675817",
      "diff_size": 7438,
      "diff_lines": 119
    },
    {
      "hash": "87c78bb333a818757f7f120141823f7df54059dc",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new abstract class 'ApiSubscriberFragment' and replaces multiple existing classes with subclasses of this new fragment. This refactoring includes changes to method signatures (e.g., renaming onApiConnected() to protected void onApiConnectedImpl()) which alters the behavior by making it more specific to each subclass. Additionally, there are modifications in how drone listeners are managed across different fragments, indicating a functional change rather than pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T00:18:07.916354",
      "diff_size": 10802,
      "diff_lines": 278
    },
    {
      "hash": "87c9a3f7ceeece739537673f427dd17e876022fa",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T00:18:21.704230",
      "diff_size": 80558,
      "diff_lines": 942
    },
    {
      "hash": "87d613b2899db6aef5b322f87b6161d79926fab5",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T00:18:40.292439",
      "diff_size": 225914,
      "diff_lines": 6115
    },
    {
      "hash": "87e4f31e30f6a89f1c17b5a9eb6406208e384d51",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T00:19:57.078469",
      "diff_size": 3702273,
      "diff_lines": 74351
    },
    {
      "hash": "87e92d7ae8c3675154286360c294c7048256e9f6",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "core",
      "analysis_timestamp": "2025-08-27T00:21:20.633012",
      "diff_size": 11645,
      "diff_lines": 324
    },
    {
      "hash": "88015f2d8db88a200396a9f9788c18d4bd008d18",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve renaming 'value' to 'amount' in multiple files, including GraphQL queries and Java interfaces. This is a structural change but it also includes modifications that affect functionality: the method signature of LegacyGraphQLMoneyImpl changed from returning DataFetcher<Integer> value() to amount(), which now returns an Integer (cents) instead of being tied to a Currency object. Additionally, the UberConfig class was updated to use RideHailingServiceParameters directly, and there are changes in how ride hailing services are configured and handled.",
      "llm_confidence": "medium",
      "project_name": "OpenTripPlanner",
      "analysis_timestamp": "2025-08-27T00:21:30.094304",
      "diff_size": 12551,
      "diff_lines": 260
    },
    {
      "hash": "8815c7f53c8907f334cb4642fa4f0a26cef830f3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T00:21:39.859229",
      "diff_size": 160225,
      "diff_lines": 2891
    },
    {
      "hash": "881c243885540116974143021910aa4705b6e3b5",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "byteman",
      "analysis_timestamp": "2025-08-27T00:22:32.563130",
      "diff_size": 339720,
      "diff_lines": 6927
    },
    {
      "hash": "88313ebedf9124a5198dd32562194b58c24f67de",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T00:23:48.701316",
      "diff_size": 427457,
      "diff_lines": 9051
    },
    {
      "hash": "8875113fd3d2aacc94f9a142e3812a97f097812e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality related to handling optional content groups (OCGs) in PDFs. Specifically, it adds methods `getOptionalContent` and `setOptionalContent` to both PDFormXObject and PDImageXObject classes, which allow these objects to interact with OCGs. Additionally, the PageDrawer class is updated to check for hidden OCGs before rendering images or forms, potentially altering behavior by skipping rendering if an object is marked as optional content that should be hidden. The PreflightParser also includes changes to handle referenced objects more robustly, which may affect validation and error handling but does not appear purely structural.",
      "llm_confidence": "high",
      "project_name": "pdfbox",
      "analysis_timestamp": "2025-08-27T00:26:32.652764",
      "diff_size": 18839,
      "diff_lines": 406
    },
    {
      "hash": "88799fb3da93edb2268a82ed65c5d8de4d3756e1",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class structure (ParseConfiguration, ReaderIterator, StringIterator) and an interface (EmitHandler), which fundamentally changes how the Trie parses text. The parseText method now uses these configurations instead of direct method calls, altering the control flow and adding conditional logic for handling different input types. Additionally, the DefaultEmitHandler is introduced to manage emits differently than before. These structural changes are accompanied by functional modifications as evidenced by new behavior in emit storage and retrieval.",
      "llm_confidence": "high",
      "project_name": "aho-corasick",
      "analysis_timestamp": "2025-08-27T00:26:43.524740",
      "diff_size": 25293,
      "diff_lines": 760
    },
    {
      "hash": "888183c1bbf517ede35d67bef3918411e5a4399d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-27T00:26:56.033659",
      "diff_size": 33450,
      "diff_lines": 725
    },
    {
      "hash": "888fdb459a456c2aab532f34cb8d2e9769c23a7f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T00:27:05.083335",
      "diff_size": 126272,
      "diff_lines": 3239
    },
    {
      "hash": "8893647933eaa65c712d0d79259d3f31de542669",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T00:28:20.981868",
      "diff_size": 31380,
      "diff_lines": 658
    },
    {
      "hash": "88ca0ab0ae9b72fa62f388ede5877bd2b60812e9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T00:32:11.230705",
      "diff_size": 55358,
      "diff_lines": 1443
    },
    {
      "hash": "88dedbd1e0cddca001afb2704a03cd58e5013805",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T00:33:27.620680",
      "diff_size": 37798,
      "diff_lines": 831
    },
    {
      "hash": "88eab93ed75b455edd9617369fd558fe0c54d916",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T00:34:44.264214",
      "diff_size": 27950,
      "diff_lines": 603
    },
    {
      "hash": "88ec486a12fdd802c01f86031ad65965e60de87f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "rundeck",
      "analysis_timestamp": "2025-08-27T00:36:00.978827",
      "diff_size": 28488,
      "diff_lines": 766
    },
    {
      "hash": "88f65a182450c8b08d372166f879ac33ef9a1ea2",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T00:37:18.672786",
      "diff_size": 690229,
      "diff_lines": 16600
    },
    {
      "hash": "890a9e1d3fb8ee24f07277ad4bab42147d7b9a0d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T00:38:35.605874",
      "diff_size": 38010,
      "diff_lines": 852
    },
    {
      "hash": "890f319142ddd3cf2692ff45ff28e71001365e96",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T00:39:52.895287",
      "diff_size": 10301282,
      "diff_lines": 229278
    },
    {
      "hash": "8910581b6db7547f5721492b3636617995db7a84",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "uaa",
      "analysis_timestamp": "2025-08-27T00:41:10.998778",
      "diff_size": 47162,
      "diff_lines": 912
    },
    {
      "hash": "8918bea329fe49caed88e2f35f692ad6b60ccfee",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The commit primarily involves structural changes by moving multiple files and classes into a new package structure 'org.sleuthkit.autopsy.imagegallery.gui.drawableviews' without altering their functionality. The method signatures, return values, exception handling, and logic remain unchanged. For instance, the setFileHelper method in MetaDataPane now uses the same signature but is called from different contexts due to refactoring only. Similarly, SlideShowView's methods like cycleSlideShowImage are identical before and after moving. There are no new conditional statements or loops introduced; existing ones are preserved.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T00:41:21.121623",
      "diff_size": 16690,
      "diff_lines": 385
    },
    {
      "hash": "89198b5145fd4b3355d278cccb6db4646d8dc683",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "basex",
      "analysis_timestamp": "2025-08-27T00:42:40.306956",
      "diff_size": 49536,
      "diff_lines": 1093
    },
    {
      "hash": "8923c39af4a120233263d79522ee75345673a442",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T00:43:00.591083",
      "diff_size": 197438,
      "diff_lines": 5323
    },
    {
      "hash": "892953598e27812aab6e311c137bad642888fcb1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit includes changes that alter the behavior of methods. In PeerNAT.java, the startSetupRcon method signature is changed by removing the throws clause, indicating a potential change in error handling or how exceptions are handled externally. Additionally, RconRPC.java imports for logging were removed and then added back later but with different log message types (UNKNOWN_ID to EXCEPTION), which changes the behavior of logging under certain conditions. The test code modifications include new logic for managing connections and states (like lightswitch and count in SimpleRconClient) that introduce conditional behavior based on state variables, altering how the system operates compared to previous versions.",
      "llm_confidence": "medium",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T00:43:11.078370",
      "diff_size": 15606,
      "diff_lines": 427
    },
    {
      "hash": "8930eee89dac3209a8620c5db75abfd468acd083",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new option '-b' or '--bake', and modifies the main method to call a new 'bake' method instead of 'run'. This includes adding conditional logic based on the presence of this new option, which changes the behavior by allowing baking as an explicit action. The original run method is replaced with a bake method that handles different conditions (help needed, init, server) and then falls back to baking if no other actions are taken.",
      "llm_confidence": "high",
      "project_name": "jbake",
      "analysis_timestamp": "2025-08-27T00:43:19.627937",
      "diff_size": 5838,
      "diff_lines": 193
    },
    {
      "hash": "8935e040afd563579b56d220d6bac418f4baad5b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces several changes that alter the behavior of the system. In ChunkConstants.java, the GENERATION_DISTANCE is removed and SIZE_Y changed from 128 to 64, which directly affects chunk generation parameters. The ViewDistance enum in ViewDistance.java updates the Vector3i values for each distance level, changing the extents used for view calculation. This change likely impacts performance and rendering behavior by adjusting how many chunks are considered relevant at different distances. In LocalChunkProvider.java, references to ChunkConstants.GENERATION_DISTANCE (now removed) are replaced with direct calls or other constants, indicating a functional shift in how unload requests are calculated. The method signatures for addRelevanceEntity and updateRelevanceEntity change from using expanded distance values to directly passing the distance parameter, which affects chunk loading logic. Additionally, several methods now use ChunkConstants.SECOND_PASS_EXTENTS instead of LOCAL_REGION_EXTENTS, changing the scope of adjacent chunk processing.",
      "llm_confidence": "medium",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T00:43:31.213012",
      "diff_size": 26230,
      "diff_lines": 521
    },
    {
      "hash": "89464ead48278f8e3ecfeaeaf9571714978b4f72",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T00:43:41.034080",
      "diff_size": 6434867,
      "diff_lines": 140414
    },
    {
      "hash": "89561b1cc76a5eedbc1bf9cafa29e590bc714960",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "PinDroid",
      "analysis_timestamp": "2025-08-27T00:43:57.939531",
      "diff_size": 30537,
      "diff_lines": 830
    },
    {
      "hash": "8958d233ffdb498acc506a221080988e78de51cf",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dita-ot",
      "analysis_timestamp": "2025-08-27T00:45:14.698933",
      "diff_size": 231055,
      "diff_lines": 4938
    },
    {
      "hash": "899e4b453c6a758457e0e2a0c875e337431558c4",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve structural reorganization and code formatting. The commit introduces a new Tooltip with updated text, but this is part of the standardization effort without altering functionality. It renames several variables and methods (e.g., 'hasEvents' to maintain state), moves some code for layout improvements, and updates imports in FXML which are purely structural changes. There are no modifications to method signatures, return values, or exception handling that would change behavior; the logic remains identical.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T00:49:13.392510",
      "diff_size": 13473,
      "diff_lines": 335
    },
    {
      "hash": "89a4e98472e33fe8562ebfd1ca99bcabbe24ceae",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-27T00:49:21.187801",
      "diff_size": 36873,
      "diff_lines": 572
    },
    {
      "hash": "89a606b1008ba336392a4dac3bb9c29d61540cf4",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T00:49:50.241176",
      "diff_size": 130170,
      "diff_lines": 2661
    },
    {
      "hash": "89a883eb1b93662fdb3b811c71692e1f475fd1da",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the diff primarily involve renaming and reorganization. In SQLiteProvider.java, the method signatures for delete, getType, query, update, getReadableDatabase, and getWritableDatabase remain unchanged with identical return values (0 or null) except for the insert method which is now returning null instead of a URI. However, this change does not alter functionality as it still returns 0 in other methods. The UriUtils.java changes include renaming several methods but maintain the same logic; for example, 'getTableName' is renamed to 'getItemDirID', and 'isItem' remains functional with identical behavior. Similarly, the test files show updated method calls that align with these renames without changing functionality.",
      "llm_confidence": "high",
      "project_name": "SQLiteProvider",
      "analysis_timestamp": "2025-08-27T00:50:00.569039",
      "diff_size": 16554,
      "diff_lines": 470
    },
    {
      "hash": "89dab4799e2654d97703d24e07b78c364126296e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-27T00:50:09.937386",
      "diff_size": 31522,
      "diff_lines": 763
    },
    {
      "hash": "89e8dcb397d5634065885b441415586fa0a480f2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T00:51:27.357177",
      "diff_size": 1288480,
      "diff_lines": 22997
    },
    {
      "hash": "89eafc6315aa4aedd050ed4897fe5c42fdab0a79",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve renaming fields and methods from 'presentationConvertedName' to 'filenameConverted', but this is not a pure structural change. The method signatures are altered, with parameters renamed (e.g., generatePresentationConvertedName becomes generateFilenameConverted). Additionally, the logic in several files references these new field names, indicating that the behavior of the system may have changed due to the renaming and potential updates elsewhere.",
      "llm_confidence": "medium",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T00:51:37.649794",
      "diff_size": 12479,
      "diff_lines": 200
    },
    {
      "hash": "89ebd07b11a6d37881396a078d685e1cf4cfaf46",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T00:52:03.344218",
      "diff_size": 165845,
      "diff_lines": 4547
    },
    {
      "hash": "89ec19cc4d441c12c8250176298c4b9b597740f3",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'animateBurger' in MainActivity and modifies the saveNote logic by adding a conditional check for auto-location. Additionally, it changes how the toolbar navigation click is handled, replacing direct calls with a builder pattern. The fade method usage remains unchanged but its context differs due to these structural modifications that alter functionality.",
      "llm_confidence": "medium",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-27T00:52:12.342025",
      "diff_size": 14468,
      "diff_lines": 343
    },
    {
      "hash": "89ed5a9b31020fe43a4f5ee6cf84cdb53ac8070a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-27T00:52:32.091095",
      "diff_size": 5894425,
      "diff_lines": 174622
    },
    {
      "hash": "89fc6373c361dd5673ceeab12a9cd6dcbbce5f97",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'errorCallback()' and modifies the constructor to use a Set of DialogType for error callback creation. This includes adding a new parameter type (libvlc_dialog_display_error_cb) in the Dialogs class, which changes the behavior by allowing explicit error callback handling. Additionally, the DialogsApi.java update adds a static import for libvlc_dialog_set_error_callback and calls it within the enable method, integrating this new functionality into the API.",
      "llm_confidence": "high",
      "project_name": "vlcj",
      "analysis_timestamp": "2025-08-27T00:52:40.180466",
      "diff_size": 3749,
      "diff_lines": 77
    },
    {
      "hash": "8a05073985714100201664afb923b0c73702f581",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T00:52:53.905386",
      "diff_size": 28187,
      "diff_lines": 541
    },
    {
      "hash": "8a077a801960aa74da455441cfb12d300c6d6e3a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-27T00:53:12.658187",
      "diff_size": 62302,
      "diff_lines": 971
    },
    {
      "hash": "8a1e6fce428c6a5499f2c4f838999f78ff41b99d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include modifications to method signatures, addition of new conditional logic (if-else statements), and alterations in exception handling. Specifically, the introduction of a boolean return type for 'check' methods indicates potential behavioral changes as it now tracks whether check results were modified. Additionally, there are additions like ternary operators and stream operations that change how data is processed without being purely structural.",
      "llm_confidence": "medium",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T00:53:22.514980",
      "diff_size": 20892,
      "diff_lines": 459
    },
    {
      "hash": "8a31b589113a45b86caf786e45daf2f3deb63640",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jackrabbit-oak",
      "analysis_timestamp": "2025-08-27T00:53:37.115578",
      "diff_size": 39944,
      "diff_lines": 960
    },
    {
      "hash": "8a342c5cc9cad4883eae1e7ccd6208691eb44798",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the BuildCraftCore.java file involve refactoring the debug rendering overlay by introducing a variable for Minecraft instance and restructuring the condition checks. This is purely structural with no functional change, as the same conditions are checked but now using a reference to mc instead of directly accessing Minecraft.getMinecraft(). The TileRefinery.java diff shows changes in formatting the debug info strings without altering their content or logic; only whitespace adjustments were made for better readability.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T00:53:45.202900",
      "diff_size": 3357,
      "diff_lines": 50
    },
    {
      "hash": "8a63c5aa154b947d400e84b6ccd8792b0b13141b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T00:53:54.234859",
      "diff_size": 576819,
      "diff_lines": 9853
    },
    {
      "hash": "8a6feefe8f0a8b591d7417a6bae907d2ea4f7050",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T00:54:06.578848",
      "diff_size": 187665,
      "diff_lines": 4392
    },
    {
      "hash": "8a7e7f103beb63cb0ce36611245f5f8f1e6def8f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-27T01:00:31.797700",
      "diff_size": 309941,
      "diff_lines": 7889
    },
    {
      "hash": "8a7ed9a159b6a7825e914c6a2da4f97011d97302",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "testng",
      "analysis_timestamp": "2025-08-27T01:01:48.808135",
      "diff_size": 45084,
      "diff_lines": 1420
    },
    {
      "hash": "8a87d356f35f1d8d3678ed2ce6b10ec78890f623",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T01:03:06.064798",
      "diff_size": 195804,
      "diff_lines": 5016
    },
    {
      "hash": "8a8b0921d1b7aa791666a7807a219310435eb41f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T01:04:22.589962",
      "diff_size": 30816,
      "diff_lines": 560
    },
    {
      "hash": "8a8f6bc3479f5156d75526532d3cc6eeb04a9072",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit includes changes to XML layout files and Java code that involve modifications to method signatures, conditional logic, and return values. In the AvailableGPXFragment.java diff, there are changes in how GPX file analysis is handled (e.g., using GPXTrackAnalysis instead of just null) which alters the behavior by changing what data is stored or retrieved. Additionally, the FavoritesActivity.java shows a change in tab handling logic with an increment before setting current item, indicating a functional adjustment to prevent negative indexing.",
      "llm_confidence": "medium",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-27T01:04:32.676969",
      "diff_size": 15590,
      "diff_lines": 360
    },
    {
      "hash": "8a968d4dbb5a3ac03a752561cc5ce427d7b2ed2d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-27T01:04:45.023954",
      "diff_size": 40290,
      "diff_lines": 689
    },
    {
      "hash": "8a9b3a4dd72a5dfb1cb4e41fafbf2223d751019f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T01:05:16.237624",
      "diff_size": 51139,
      "diff_lines": 1087
    },
    {
      "hash": "8aaaacd09d8e34c93271383a0c86ecce38ef1965",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a MemoryMeter to measure serialized sizes, which changes the way cache capacity is calculated. In ConcurrentLinkedHashCache.java, the create method now uses EntryWeigher instead of Weigher, and adds a new parameter for memory measurement. This affects behavior by introducing a dependency on jamm (MemoryMeter) and altering how weights are computed based on serialized size. Similarly, in SerializingCache.java, the constructor is renamed to use an explicit weigher object that computes sizes differently. These changes include functional modifications like adding conditional logic around MemoryMeter usage and changing method signatures which impact cache capacity calculations.",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T01:05:28.297554",
      "diff_size": 19319,
      "diff_lines": 423
    },
    {
      "hash": "8ababea862a9baeca021ee86599f21b86d83b413",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve modifying the firePropertyChange method in IngestManager.java to remove old and new values, which alters its behavior. Additionally, several methods across both files now use IngestManager.firePropertyChange instead of their own, changing the way property change events are fired without altering the event type or service name but with a different signature that no longer passes any value.\",",
      "llm_confidence": "high\",",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T01:05:46.915661",
      "diff_size": 3882,
      "diff_lines": 77
    },
    {
      "hash": "8ae43a4187cf0feeaff3d2fcb88334ff656233fa",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "gephi",
      "analysis_timestamp": "2025-08-27T01:06:05.599538",
      "diff_size": 251147,
      "diff_lines": 5583
    },
    {
      "hash": "8af4f9775ec693ef741148d619d51b3e72dd9e6b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality by adding a password masking feature in the readLine method and modifying how repositories and artifacts are parsed from system properties. It also includes changes to exception handling when processing bundles, which alters behavior.",
      "llm_confidence": "high",
      "project_name": "fabric8",
      "analysis_timestamp": "2025-08-27T01:06:13.724329",
      "diff_size": 10349,
      "diff_lines": 191
    },
    {
      "hash": "8af61ac311b8b6e8bbff410f5f0e29bc73ca8daa",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T01:06:22.141607",
      "diff_size": 12788817,
      "diff_lines": 283549
    },
    {
      "hash": "8af83ae721b043c554867324bcbf509862f44bf9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T01:07:00.007933",
      "diff_size": 932851,
      "diff_lines": 15256
    },
    {
      "hash": "8b0dd28d23f44c11bd43414bf8c932b1d98a64c1",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-27T01:08:17.667420",
      "diff_size": 111196,
      "diff_lines": 2248
    },
    {
      "hash": "8b0e1868e8cf813ddfc98d11448aa2ad363eccc1",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T01:09:34.368167",
      "diff_size": 2690346,
      "diff_lines": 60045
    },
    {
      "hash": "8b2071ee62fc3fd8e8519eb62c933c3256ad08ec",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T01:13:25.399839",
      "diff_size": 39977,
      "diff_lines": 1154
    },
    {
      "hash": "8b24d813b586cbc16783d7b7a384ebfaef4ca3ec",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T01:14:42.015974",
      "diff_size": 24442,
      "diff_lines": 494
    },
    {
      "hash": "8b25d780b14df5eccdbf7ba7f055b002c317dc0b",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in EntityRobot.java involve adding a null check before adding an ItemStack to the wearables list, which is a defensive programming technique but does not alter functionality as it only prevents potential errors without changing behavior. In RenderRobot.java, new ModelRenderer and ModelBase components are introduced for rendering purposes, including additional boxes (skullOverlayBox) with specific rotations and translations. However, these changes appear to be purely structural additions within the renderer class that do not affect the core logic or output of the program; they simply reorganize the rendering code without changing what is displayed.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T01:14:50.423227",
      "diff_size": 3073,
      "diff_lines": 71
    },
    {
      "hash": "8b3de2f4908c4651491b0f20b80f7bb96cff26ed",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T01:15:02.098572",
      "diff_size": 1306170,
      "diff_lines": 28492
    },
    {
      "hash": "8b6b26315e9addde9936439d00f1d2d9a47c54dc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T01:15:09.856697",
      "diff_size": 107980,
      "diff_lines": 3408
    },
    {
      "hash": "8b6e2a7da48504fc901a997a6e2799693eaa2979",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-27T01:16:12.513833",
      "diff_size": 4779738,
      "diff_lines": 85605
    },
    {
      "hash": "8b8299ecb6242f0098970e6122b7bb24bace96da",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The diff includes several changes that introduce new functionality or modify existing behavior. In Hierarchy.java, a new field 'errorList' of type List is added and methods to access and modify it are introduced. This suggests the addition of error tracking capabilities. Additionally, in DBAppender2.java, calls to LogLog have been replaced with calls to getLogger(), which changes how logging occurs within this class. The introduction of ErrorItem class with different purpose (storing errors that cannot be logged) indicates a change in error handling behavior. These modifications go beyond simple structural reorganization and introduce functional changes.",
      "llm_confidence": "medium",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-27T01:16:22.296647",
      "diff_size": 13225,
      "diff_lines": 345
    },
    {
      "hash": "8b952cb3ffb74522a70af1f4f40c2c315b7606e7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "graylog2-server",
      "analysis_timestamp": "2025-08-27T01:16:32.054060",
      "diff_size": 109609,
      "diff_lines": 2139
    },
    {
      "hash": "8b9ba91b9b1264cdaedd2d94b6b7b0992d9048ab",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T01:17:48.732553",
      "diff_size": 42628,
      "diff_lines": 925
    },
    {
      "hash": "8bb9efc472aa6e69627c76d64d7b739aeb17c0ba",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in UpdateHandlerRequest involve renaming fields and methods from 'content' to 'body', which is a structural change. However, the introduction of new conditional logic in StdCouchDbConnector for serializing the request body indicates functional modifications. The method serializeUpdateHandlerRequestBody adds explicit handling for different object types (String or other), changing how the content is serialized compared to previous direct use of getContent(). This includes performance optimizations by avoiding repeated ObjectMapper operations and security considerations through proper exception handling, thus altering behavior.",
      "llm_confidence": "high",
      "project_name": "Ektorp",
      "analysis_timestamp": "2025-08-27T01:17:57.288680",
      "diff_size": 5839,
      "diff_lines": 158
    },
    {
      "hash": "8bdfdfb5249bc830652d677d1172aa26cf2fc18b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "vlcj",
      "analysis_timestamp": "2025-08-27T01:18:07.077247",
      "diff_size": 11930,
      "diff_lines": 271
    },
    {
      "hash": "8be4600f5c223ef9729969d03990f2d2d727fc80",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T01:18:15.696442",
      "diff_size": 40001,
      "diff_lines": 817
    },
    {
      "hash": "8be8ff512c06f6f2758c425f6864a134bf12c300",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'getEndpoint' in NodeProbe.java, which replaces direct calls to host with the endpoint. This changes the behavior of methods like getDatacenter and getRack by using the dynamically obtained endpoint instead of a fixed one. Additionally, there are multiple renames from 'createCompactionSrategy' to 'createCompactionStrategy' (with different capitalization) in CFMetaData.java that appear to be functional changes due to the context of the new method's introduction. The change in method names and their usage indicates a modification beyond simple renaming or structural movement, affecting how the system determines endpoints for operations.",
      "llm_confidence": "medium",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T01:18:26.067127",
      "diff_size": 6116,
      "diff_lines": 136
    },
    {
      "hash": "8bec9dacf57fa7ca188c3119ba508310215bc6f1",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-27T01:18:34.233430",
      "diff_size": 104099,
      "diff_lines": 1657
    },
    {
      "hash": "8bf6e1559effc21bd9fb67b0d0eaf97bb8003316",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T01:18:48.636945",
      "diff_size": 1041029,
      "diff_lines": 23035
    },
    {
      "hash": "8bfc86df97c00df05d8f1c0253d63213a6f98eb8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "guvnor",
      "analysis_timestamp": "2025-08-27T01:20:04.795704",
      "diff_size": 779273,
      "diff_lines": 16244
    },
    {
      "hash": "8c17dfb8df989cc5e2a352a3cbbdb93da7810b81",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jackrabbit-oak",
      "analysis_timestamp": "2025-08-27T01:23:56.501475",
      "diff_size": 71148,
      "diff_lines": 1790
    },
    {
      "hash": "8c1b641a6dc52ac866209e42dddd2718ae83885b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include the addition of new functionality related to retry operations and timeout handling. Specifically, a new enum value 'WP_RETRY' is introduced in WaypointEvent_Type.java, which extends existing logic by adding retry-related events. The InfoMenu class now uses an integer variable pdTitle for dynamic progress dialog titles based on event type, including a new title for 'Retrying'. Additionally, the WaypointMananger.java introduces tracking of retries with maxRetry and modifies state transitions to handle timeout scenarios (WP_TIMEDOUT). These additions change behavior by enabling retry logic and altering how events are processed.",
      "llm_confidence": "high",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T01:24:05.462954",
      "diff_size": 6056,
      "diff_lines": 189
    },
    {
      "hash": "8c38cb1d7a5fdddd54033614447d460736a22508",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new interface FileChangeListener and modifies the constructor of FileStore to accept this listener. It also adds logging in several methods (loadTasksFromFile, readFile) which is a functional change as it alters behavior by adding new conditional logic for debugging purposes. Additionally, there are changes to method signatures that affect how tasks are loaded and saved, including the addition of parameters and modification of return types or exception handling.",
      "llm_confidence": "low",
      "project_name": "simpletask-android",
      "analysis_timestamp": "2025-08-27T01:24:15.284201",
      "diff_size": 31571,
      "diff_lines": 654
    },
    {
      "hash": "8c3d619dfedd7b44882682803b580d73e9b4c5aa",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T01:24:28.837544",
      "diff_size": 127314,
      "diff_lines": 3042
    },
    {
      "hash": "8c3f931f666a3034bf6465f10722e570924d6306",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include renaming classes and methods (JacksonProcessor to JsonProcessor, BsonDeserializers to JsonModule) which is structural. However, the new class 'JsonModule' introduces a different deserialization logic using JSON.parse instead of direct BSON handling, indicating functional change. Also, there are modifications in method signatures and return types that affect behavior.",
      "llm_confidence": "medium",
      "project_name": "jongo",
      "analysis_timestamp": "2025-08-27T01:24:38.896613",
      "diff_size": 15120,
      "diff_lines": 377
    },
    {
      "hash": "8c420d8c507493c1888964c35809aab22028f388",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "restfb",
      "analysis_timestamp": "2025-08-27T01:25:09.174004",
      "diff_size": 30023,
      "diff_lines": 752
    },
    {
      "hash": "8c433c12a15048cfc3be10fea9ff32bbc64edfcd",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T01:25:31.891573",
      "diff_size": 1805363,
      "diff_lines": 31248
    },
    {
      "hash": "8c579674b7219966d7e0a595fe513206f5656c0a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T01:29:20.102180",
      "diff_size": 316075,
      "diff_lines": 8264
    },
    {
      "hash": "8c6316b89deff0ffdbfb078d3877174da7cb423f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'lookupAgentsWithTimeout' with an additional parameter, which changes the behavior of the timeout handling. It also modifies existing methods to use this new functionality, indicating functional changes rather than pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-27T01:29:28.782385",
      "diff_size": 12461,
      "diff_lines": 253
    },
    {
      "hash": "8c6cb8b0ab9e89f9d575af829e0dd1dd9e82e401",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T01:29:37.921397",
      "diff_size": 37551,
      "diff_lines": 896
    },
    {
      "hash": "8c7817b8dbd96304aa6b9f945fb8f0770a032118",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T01:30:06.773026",
      "diff_size": 194702,
      "diff_lines": 4558
    },
    {
      "hash": "8c7bc2fe8718d612fdbcf0f8b7e33554f17efcaa",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T01:31:23.314467",
      "diff_size": 625547,
      "diff_lines": 15130
    },
    {
      "hash": "8c9e8f8e9d2f21e9fbf8198d06199539b473249d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OpenTripPlanner",
      "analysis_timestamp": "2025-08-27T01:35:14.199771",
      "diff_size": 45169,
      "diff_lines": 1170
    },
    {
      "hash": "8ca30ecef586917cddd2f1ffa5a35fe49ffd6066",
      "purity_classification": "FALSE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve refactoring the code to use resource bundles for internationalization (i18n) and adjusting comments. The method signatures remain unchanged, no new conditional logic or loops are introduced, return values unaffected, exception handling consistent with previous logs. Only structural adjustments like renaming variables and methods occur without altering functionality.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T01:35:23.629195",
      "diff_size": 18245,
      "diff_lines": 313
    },
    {
      "hash": "8ca91af6893907dbf909c9659fc5b602be786659",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T01:35:32.047475",
      "diff_size": 80950,
      "diff_lines": 1712
    },
    {
      "hash": "8cb81f74a8042c2e7b19691597a3b35154bdfc4e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T01:35:44.545343",
      "diff_size": 966618,
      "diff_lines": 20736
    },
    {
      "hash": "8cc192ff8a1ce72f87c1c5cee88b89c8723f6ebf",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T01:37:01.360373",
      "diff_size": 58039,
      "diff_lines": 1164
    },
    {
      "hash": "8cd4dcd2117b42de75958573c6cb7b98f02ba71a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T01:38:17.363950",
      "diff_size": 48710,
      "diff_lines": 1117
    },
    {
      "hash": "8cf252a4e96725becebd11b17151c3b5dfe00095",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new instance variable 'currentBookmark' in BrowseBookmarks.java and modifies the constructor of BrowseBookmarkFeedFragment to accept parameters. Additionally, several methods (onBookmarkView, onBookmarkRead, onBookmarkOpen) now set this variable before creating fragments. This changes the state management within these methods from relying solely on method arguments to using instance variables, altering the functional behavior by introducing side effects and changing how data is stored across different contexts.",
      "llm_confidence": "high",
      "project_name": "PinDroid",
      "analysis_timestamp": "2025-08-27T01:39:42.325103",
      "diff_size": 4096,
      "diff_lines": 100
    },
    {
      "hash": "8cf9a30c5e6846be88c292a3960b01baa8a77f04",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method extraction from crawl() into crawlFile(), which includes changes to the logic flow and conditional structures. Additionally, it modifies several constants and their usage across different classes (Crawler, Renderer, FreemarkerTemplateEngine, ThymeleafTemplateEngine), including changing the fully qualified name of some attributes. These changes involve restructuring with functional modifications such as altering how document status is handled and integrated into other parts of the codebase.",
      "llm_confidence": "medium",
      "project_name": "jbake",
      "analysis_timestamp": "2025-08-27T01:39:51.475996",
      "diff_size": 14447,
      "diff_lines": 312
    },
    {
      "hash": "8d22d9fd1842c59ea65a3793aceb5a78c5852351",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T01:40:05.794138",
      "diff_size": 3807918,
      "diff_lines": 82557
    },
    {
      "hash": "8d2f2fd21ec54e074b5abca3e14fea5abd424d0a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T01:41:34.021332",
      "diff_size": 50422,
      "diff_lines": 989
    },
    {
      "hash": "8d4a262075876c05bc25328705bf06605e1efa84",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'visitDeep' that refactors the existing visit methods for FileNode and DerivedFileNode. This change alters the logic by introducing conditional checks based on node type, which affects behavior. Specifically, the original code had different handling for LayoutFileNode in the ShowItemVisitor class (returning false) versus the DirectoryTreeFilterChildren class where it was handled differently. The new method 'visitDeep' consolidates and modifies this logic, changing how leaf nodes are determined by checking if children exist or are directories. This indicates a functional change as node types now influence whether a node is considered a leaf.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T01:43:55.731931",
      "diff_size": 5143,
      "diff_lines": 128
    },
    {
      "hash": "8d6168f1e152fa1c2cdb00caa61ec13e5d7e9dec",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Rajawali",
      "analysis_timestamp": "2025-08-27T01:44:13.172465",
      "diff_size": 221029,
      "diff_lines": 5089
    },
    {
      "hash": "8d628ca08c3870481a62df7e32d433550163355c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T01:44:30.873635",
      "diff_size": 190854,
      "diff_lines": 4492
    },
    {
      "hash": "8d63e0a717b5a01a2f6c42459cd221974a02f07c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T01:45:40.535107",
      "diff_size": 29128,
      "diff_lines": 801
    },
    {
      "hash": "8d7cc2550fabef3a8a9f75d4cfddd4cd4eea0b72",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in AutoIngestJobsPanel involve a try-catch block for handling PropertyVetoException, which is an exception handling modification. This falls under FLOSS refactoring as it alters the error handling behavior without changing the core functionality.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T01:47:04.576990",
      "diff_size": 8086,
      "diff_lines": 159
    },
    {
      "hash": "8d8ebbac363bdc7ba4a1e39fd1a59110169bd2a7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jackrabbit-oak",
      "analysis_timestamp": "2025-08-27T01:47:53.701265",
      "diff_size": 260865,
      "diff_lines": 4552
    },
    {
      "hash": "8d9d83e92a762c46fb22a3737d85004021717a6e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OpenTripPlanner",
      "analysis_timestamp": "2025-08-27T01:48:18.606509",
      "diff_size": 821591,
      "diff_lines": 19905
    },
    {
      "hash": "8db70007843cc5ba2becccfb64ad909a5792b5a9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T01:49:36.365445",
      "diff_size": 29008,
      "diff_lines": 645
    },
    {
      "hash": "8df02577158aa20afe557982b718ec99d4cee4db",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T01:49:42.615035",
      "diff_size": 22353,
      "diff_lines": 553
    },
    {
      "hash": "8e06b8e4ff3b0d9650c1dadaf88c877d4c925b65",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T01:50:00.454475",
      "diff_size": 672269,
      "diff_lines": 14533
    },
    {
      "hash": "8e172c8563a995808a72a1a7e81a06f3c2a355ce",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T01:51:16.639754",
      "diff_size": 572174,
      "diff_lines": 12501
    },
    {
      "hash": "8e180e8764d2dffd6c71ca399b51c24dcee268d6",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a fix for incorrect truncation of long to int when reading columns via block index (CASSANDRA-2376). This involves modifying the skipBytesFully method in FileUtils and replacing direct skips with this utility method across multiple files. The changes include altering method signatures, adding new logic for skipping bytes, and asserting conditions that change behavior by ensuring proper handling of large offsets.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T01:51:26.018800",
      "diff_size": 9056,
      "diff_lines": 209
    },
    {
      "hash": "8e26756ccecc457efb63fd719b153e272ed23218",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "hibernate-orm",
      "analysis_timestamp": "2025-08-27T01:51:36.509052",
      "diff_size": 19455991,
      "diff_lines": 534507
    },
    {
      "hash": "8e29b82d6daa689f07a8318bf194c8fb17133c95",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T01:51:44.371542",
      "diff_size": 374234,
      "diff_lines": 6855
    },
    {
      "hash": "8e2c4056caffb9695fa7fdf3a90c1c4f056adb97",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "platform_packages_apps_email",
      "analysis_timestamp": "2025-08-27T01:52:03.508935",
      "diff_size": 50831,
      "diff_lines": 825
    },
    {
      "hash": "8e50223bc01d390faf65ef3f67d42e279308b143",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'handleNoViableAlt' that encapsulates the logic previously contained in an inner loop. This refactoring combines code movement with functional changes, as it now handles the no viable alt scenario by returning a BitSet instead of throwing directly, which alters the control flow and behavior. The change includes conditional checks (if statements) and loops over ATNConfig objects, indicating added complexity beyond simple structural reorganization.",
      "llm_confidence": "high",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T01:53:28.188255",
      "diff_size": 2070,
      "diff_lines": 50
    },
    {
      "hash": "8e5a67bfb24968ccfa3dcd8e9a57d08d10fd327c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "restfb",
      "analysis_timestamp": "2025-08-27T01:53:47.697967",
      "diff_size": 39859,
      "diff_lines": 1279
    },
    {
      "hash": "8e5e4a061935de44f8a29bc95714c22c74c51ef0",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T01:53:57.538746",
      "diff_size": 33036,
      "diff_lines": 808
    },
    {
      "hash": "8e61795dbffa298331386a3edaa96f17444f57e8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a functional change by replacing the MilestoneTracker dependency with LatestMilestoneTracker. This indicates a shift in how the latest milestone index is obtained, as it now uses snapshotProvider.getLatestSnapshot().getHash() instead of milestoneTracker.latestSolidSubtangleMilestone. The method signature changes from taking MilestoneTracker to LatestMilestoneTracker, and the logic inside getEntryPoint alters the source of the hash returned based on a different condition (using snapshotProvider methods). This constitutes a functional change as it modifies the behavior by changing the underlying implementation details.",
      "llm_confidence": "high",
      "project_name": "iri",
      "analysis_timestamp": "2025-08-27T01:54:07.118895",
      "diff_size": 2443,
      "diff_lines": 47
    },
    {
      "hash": "8e6820ac6079cb287c1de9e061c567cf6d13f170",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the method signature of `evalSemanticContext` by replacing one parameter with another, which is a behavioral modification. Additionally, there are changes to the constructor and fields of `PredicateEvalInfo`, including renaming parameters (`requiresFullContext` to `fullCtx`) and altering the meaning (from requiring full context evaluation to indicating whether it was during LL or SLL prediction). These modifications affect how the method behaves and what information is stored in objects.",
      "llm_confidence": "high",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T01:54:13.587633",
      "diff_size": 4578,
      "diff_lines": 96
    },
    {
      "hash": "8e69a5b99d0b23236ce523ca6cdc1de1445d2f5e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T01:55:32.434572",
      "diff_size": 43047,
      "diff_lines": 1161
    },
    {
      "hash": "8e7e0ef56670df203b47b0bf6425bc6ef7a9c0d3",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Multiverse-Core",
      "analysis_timestamp": "2025-08-27T01:56:49.024506",
      "diff_size": 141026,
      "diff_lines": 3101
    },
    {
      "hash": "8e8a4e26d86fb029de4bfdeccf3c489af7afb015",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T02:00:38.175910",
      "diff_size": 194327,
      "diff_lines": 3282
    },
    {
      "hash": "8e8e14c6382bf54bf66e6b6ff89531fb7301798d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality for handling the 'response_type' parameter and calculating token hashes, which alters the behavior of the code. Specifically, it adds conditional logic to parse response types and perform HMAC-based hashing operations when processing authentication requests with a specific response type.",
      "llm_confidence": "high",
      "project_name": "OpenID-Connect-Java-Spring-Server",
      "analysis_timestamp": "2025-08-27T02:00:46.399530",
      "diff_size": 4245,
      "diff_lines": 95
    },
    {
      "hash": "8ecd8f45b534f30f5ec2264e7f85b149b643235b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "grails-core",
      "analysis_timestamp": "2025-08-27T02:01:00.490946",
      "diff_size": 615056,
      "diff_lines": 13601
    },
    {
      "hash": "8ee23b8a68f70c1e1c559000871efb9550601c15",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T02:01:19.597971",
      "diff_size": 53710,
      "diff_lines": 1296
    },
    {
      "hash": "8ee25a888f789de4d7811a0ba96faf8d27a6e8d1",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T02:02:36.339722",
      "diff_size": 80263,
      "diff_lines": 1968
    },
    {
      "hash": "8f000d273d0c6b786cf6b410d2a5cdbea7a25fa7",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method `getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule` which replaces the existing logic in two places. This method splits configurations based on semantic validity, altering the control flow and adding conditional checks beyond simple renaming or movement. Additionally, it changes the behavior by considering both syntactically viable paths with failed predicates and semantically invalid ones, whereas the old code only considered true predicates. The new method also removes a call to `filterForTruePredicates` which was previously used for predicate evaluation, indicating a functional change in how decisions are handled.",
      "llm_confidence": "high",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T02:02:44.810611",
      "diff_size": 5161,
      "diff_lines": 124
    },
    {
      "hash": "8f2896d7b4beafeaa6fd9a603fc1edf031581ce1",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T02:02:56.420795",
      "diff_size": 341947,
      "diff_lines": 7261
    },
    {
      "hash": "8f2cde0fc1532af5205e5647193b25874a321ea7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method rename from 'onSpeedUpdate' to 'onSpeedAltitudeAndClimbRateUpdate' in Drone.java, which changes the interface method signature. This is coupled with a change in TelemetryFragment where new variables and logic are added for displaying climb rate data. The introduction of conditional behavior (handling different update types) indicates functional changes beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T02:03:05.833864",
      "diff_size": 2937,
      "diff_lines": 70
    },
    {
      "hash": "8f2d45e6806589e065f8bd672ffba479c0c6f8e2",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T02:03:13.812783",
      "diff_size": 28080,
      "diff_lines": 649
    },
    {
      "hash": "8f355ca2c25836784085f55eb464ad12ffaa1716",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T02:03:54.667893",
      "diff_size": 536466,
      "diff_lines": 10994
    },
    {
      "hash": "8f7348f717c64791d2c3d869f8e3d7bd884efd72",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include structural modifications (renaming variables and methods, adding new imports) but also functional alterations. Specifically, the introduction of a Gallery view with its own adapter indicates a change in functionality to handle images differently. Additionally, there are logic changes such as updating the gallery list dynamically when bricks are added or removed, which alters the behavior compared to pure structural refactoring.",
      "llm_confidence": "medium",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T02:05:21.783103",
      "diff_size": 16329,
      "diff_lines": 316
    },
    {
      "hash": "8f915277aedc1376318279c07064843ccb18a3a5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "graylog2-server",
      "analysis_timestamp": "2025-08-27T02:05:35.688280",
      "diff_size": 203805,
      "diff_lines": 5517
    },
    {
      "hash": "8f9f5b0065db47207d4541091bd197ec96f49890",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-27T02:05:45.465715",
      "diff_size": 240128,
      "diff_lines": 6578
    },
    {
      "hash": "8fb64e420f06a953e95414413c2a4d0f05db130c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jcommander",
      "analysis_timestamp": "2025-08-27T02:07:02.385188",
      "diff_size": 85127,
      "diff_lines": 2469
    },
    {
      "hash": "8fd5ed8014837ddccbb1d5dd794257038e052eec",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The diff introduces a new method `markReferenced` in ColumnFamilyStore that changes the way sstables and memtables are acquired and released. This includes modifications to method signatures, addition of conditional logic for token handling, and changes to exception handling (finally blocks). Specifically, the introduction of `ViewFragment` with its own structure and parameters indicates a shift from simple structural reorganization to functional changes that affect how data is retrieved and processed.",
      "llm_confidence": "medium",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T02:09:44.386990",
      "diff_size": 14343,
      "diff_lines": 302
    },
    {
      "hash": "8fda9c757058bce25d04f8e6b4afa62c38cb911e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T02:10:01.843990",
      "diff_size": 91543,
      "diff_lines": 2221
    },
    {
      "hash": "8fe58cd63855348ea4fa789cc9e46a8b231d9ff0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T02:10:54.425242",
      "diff_size": 1150750,
      "diff_lines": 24433
    },
    {
      "hash": "8ffe684d94a77ca10946f77a2863a82ee77a0dbc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new feature for refreshing user tags, including conditional logic based on time intervals and manual refresh options. It adds new classes (SyncActionReceiver) and methods (onRefreshRequested, performSyncAction), modifies existing ones to handle asynchronous operations with notifications and error handling, and includes performance optimizations by running tasks in background threads.",
      "llm_confidence": "high",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-27T02:11:03.344062",
      "diff_size": 15934,
      "diff_lines": 366
    },
    {
      "hash": "90074b924273976d742fec671f192e522b658ee8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "tatami",
      "analysis_timestamp": "2025-08-27T02:11:11.956586",
      "diff_size": 79517,
      "diff_lines": 1553
    },
    {
      "hash": "901194ae77358b49016a32e6c97e74a70cbbb261",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in Descriptor.java and DownloadFromUrlInstaller.java introduce new functionality by modifying method signatures (getId() to getDownloadableId()) and adding a helper method. The introduction of the 'getDownloadableId' method with different logic compared to the deprecated getId() suggests functional changes, specifically related to how identifiers are derived from class names. Additionally, in class-entry.jelly, there's a change that adds conditional behavior (j:choose) which wasn't present before, altering the way hidden inputs are generated based on new conditions.",
      "llm_confidence": "high",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-27T02:11:20.963963",
      "diff_size": 4279,
      "diff_lines": 89
    },
    {
      "hash": "90170d1594c3a88f0a7b6a25da7161bb7af2e552",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T02:11:31.117680",
      "diff_size": 2089496,
      "diff_lines": 47235
    },
    {
      "hash": "902372aeae40d3bdcca2a9ce9c46f8023a5e7d29",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality by refactoring the resource classes and adding a deserializer for CircuitBreaker. The changes include modifying method signatures to use static PATH constants, which is structural but also involve logic changes such as exception handling in getCircuitBreakerStatus (now returning HTTP status) and introducing a new class StringTenacityPropertyKeyFactory that alters property key behavior by converting strings to uppercase. These functional modifications indicate floss refactoring.",
      "llm_confidence": "high",
      "project_name": "tenacity",
      "analysis_timestamp": "2025-08-27T02:12:58.674703",
      "diff_size": 19487,
      "diff_lines": 380
    },
    {
      "hash": "9035881e3d8bc714bcb3913ca2df05bdf6a9b8e5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit changes variable names from 'format' to 'formats' and updates the method signature in two classes. However, it also modifies the condition for filtering file info by changing the attribute name from 'format' to 'formats'. This change affects how the code processes file formats, indicating a functional modification rather than pure structural refactoring.",
      "llm_confidence": "medium",
      "project_name": "dita-ot",
      "analysis_timestamp": "2025-08-27T02:13:07.141807",
      "diff_size": 3381,
      "diff_lines": 69
    },
    {
      "hash": "904cb5d10e0de1a6ca89249be8c257ed38a80ef0",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T02:13:34.372052",
      "diff_size": 2502517,
      "diff_lines": 52295
    },
    {
      "hash": "9062e47c431e291f8f234eb884dfa08a693c7eee",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'ScriptFileWatcher' and refactors the existing Scripting class. The key changes include adding conditional logic for synchronization, modifying method signatures (e.g., removing 'menu' parameter from setMenu), and introducing performance optimizations with file watching threads. Additionally, there are behavioral modifications such as copying example scripts in multiple places which alters how script directories are initialized.",
      "llm_confidence": "high",
      "project_name": "openpnp",
      "analysis_timestamp": "2025-08-27T02:13:43.870026",
      "diff_size": 20639,
      "diff_lines": 548
    },
    {
      "hash": "9063ceabc9a41825a09db811f74821537dfe726b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T02:13:53.857879",
      "diff_size": 4758055,
      "diff_lines": 104000
    },
    {
      "hash": "9075d8988d7d5f99e5358f4ade97e68f5758904a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the behavior of EchoedRow by adding a new parameter and modifying its logic to check for deleted column families. Additionally, it adds a method to Util that performs compaction with forceDeserialize option, which is a functional change. The test cases are updated to reflect these changes.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T02:14:03.396320",
      "diff_size": 8696,
      "diff_lines": 185
    },
    {
      "hash": "9076012e61a67f81134c5d0d51c7c8363c565ac0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "iri",
      "analysis_timestamp": "2025-08-27T02:14:11.643087",
      "diff_size": 33128,
      "diff_lines": 602
    },
    {
      "hash": "908520f09a46017e868cf2ca7827523a550a84eb",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T02:14:34.847722",
      "diff_size": 40885,
      "diff_lines": 1302
    },
    {
      "hash": "9097e988bd4f1b8f53876fed1b1a7244740a43a8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T02:15:51.824258",
      "diff_size": 258718,
      "diff_lines": 5760
    },
    {
      "hash": "90a49f9d5a93b4f54ca055a8b1dda837e667b368",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality by modifying the date display logic in ProjectAdapter to show 'Today' or 'Yesterday' based on the project's last modification time, which is a behavioral change. It also adds corresponding strings for German and English locales (in values-de/strings.xml and values/strings.xml) that are used in this context. The method signature changes from Set<String> to List<String> in MessageContainer.java indicate a functional alteration as return types or exception handling might be affected, though the logic remains similar.",
      "llm_confidence": "medium",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T02:16:01.112745",
      "diff_size": 13141,
      "diff_lines": 306
    },
    {
      "hash": "90af56352bc255e9af07b9d6ace2f9aa6adda3dc",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "basex",
      "analysis_timestamp": "2025-08-27T02:16:09.369781",
      "diff_size": 869693,
      "diff_lines": 23582
    },
    {
      "hash": "90b049500c6efda43b8bfa6588f4aa8a595030a3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-27T02:16:31.063987",
      "diff_size": 264550,
      "diff_lines": 5592
    },
    {
      "hash": "90be0ef4736e69c68f5ab8161be413b5313ed528",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality by adding a public enum `FacebookPermission` and several new fields to existing classes. It also creates a new class for handling post click configurations, which is not merely structural movement but adds distinct features. The changes include modifications to method signatures (e.g., renaming base classes) and the addition of conditional logic in tests that verifies these new behaviors.",
      "llm_confidence": "high",
      "project_name": "restfb",
      "analysis_timestamp": "2025-08-27T02:16:41.050882",
      "diff_size": 16483,
      "diff_lines": 457
    },
    {
      "hash": "90c54d7094a4a1f2d7b018deaa9d28d62c451fb3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces changes that alter the method signatures and behavior of existing methods. In DeaconObservable.java, the notifyObserversError method is renamed to notifyObserversError (with a typo in 'error' parameter name) but more importantly, it now takes a DeaconError object instead of nothing, changing its functionality. Similarly, notifyObserversDisconnect was modified to take a DeaconError parameter and rename to onDisconnect with that change. In DeaconObserver.java, the interface methods onError and onDisconnect were updated to include a DeaconError parameter, which affects how implementing classes must handle these events. The DemoMain.java file shows an implementation of onDisconnect being changed from void to taking a DeaconError argument, altering its behavior by requiring error data. These changes involve adding parameters that change the method's purpose and require adjustments in dependent code, indicating functional modifications rather than pure structural refactoring.",
      "llm_confidence": "high",
      "project_name": "Deacon",
      "analysis_timestamp": "2025-08-27T02:16:50.780021",
      "diff_size": 3474,
      "diff_lines": 116
    },
    {
      "hash": "90d6408d1287a3c2b7f2deca77bf932064667820",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "gephi",
      "analysis_timestamp": "2025-08-27T02:17:06.519677",
      "diff_size": 228823,
      "diff_lines": 4877
    },
    {
      "hash": "90f7a179493cf896515263638ef6383ceaa541c8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T02:17:15.961949",
      "diff_size": 33160,
      "diff_lines": 668
    },
    {
      "hash": "910b663b443505204e366292ba8a1c668c54d9ae",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T02:18:34.070720",
      "diff_size": 875776,
      "diff_lines": 20283
    },
    {
      "hash": "9111b3c05bcd79798571f53d6fbba4c1e525d886",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality by adding JUnit annotations and modifying test methods to use ConfigManager for clearing configurations. This includes adding @After, @Before, and @BeforeEach (or similar) methods across multiple test classes that perform actions beyond simple structural changes, such as ensuring cleanup of resources or state between tests. These changes affect the behavior by altering how tests are set up and torn down, which is a functional change.",
      "llm_confidence": "high",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T02:18:42.681704",
      "diff_size": 13207,
      "diff_lines": 298
    },
    {
      "hash": "9122a902fa165a88ffe36375784595426158eb8e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T02:18:58.337552",
      "diff_size": 10078,
      "diff_lines": 251
    },
    {
      "hash": "912734ee3c9d8fe969c360158f2560f5f7fd07b2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "FTBLaunch",
      "analysis_timestamp": "2025-08-27T02:19:06.863062",
      "diff_size": 21755,
      "diff_lines": 395
    },
    {
      "hash": "912fdb3ea4ff58ae9e1fe0c9b230ec76273ff601",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T02:19:16.957836",
      "diff_size": 129626,
      "diff_lines": 2610
    },
    {
      "hash": "91311cef032ae0304d7f92b1ac84778682ed7ac9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit involves a significant refactoring where the test file name is changed from CostumeActivityTest.java to CostumeFragmentTest.java, indicating a structural change. However, within this context, there are multiple changes in the code that involve method calls being redirected from getActivity().getCurrentActivity() to getCostumeFragment(), which introduces new conditional logic and alters how methods access the UI components. This redirection implies a functional change as it modifies the way the system interacts with fragments, potentially affecting behavior by ensuring correct fragment instances are used.",
      "llm_confidence": "medium",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T02:19:27.127659",
      "diff_size": 9027,
      "diff_lines": 158
    },
    {
      "hash": "9138ce8a14924612c014da2b6e727b4117ba1a92",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "platform_packages_apps_calendar",
      "analysis_timestamp": "2025-08-27T02:19:35.937195",
      "diff_size": 149239,
      "diff_lines": 3736
    },
    {
      "hash": "9154a6fb7a6a4c0d1c5c91306e081fd9b159354c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-27T02:19:45.503003",
      "diff_size": 21917,
      "diff_lines": 613
    },
    {
      "hash": "91554bc84b8a1f022f6430a8767739673ac60449",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve adding a new dependency in pom.xml, refactoring test method names and parameters, and updating the code to use extension loader for address listeners. The commit introduces no functional changes as it only updates dependencies and renames methods/variables without altering their behavior or logic.",
      "llm_confidence": "high",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T02:19:52.869010",
      "diff_size": 18636,
      "diff_lines": 373
    },
    {
      "hash": "916bb13677108a084e9d7f8fffc666c5d76cf091",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T02:20:03.912364",
      "diff_size": 278013,
      "diff_lines": 6531
    },
    {
      "hash": "917c3a39c3512be79ae9c0fc5dca6a8705ad2e05",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T02:20:16.445824",
      "diff_size": 190625,
      "diff_lines": 5578
    },
    {
      "hash": "9180272eb69e1749f7b8cf5a18e36e255e7d2013",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T02:21:32.739990",
      "diff_size": 724407,
      "diff_lines": 18635
    },
    {
      "hash": "919a8964a83511d96766c3e53ba603e77bca626c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T02:25:24.543290",
      "diff_size": 15306595,
      "diff_lines": 340988
    },
    {
      "hash": "919f3a4ca0864868ad4d6188ff14084710685881",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "spark",
      "analysis_timestamp": "2025-08-27T02:26:41.561221",
      "diff_size": 122891,
      "diff_lines": 3504
    },
    {
      "hash": "91a0574d0884d9d1041251a17f3277de258077ee",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "iri",
      "analysis_timestamp": "2025-08-27T02:28:01.198109",
      "diff_size": 169671222,
      "diff_lines": 2012651
    },
    {
      "hash": "91a92bff192810164d780ddac0dadead70706477",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method signature change from unpackLwjgl to unpackNatives, which alters the parameter structure and behavior. Additionally, it adds new conditional logic for reading native files via BufferedReader and InputStreamReader, changing how file paths are handled based on operating system type. The return value of the method is now dependent on the input string 'path', indicating a functional change rather than pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "Spout",
      "analysis_timestamp": "2025-08-27T02:28:10.161327",
      "diff_size": 12206,
      "diff_lines": 299
    },
    {
      "hash": "91b8b8df83d7d25fa89c347cc0074107add46417",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method signature and logic changes in multiple files. In SchematicMask.java, the isAlreadyBuilt method now uses a different property check (WorldPropertyIsReplaceable) instead of checking for soft blocks. This change alters the behavior because it replaces one condition with another that may not be equivalent. Additionally, in TileFiller.java, the getIconGlowLevel method was removed and replaced by a more complex logic in BuildingItem.java involving block breaking and item dropping which changes how the builder writes to world. These functional changes indicate a shift from simple structural modifications to behavior-altering code updates.",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T02:28:16.779862",
      "diff_size": 16880,
      "diff_lines": 442
    },
    {
      "hash": "91bdf7fb4220b27e9566c6673bf5dbd14153017c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T02:28:25.169322",
      "diff_size": 1281407,
      "diff_lines": 29554
    },
    {
      "hash": "91c8480933a42e15df91d3c2fecf7fee3deaa6c7",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-27T02:28:56.531673",
      "diff_size": 92768,
      "diff_lines": 2372
    },
    {
      "hash": "91f60f8e3f425f1af224c69217ad26d087fb28b4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "restfb",
      "analysis_timestamp": "2025-08-27T02:31:36.145890",
      "diff_size": 77607,
      "diff_lines": 1960
    },
    {
      "hash": "92147c3597308bc05e6448ccc41409fcc7c05fd7",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-27T02:34:12.871572",
      "diff_size": 673604,
      "diff_lines": 14259
    },
    {
      "hash": "921749ddd419dc88d14800bb94d19b6177fbd3d9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include modifications to method signatures and behavior, such as the addition of a new parameter in didActivate (Namespace ns) which affects how components are wired. There is also removal of transient fields (_everWillPassivate and _everDidActivate) that were used for state management, indicating a change in functional approach.",
      "llm_confidence": "medium",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T02:35:38.248815",
      "diff_size": 5890,
      "diff_lines": 155
    },
    {
      "hash": "922ab7cc040092beb669d16d59f64cfbe44b1841",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'DeskShareRTMPBroadcastEvent' with additional fields (channels, sampleRate, vw, vh, fps) and modified method signatures for setting and getting these values. This change alters the behavior by replacing the string parameter in methods like deskShareRTMPBroadcastStarted() with more specific types (Integer, Double). Additionally, new logic is added to handle RTMP broadcasts differently from file recordings, including conditional checks based on event parameters and different handling paths. The introduction of a new method 'isRTMPStream' that analyzes the event path for specific substrings indicates a change in how events are processed, which affects functionality.",
      "llm_confidence": "high",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T02:35:48.297076",
      "diff_size": 15054,
      "diff_lines": 281
    },
    {
      "hash": "92396054a43e3625005ba45228d29b5dace44421",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-27T02:35:55.977510",
      "diff_size": 209014,
      "diff_lines": 5870
    },
    {
      "hash": "9244999d42d1092e3bf4095f1291a8bb1c6f3c50",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T02:36:25.728760",
      "diff_size": 1091454,
      "diff_lines": 22440
    },
    {
      "hash": "924c172316b817d047a74c07e276ecf61ce91062",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces several changes that alter the behavior of the code. In BaseIotaConfig.java, constants are updated (GLOBAL_SNAPSHOT_TIME and MILESTONE_START_INDEX) which likely affects functionality without explanation from pure structural criteria. Additionally, API.java refactors getTransactionsToApproveStatement by moving it to a private method with different parameter handling and return type structure, including explicit validation checks now done in the new method while relying on exceptions for error propagation. The storeMessageStatement method is renamed and its implementation changes significantly: it now uses api.getTransactionToApproveTips instead of api.getTransactionsToApproveStatement internally, which may change how transactions are approved or attached due to different tip selection logic. These modifications include functional changes like input validation and exception handling that go beyond simple structural improvements.",
      "llm_confidence": "low",
      "project_name": "iri",
      "analysis_timestamp": "2025-08-27T02:36:34.656985",
      "diff_size": 11661,
      "diff_lines": 251
    },
    {
      "hash": "9258ac62a4f856c8ff48c9f8f07cdbec186a9744",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-27T02:38:07.335264",
      "diff_size": 230072,
      "diff_lines": 5168
    },
    {
      "hash": "9261a857ec9e954e53adf06b011ec0c3e4a36bb6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "iri",
      "analysis_timestamp": "2025-08-27T02:39:25.948465",
      "diff_size": 126791716,
      "diff_lines": 1495652
    },
    {
      "hash": "926776204b9dc18eedac34a749932c4b8f0510a9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "github-api",
      "analysis_timestamp": "2025-08-27T02:39:40.255129",
      "diff_size": 11790,
      "diff_lines": 315
    },
    {
      "hash": "9278bccf45feae83b90923705be559f029c08372",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OpenTripPlanner",
      "analysis_timestamp": "2025-08-27T02:39:56.527015",
      "diff_size": 792962,
      "diff_lines": 18104
    },
    {
      "hash": "927a7e5afa18358174d244ec09d89d18b81e4a74",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T02:40:20.612640",
      "diff_size": 103853,
      "diff_lines": 2300
    },
    {
      "hash": "927df1559e0596bff2799062e70d5db797007ec2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "MinecraftForge",
      "analysis_timestamp": "2025-08-27T02:41:37.605588",
      "diff_size": 115795,
      "diff_lines": 2023
    },
    {
      "hash": "92843c6efd80fd2ddbd69d41dbeb9c736e5a5963",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve restructuring the QueryResources class and related components, but there are functional modifications. In QueryResources.java, the method create() now includes a check for MainOptions.FORCECREATE option before throwing BXXQ_NEWDB error if openDB is false. This alters the behavior by adding conditional logic based on an additional context parameter. Also, in Err.java, the message text for BXXQ_NEWDB was changed from 'Database % cannot be opened.' to 'Opening new resources is not permitted.', which changes the user-facing error message without altering functionality but still represents a functional change. The FNXQueryTest.java updates include adding test cases that now use different query strings and expected errors, indicating behavioral adjustments in testing.",
      "llm_confidence": "high",
      "project_name": "basex",
      "analysis_timestamp": "2025-08-27T02:41:47.645443",
      "diff_size": 5340,
      "diff_lines": 113
    },
    {
      "hash": "9299ddccac55d3560ac4ff472961c86c180d1b80",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T02:42:02.446290",
      "diff_size": 150881,
      "diff_lines": 3284
    },
    {
      "hash": "929adc516289d5396234ecd180be45e8d249c449",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include method signature modifications (renaming 'find' to 'findById' and updating parameter types), addition of new conditional logic in the form of a warning message, and deprecation annotations. These structural changes are coupled with functional behavior shifts as they update how descriptors are identified and handle legacy compatibility issues.",
      "llm_confidence": "medium",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-27T02:42:12.975689",
      "diff_size": 12445,
      "diff_lines": 239
    },
    {
      "hash": "92a688e5b2938b7251441335a657df36bb5e9eea",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "netty",
      "analysis_timestamp": "2025-08-27T02:42:22.070229",
      "diff_size": 677217,
      "diff_lines": 16979
    },
    {
      "hash": "92ba91de1483e64d173b135c73012851bd372cbe",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'setCreatedDate' and modifies the way creation dates are handled, particularly by using GregorianCalendar for setting minDate in date pickers. This includes conditional logic based on API version and explicit handling of created dates which alters the behavior compared to directly parsing and formatting the date.",
      "llm_confidence": "medium",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T02:42:30.018443",
      "diff_size": 3780,
      "diff_lines": 75
    },
    {
      "hash": "92d93309b4eca03e639a5b027e484ac52f049ef1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class InvokedMethodListenerInvoker and an enum InvokedMethodListenerSubtype, which changes the method signature of runInvokedMethodListeners from boolean to enum parameter. This is a behavioral modification as it now distinguishes between BEFORE_INVOCATION and AFTER_INVOCATION contexts differently than before. Additionally, there are logic changes in how listeners are invoked based on their subtype (SIMPLE or EXTENDED). The testng.iml file change adds Maven dependencies which may affect the build structure but does not impact code functionality.",
      "llm_confidence": "high",
      "project_name": "testng",
      "analysis_timestamp": "2025-08-27T02:42:39.830563",
      "diff_size": 16261,
      "diff_lines": 370
    },
    {
      "hash": "92f3e63ed38a8486f3090fa9d77604ed69b6c8f9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T02:42:48.469672",
      "diff_size": 117330,
      "diff_lines": 2950
    },
    {
      "hash": "93496e826e7382adf52a99d4df38e73a43f892de",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T02:49:12.801053",
      "diff_size": 1761148,
      "diff_lines": 37203
    },
    {
      "hash": "9359e1e977361774daf27e80112774210e55baa4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T02:50:29.630973",
      "diff_size": 294308,
      "diff_lines": 6174
    },
    {
      "hash": "935bcf1e8732a4138c15205896945c2f02ddb844",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T02:51:46.508163",
      "diff_size": 10186677,
      "diff_lines": 223761
    },
    {
      "hash": "935ed9867b088e251ed7f2fd69d284a4510454d8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jackrabbit-oak",
      "analysis_timestamp": "2025-08-27T02:53:03.142026",
      "diff_size": 124236,
      "diff_lines": 2863
    },
    {
      "hash": "93797d8d0b6decd23da91f5725a98d1d4ee8d2bc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T02:53:12.034132",
      "diff_size": 321209,
      "diff_lines": 5957
    },
    {
      "hash": "937adfa5b1bee9c0b2122d5682b9c754854fbec0",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T02:53:29.023537",
      "diff_size": 64345,
      "diff_lines": 1364
    },
    {
      "hash": "937d1436a9b1720229d5438df2e58a1832a4b037",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T02:54:18.156279",
      "diff_size": 43167,
      "diff_lines": 937
    },
    {
      "hash": "938103972db05ebfb1fbf649a4b834113dd7c954",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T02:55:35.048646",
      "diff_size": 232884,
      "diff_lines": 3741
    },
    {
      "hash": "9395c9e3abfba6e142cd9b5fac2caec2c8c31001",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Rajawali",
      "analysis_timestamp": "2025-08-27T02:59:26.912101",
      "diff_size": 330633,
      "diff_lines": 8449
    },
    {
      "hash": "93b64f7b355a64d752e7f73d8ad4127004616c70",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T03:00:43.304389",
      "diff_size": 1164533,
      "diff_lines": 25366
    },
    {
      "hash": "93bd89fbba7d76821d3d85ae371cb2e665176b6a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T03:03:17.547444",
      "diff_size": 1136024,
      "diff_lines": 24683
    },
    {
      "hash": "93c085fdd6d9955e1034d0e68ee752a2e3f75bde",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "restfb",
      "analysis_timestamp": "2025-08-27T03:03:51.049228",
      "diff_size": 71778,
      "diff_lines": 2186
    },
    {
      "hash": "93c7eb72fbbf93938043566dfc1707b6714f325b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T03:05:08.012155",
      "diff_size": 344943,
      "diff_lines": 7131
    },
    {
      "hash": "93c9d2844f7b1ce16d95b6e284552357d11aa934",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The commit primarily updates the documentation and release notes (HISTORY, manual.html, download.xml) to reflect new versions and bug fixes. In HISTORY, it adds entries for two bugs fixed in version 1.2.3 but does not change code logic. The changes to PropertyConfigurator.java add 'ThrowableInformation' as a parameter type that was already present, updating comments without altering behavior. SyslogWriter.java updates the method signature for DatagramPacket creation by using a more efficient approach with explicit byte array handling and length calculation, which is an optimization but does not change functionality since it uses existing classes (NullEnumeration) unchanged. The changes to NullEnumeration.java only update access modifier from non-static to static, preserving its singleton behavior. SyslogWriter.java updates the method signature for DatagramPacket creation by using a new variable 'address' and constant SYSLOG_PORT, which is an improvement but does not alter the core functionality of sending log messages via UDP packets. The most significant change in code files (ThrowableInformation.java) involves updating comments to clarify its purpose without modifying any behavior or adding new features.",
      "llm_confidence": "low",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-27T03:05:17.514740",
      "diff_size": 9402,
      "diff_lines": 292
    },
    {
      "hash": "93ce4942004272f083274698c47aa27bd8bbc72c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "connectbot",
      "analysis_timestamp": "2025-08-27T03:05:28.819836",
      "diff_size": 81226,
      "diff_lines": 2036
    },
    {
      "hash": "93d2a7aae27ec6fb915887d76bf20c47bffb7826",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T03:05:37.856420",
      "diff_size": 183750,
      "diff_lines": 3933
    },
    {
      "hash": "93ef5fa8492bfdb44f6a91edb34818fbfb35c9e5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new conditional check for token comparison and validates the partitioner type, altering the behavior of key range validation. This includes adding exception handling logic that depends on specific conditions (startToken.compareTo(finishToken) > 0 && !finishToken.equals(p.getMinimumToken())), which falls under behavioral modifications as per FLOSS indicators.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T03:07:02.812708",
      "diff_size": 3629,
      "diff_lines": 71
    },
    {
      "hash": "93f9ea3ff490ccc01deca583da2a62e702d4baba",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T03:07:14.683347",
      "diff_size": 36556,
      "diff_lines": 899
    },
    {
      "hash": "9403948ef0fdd89f2d86866912ba2e8cf180b216",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T03:07:25.836469",
      "diff_size": 17036,
      "diff_lines": 477
    },
    {
      "hash": "941e50af1787a4446f4ad77f306468fc91b47717",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T03:07:34.905046",
      "diff_size": 33103,
      "diff_lines": 769
    },
    {
      "hash": "94366cc8eab74954971c0f4e697934e4b73ec020",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'createCCNAccount' and modifies the existing writeSingleFileHitsToBlackBoard method to handle credit card number (CCN) hits differently. This includes adding conditional logic based on keyword type, creating a separate account instance for CCN hits with additional attributes and logging, which alters the behavior of the code by introducing specialized handling for credit card numbers. The changes include new attribute additions, different artifact creation, and specific parsing patterns that are not present in the original structure.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T03:07:44.057824",
      "diff_size": 28937,
      "diff_lines": 490
    },
    {
      "hash": "943e6b242e2258d7a06da2a61382df3d193af2aa",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve a mix of structural and functional refactoring. In PreviewNode.java, the constructor was renamed from 'PreviewNode(PreviewController controller)' to 'PreviewNode()', which is more than just renaming as it removes the parameter but still uses it internally via Lookup.getDefault().lookup(PreviewController.class). This indicates a change in behavior or dependency injection approach. Additionally, the method call inside the new constructor (super(Children.LEAF)) does not use the removed parameter, suggesting that the PreviewController instance is now obtained differently and might affect how the node interacts with its parent class. In PreviewSettingsTopComponent.java, the instantiation of PreviewNode changed from 'new PreviewNode(controller)' to 'new PreviewNode()', which again implies a change in dependency injection or initialization logic.",
      "llm_confidence": "high",
      "project_name": "gephi",
      "analysis_timestamp": "2025-08-27T03:07:53.369645",
      "diff_size": 4591,
      "diff_lines": 102
    },
    {
      "hash": "943e9b621902378327dc6721f28beaff67121b56",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-27T03:08:16.922286",
      "diff_size": 42880,
      "diff_lines": 950
    },
    {
      "hash": "9446653f57bfbf24c01e9451823948e596d37766",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Antox",
      "analysis_timestamp": "2025-08-27T03:08:28.889337",
      "diff_size": 37324,
      "diff_lines": 755
    },
    {
      "hash": "9447c655c92f3008cd916c696076e6c6f1431418",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Spout",
      "analysis_timestamp": "2025-08-27T03:09:45.055361",
      "diff_size": 38459,
      "diff_lines": 866
    },
    {
      "hash": "9478cfcb9f5cd150fc6d89bde948231d725f0b91",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T03:11:08.380112",
      "diff_size": 23782,
      "diff_lines": 533
    },
    {
      "hash": "9483e147ec675c6024b5f1a55c799cc15aa2239e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T03:11:17.062157",
      "diff_size": 4408793,
      "diff_lines": 106109
    },
    {
      "hash": "949ae30674b454d0ccc730e96f59367a2e59ddf6",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T03:11:28.426626",
      "diff_size": 217722,
      "diff_lines": 5304
    },
    {
      "hash": "94c2a24b12456144d5da75cff8c8b8f58f972b2f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T03:14:44.436107",
      "diff_size": 11297,
      "diff_lines": 274
    },
    {
      "hash": "94ca6aedbc4b389d53bb6c8e6f9568c5c8ccdbf7",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T03:14:59.272122",
      "diff_size": 19438,
      "diff_lines": 451
    },
    {
      "hash": "94cfa47e00e11a20009e987724d42f0ebd1b482b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method signature for getDebugInfo in IDebuggable, changing from void getDebugInfo(List<String> info, EnumFacing side) to void getDebugInfo(List<String> left, List<String> right, EnumFacing side). This modification alters the parameters and structure of the interface method. Additionally, multiple classes implement this method with new logic that displays debug information differently, including conditional checks for specific tile entities and changes in how data is presented (e.g., splitting into two lists). These changes indicate functional modifications rather than pure structural refactoring.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T03:15:10.623294",
      "diff_size": 24610,
      "diff_lines": 485
    },
    {
      "hash": "9500542944dbccf52cd2c643f15bab3c86d2860f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T03:15:39.901760",
      "diff_size": 7346913,
      "diff_lines": 153737
    },
    {
      "hash": "952c6e536b90abe94874813030033975e33672a4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new feature with the addition of 'crc_check_chance' in CompressionParameters, which allows configuring the probability of performing CRC checks during decompression. This is evident from changes to CompressionParameters.java where a new field and validation logic are added for crcChance (lines 33-52). Additionally, CompressedRandomAccessReader.java now conditionally updates checksum based on this chance value, altering the behavior by introducing probabilistic error checking (line 88). These functional changes include adding conditional logic to handle different probabilities of CRC checks and modifying exception handling when the check fails. The introduction of a new configurable parameter also represents an addition of functionality.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T03:15:49.988509",
      "diff_size": 13372,
      "diff_lines": 287
    },
    {
      "hash": "9533c25ee1ba3e4ab15a7aa69fd7b3e23546a53f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T03:16:20.437268",
      "diff_size": 21296,
      "diff_lines": 480
    },
    {
      "hash": "953fdb7be1b25b18b24070f2653556f6c6bcd81a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T03:17:39.655556",
      "diff_size": 371262,
      "diff_lines": 7330
    },
    {
      "hash": "9544daa34dde518e796fae38d1fb12e819c0eb15",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T03:17:57.235087",
      "diff_size": 35743,
      "diff_lines": 758
    },
    {
      "hash": "954621f8df0f6a2f5040dfa46e81f2f7ba00e48e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-27T03:19:09.486829",
      "diff_size": 162216,
      "diff_lines": 3390
    },
    {
      "hash": "9553dae93ba328f3538b213051d180c21717c158",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T03:21:44.191468",
      "diff_size": 5759715,
      "diff_lines": 131827
    },
    {
      "hash": "9555ae3bc1287daa27151456a1f266bdc1640e51",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The commit primarily involves renaming packages and classes within the remote API functionality, with no changes to method signatures or logic. The AndroidManifest.xml updates are simple renames of activities without altering their behavior. In ProviderHelper.java, there is a comment change indicating that certain fields were previously handled by 'AppSettings' but now they are commented out; however, this does not imply functional changes as the functionality remains unchanged and the code was already part of the refactored package structure.",
      "llm_confidence": "high",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T03:21:54.566497",
      "diff_size": 15912,
      "diff_lines": 261
    },
    {
      "hash": "9561db559cbe69f1b6be4996295b661ab02c3790",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T03:22:03.002157",
      "diff_size": 49583,
      "diff_lines": 851
    },
    {
      "hash": "9562b9b69e08b84ec1e8e431a846548fa8a83b44",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T03:23:19.704777",
      "diff_size": 1767287,
      "diff_lines": 36749
    },
    {
      "hash": "956d95a56b9bd003fef82c67c576a6d1ae32d832",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fabric8",
      "analysis_timestamp": "2025-08-27T03:24:35.559804",
      "diff_size": 167753,
      "diff_lines": 3514
    },
    {
      "hash": "9570775404e80771e2ab877824da6f23167872a8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality by adding a method to check Bluetooth status and modifying the menu update logic. The onCreateOptionsMenu method now dynamically adds items based on Bluetooth state, which is a functional change affecting user interaction. Additionally, there are changes in variable names (e.g., 'connectBT' instead of 'connect') that imply different behavior but do not fully align with pure structural criteria due to the introduction of conditional logic and new methods.",
      "llm_confidence": "medium",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T03:24:43.869207",
      "diff_size": 3169,
      "diff_lines": 99
    },
    {
      "hash": "95720b442afaa08f90c7d130421e9912b68650d3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T03:24:53.636970",
      "diff_size": 45895,
      "diff_lines": 1231
    },
    {
      "hash": "957ffa713db6e2e578e6fe072aa27b3777610a43",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T03:25:41.807465",
      "diff_size": 41898,
      "diff_lines": 1034
    },
    {
      "hash": "958b93aef8c618f985c5aaf24a1373908a882075",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T03:25:49.379531",
      "diff_size": 22056,
      "diff_lines": 518
    },
    {
      "hash": "959cf6bcb359fc8b4743037978e686409955ea4f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jedis",
      "analysis_timestamp": "2025-08-27T03:26:01.718511",
      "diff_size": 72355,
      "diff_lines": 1634
    },
    {
      "hash": "959e1a22a0164db4c6347d43797e986d7d5a6d96",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "PinDroid",
      "analysis_timestamp": "2025-08-27T03:26:24.453282",
      "diff_size": 59926,
      "diff_lines": 1370
    },
    {
      "hash": "95db50d540db529649b1f517284278432e604c5e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T03:30:11.159719",
      "diff_size": 23433,
      "diff_lines": 634
    },
    {
      "hash": "95f94bde13225c2f330e783e9de6b256bef150bd",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T03:30:22.209415",
      "diff_size": 64464,
      "diff_lines": 1453
    },
    {
      "hash": "95fb613bf996c715392f9aa1f491609b6acaeff5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include a modification to the method signature of get_count by adding a final modifier, which alters behavior without being justified as pure structural change. Additionally, new conditional logic is introduced in CassandraServer.java where totalCount can exceed requestedCount and return it early, changing the algorithm's execution path.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T03:30:30.429215",
      "diff_size": 7723,
      "diff_lines": 169
    },
    {
      "hash": "9600165c267b893dde0366ab3004abfd0c7f7a51",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method extraction from multiple configuration settings in ClusterTestBase, replacing direct assignments with calls to configureSomeCommonValues. This change involves restructuring the code by introducing new methods and parameters (sharedStorage instead of fileStorage), which alters the way configurations are set for backup servers. Additionally, there is evidence of functional changes: the setupBackupServer method now uses a parameter 'Configuration configuration' that was not present before, indicating a shift in how server configurations are handled. The test files also show modifications to assertions and wait conditions, further supporting the classification as floss refactoring due to behavioral changes.",
      "llm_confidence": "medium",
      "project_name": "hornetq",
      "analysis_timestamp": "2025-08-27T03:30:40.001329",
      "diff_size": 15192,
      "diff_lines": 304
    },
    {
      "hash": "960174da67eb6008c73340e61700ea34ec550a12",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in AuthCache.java and related files introduce new functionality by adding a method parameter 'cacheEnabledDelegate' which replaces the existing 'enableCache' BooleanSupplier. This change allows for more flexible cache configuration, including disabling remote configuration via system property, thus altering behavior beyond pure structural reorganization.",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T03:30:47.613485",
      "diff_size": 21506,
      "diff_lines": 486
    },
    {
      "hash": "9601e5189e28836a056c8579cf18520c3ea46bc0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'tryToFindDuplicates' and modifies the template processing logic. It adds duplicate file checking functionality, changes the way index files are handled (now explicitly checking for duplicates before generating), and updates the copyright block in the template to use a macro instead of inline code. These changes include adding conditional logic and modifying existing behavior.",
      "llm_confidence": "high",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-27T03:30:54.212436",
      "diff_size": 14892,
      "diff_lines": 413
    },
    {
      "hash": "960e6f8e0adc6fe108f0a60a13a9a0b037505782",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jclouds",
      "analysis_timestamp": "2025-08-27T03:31:11.103283",
      "diff_size": 50477,
      "diff_lines": 1082
    },
    {
      "hash": "961755f88043d3d19ee85ab54b8501f0b9c058bf",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T03:31:31.730777",
      "diff_size": 527788,
      "diff_lines": 10414
    },
    {
      "hash": "961c29a28d27bc157d927bd40cb0b39be8ee1a43",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method rename from getDetectedTypes to getStandardDetectedTypes in FileTypeDetector.java, which changes the behavior by filtering out types with optional parameters. This is a functional change as it alters what the method returns and how it interacts with other parts of the code (e.g., replacing calls in MimeTypePanel.java, FilesSetRulePanel.java, InterestingItemDefsPanel.java). Additionally, there are comments indicating removal of optional parameters for compatibility, suggesting intent to modify behavior.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T03:31:40.808069",
      "diff_size": 6175,
      "diff_lines": 130
    },
    {
      "hash": "963edb4570af2bc6f8a8fffc3674ae68bced039d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "opencms-core",
      "analysis_timestamp": "2025-08-27T03:31:52.365298",
      "diff_size": 331848,
      "diff_lines": 7794
    },
    {
      "hash": "964679ad9a4d0f52c99c896a150672317ca8327b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T03:32:02.762840",
      "diff_size": 73159,
      "diff_lines": 1719
    },
    {
      "hash": "96491d806c07aba1aa15f934384cb4288863b466",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include more than just structural reorganization; there are functional changes such as adding new methods, changing method signatures, and modifying the logic for loading chunk data with protobuf support.",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T03:32:21.969861",
      "diff_size": 26720,
      "diff_lines": 626
    },
    {
      "hash": "96504ea633323a7a5c6bb75d4973da5033382238",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T03:33:38.474692",
      "diff_size": 226887,
      "diff_lines": 6332
    },
    {
      "hash": "9670844b41d7263c217aa69b1bb916931fb285a4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-27T03:36:13.049985",
      "diff_size": 59473,
      "diff_lines": 1426
    },
    {
      "hash": "96aa6ff76f4b1d7832996df69609375604b5e541",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T03:37:29.826265",
      "diff_size": 922858,
      "diff_lines": 22418
    },
    {
      "hash": "96b95a2908a608868b270e1fd9a3337dcef47a48",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-27T03:38:46.665890",
      "diff_size": 101963,
      "diff_lines": 2630
    },
    {
      "hash": "96cd13570806d3c157549fa747bd5ced8a7566b1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "iri",
      "analysis_timestamp": "2025-08-27T03:40:03.549899",
      "diff_size": 280849,
      "diff_lines": 6579
    },
    {
      "hash": "96d41f0e0e44d9b3114a5d80dedf12053d36a76b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T03:41:19.763949",
      "diff_size": 1754242,
      "diff_lines": 39888
    },
    {
      "hash": "96d7aeb57b5f03aa35e7db7c92770d86d853e608",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Java-WebSocket",
      "analysis_timestamp": "2025-08-27T03:42:36.667364",
      "diff_size": 59079,
      "diff_lines": 1516
    },
    {
      "hash": "96e0bdbb582b11fa689800273c62cf5ea5833235",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in ListCommandsPlugin.java and LsPlugin.java involve restructuring the printOutColumns method call by introducing a new parameter 'attr' which is an OutputAttributes object. This requires adding a FormatCallback interface to support callback functionality for formatting columns, indicating functional changes due to added conditional logic (handling different formats) and modification of existing methods to incorporate this behavior.",
      "llm_confidence": "medium",
      "project_name": "core",
      "analysis_timestamp": "2025-08-27T03:42:46.085331",
      "diff_size": 8533,
      "diff_lines": 218
    },
    {
      "hash": "96e10f91c531f3ecc2ec514ff5ebf3f94047b376",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "androidannotations",
      "analysis_timestamp": "2025-08-27T03:42:57.386908",
      "diff_size": 54503,
      "diff_lines": 1235
    },
    {
      "hash": "96e11a9ca187d39c07a5da4d657a2843bff4aef8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OpenTripPlanner",
      "analysis_timestamp": "2025-08-27T03:43:34.451188",
      "diff_size": 68128,
      "diff_lines": 1700
    },
    {
      "hash": "96e25bdbc5711d69edbf92bb4f341266bd175ed1",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T03:44:51.099193",
      "diff_size": 353225,
      "diff_lines": 8809
    },
    {
      "hash": "96e5d3e199dbec5e646b1ab4d307a9313d17885c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in FileAppender.java and ConnectionSourceSkeleton.java include modifications to method signatures (making them final) and adding new conditional logic for handling exceptions, which alters the behavior. Specifically, the addition of try-catch blocks and parent directory checks introduces new functionality not present before. The JNDIConnectionSource.java change adds a parameter check in getConnection() that was previously missing, changing how connections are established with user credentials.",
      "llm_confidence": "high",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-27T03:45:01.013584",
      "diff_size": 13891,
      "diff_lines": 378
    },
    {
      "hash": "96e942c8d0728bd2631e23fc75aa4467d63cceb7",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-27T03:45:21.856811",
      "diff_size": 39415,
      "diff_lines": 901
    },
    {
      "hash": "96eb0a3c7627c9a0cd2adcc905541a424e50b213",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "error-prone",
      "analysis_timestamp": "2025-08-27T03:45:53.111671",
      "diff_size": 45377,
      "diff_lines": 1020
    },
    {
      "hash": "96f5077523bcc133c7c7da1ea53397f29a4d6cbf",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T03:47:09.591058",
      "diff_size": 33845,
      "diff_lines": 831
    },
    {
      "hash": "9714a7c817b64a3358f69e536535c756c5c6df48",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T03:50:58.798684",
      "diff_size": 8039224,
      "diff_lines": 144691
    },
    {
      "hash": "9715d220eac20f5f36c3ba52a2b9b04c23dbedf0",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-27T03:52:14.668983",
      "diff_size": 89272,
      "diff_lines": 1563
    },
    {
      "hash": "97262f721fd127e3cec6cee2d111ad21106735ef",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T03:53:30.873828",
      "diff_size": 146655,
      "diff_lines": 2966
    },
    {
      "hash": "9735b58fdbdc3bae5df0c295b0a52b4d05b5d295",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T03:56:04.071643",
      "diff_size": 35725,
      "diff_lines": 807
    },
    {
      "hash": "973ef7e1672b16a2c1cf84ba06eacaef3049f673",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jclouds",
      "analysis_timestamp": "2025-08-27T03:57:20.878496",
      "diff_size": 55739,
      "diff_lines": 990
    },
    {
      "hash": "976649a289a4f3c333b7559242b249c67a2f2857",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-27T03:58:37.928199",
      "diff_size": 62904,
      "diff_lines": 1381
    },
    {
      "hash": "978fe0271818cfabf5f23ac023900913f48a7283",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'Astrid44SyncMigrator' which replaces the deprecated 'TagsTableMigrator'. The migration process involves creating TagData objects from existing metadata and updating remote IDs for tasks, tags, and updates. This includes changes to method signatures (e.g., renaming protected synchronized method to public) and new conditional logic in the assertUUIDsExist method that modifies how UUIDs are generated and assigned based on cursor data. The introduction of a new class with its own dependencies and migration logic represents an addition of functionality beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-27T04:00:04.360644",
      "diff_size": 9883,
      "diff_lines": 218
    },
    {
      "hash": "9797511c56df4e9c7db964a6b83e67642df96c2d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:00:12.659004",
      "diff_size": 943124,
      "diff_lines": 18899
    },
    {
      "hash": "979ce41ef44a0444188f73ab0ab4ce8253d1c3fe",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a fix for a race condition during keyspace or column family dropping, which involves changing the lock mechanism from flusherLock to switchLock and adding new conditional logic in several methods. Specifically, it replaces read locks with write locks in critical sections where flushing operations are protected, altering the synchronization behavior (FLOSS Indicator 2). Additionally, it adds a Lock field in ColumnFamilyStore and modifies exception handling by introducing ReentrantReadWriteLock imports and changing lock acquisition patterns (FLOSS Indicators 7 and 8). These changes affect functional behavior by ensuring proper locking during migrations to prevent orphaned data files.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:00:23.389518",
      "diff_size": 18780,
      "diff_lines": 459
    },
    {
      "hash": "979f43da07f50287a464b42f22c2de167dd6eda8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jna",
      "analysis_timestamp": "2025-08-27T04:00:31.158634",
      "diff_size": 32718,
      "diff_lines": 902
    },
    {
      "hash": "97a2685080f82a58b5b09284b01c0f7a3a9b1a7a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T04:00:53.636588",
      "diff_size": 601896,
      "diff_lines": 7985
    },
    {
      "hash": "97bcfd1d887db373f0fd1ca5e57829556913bbe8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new field 'sprite' and changes the constructor of CostumeA to accept a Sprite parameter. This indicates a change in structure where the costume now depends on a sprite instance, which is not purely structural reorganization. Additionally, several brick classes (ChangeXByBrick, ChangeYByBrick, etc.) modify how they interact with the costume by accessing its fields directly instead of through the sprite, and changing method calls to setXYPosition or using alphaValue for visibility changes. These modifications alter behavior by introducing direct access to costume's state which wasn't previously necessary, indicating functional changes.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T04:01:04.172788",
      "diff_size": 13615,
      "diff_lines": 340
    },
    {
      "hash": "97ce381945677730642d8d7d1643caf9b54b2940",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T04:01:12.433643",
      "diff_size": 341312,
      "diff_lines": 7850
    },
    {
      "hash": "97d667cb4c0d1721f03926fc9883d0fd2c0d9036",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-27T04:01:21.023138",
      "diff_size": 81942,
      "diff_lines": 1926
    },
    {
      "hash": "9802a70f68cdcd239a9128f90f5d8f9a941168de",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:06:28.053629",
      "diff_size": 11195292,
      "diff_lines": 251037
    },
    {
      "hash": "980e4f05799a9f4fedecf57c05911ca5bf984a5e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T04:07:44.862762",
      "diff_size": 112623,
      "diff_lines": 2141
    },
    {
      "hash": "980f0a122357cacab6ecf32b831759d153c50995",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T04:09:01.801938",
      "diff_size": 27325,
      "diff_lines": 568
    },
    {
      "hash": "982ad121caee682dffb766b11fe642db98804f47",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jbake",
      "analysis_timestamp": "2025-08-27T04:10:19.097873",
      "diff_size": 236889,
      "diff_lines": 5885
    },
    {
      "hash": "9847781653cc0ce5313a39155dbf0740a5c12026",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'MetricsServlet.ContextListener' and modifies the existing AdminServletContextListener to be deprecated. It also updates the MetricsServlet to use ServletContext instead of direct config access, which changes how attributes are set (from ServletConfig to context). This includes adding new functionality like CORS support and deprecating old classes for better extensibility.",
      "llm_confidence": "high",
      "project_name": "metrics",
      "analysis_timestamp": "2025-08-27T04:10:28.271797",
      "diff_size": 14392,
      "diff_lines": 294
    },
    {
      "hash": "9855f4d1441ac1e5dc7df19ebd0272e5f94e2aa2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'cleanUpCache' in Apg.java and modifies the cache-related methods to use a Timer for cleanup, which changes the behavior by adding periodic execution. It also updates Constants.java to rename a preference key from 'pass_phrase_cache_length' to 'pass_phrase_cache_ttl', indicating a shift in how time-to-live is managed. In PreferencesActivity.java, it replaces method calls with references to the new TTL concept without altering functionality significantly, but the overall change includes performance optimization (cache cleanup) and structural reorganization.",
      "llm_confidence": "high",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T04:10:37.567990",
      "diff_size": 7387,
      "diff_lines": 176
    },
    {
      "hash": "985e56feadf40234ebc19e74c9d0146cda65be2b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T04:10:45.247732",
      "diff_size": 180006,
      "diff_lines": 4060
    },
    {
      "hash": "986503c3a1e8395e1ae5df4ca2d0dd2fbdfe5fa8",
      "purity_classification": "FALSE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve renaming and code reorganization. In OutputNames.java, the string 'PV01' was changed to 'Zero Delta' in one comment line (line 64) but no functional change is apparent as it's a comment update. The method signatures for calculateBucketedPV01() and calculatePV01() in BondCalculator interface are removed entirely from the diff, indicating they were not present or modified elsewhere. In BondFn.java, similar removals occur with @Output annotations. The implementation classes (DiscountingBondCalculator and DiscountingBondCalculatorFactory) show changes: remove unused imports and refactor method calls to use a new calculateResult method for PV01 calculation instead of separate methods. However, the core functionality remains unchanged as the same calculations are performed under the hood.",
      "llm_confidence": "high",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-27T04:10:55.693696",
      "diff_size": 24629,
      "diff_lines": 498
    },
    {
      "hash": "986fbdce3ee0222c0ef5bde7368eb79b7ba076dd",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T04:11:12.808140",
      "diff_size": 66183,
      "diff_lines": 1669
    },
    {
      "hash": "9872b74ef20018e4e7645a8952fd7295e75764ad",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:12:29.824378",
      "diff_size": 1772893,
      "diff_lines": 39259
    },
    {
      "hash": "987c421e843b86ac4622070232a6db044dcb79e9",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve replacing a ConcurrentLinkedQueue with a LinkedHashSet for the relayCandidates field, which is a structural change without altering functionality. The method signature of getRelayCandidates() was changed from returning Queue to Collection but this does not affect behavior as both are generic and the same methods are used. Other changes include adding new imports (LinkedHashSet, Semaphore) and modifying the setupPeerConnections method to use available permits for Semaphore initialization, which is a pure structural change.",
      "llm_confidence": "high",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T04:13:54.906012",
      "diff_size": 9001,
      "diff_lines": 215
    },
    {
      "hash": "9881ea6b3e4c48fab071bf3e1cf3535775adefa2",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:14:03.217317",
      "diff_size": 2803252,
      "diff_lines": 62868
    },
    {
      "hash": "988b916ddb8ba71243f4e3be651131d20d8af405",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit changes method signatures from 'MapActivity' to 'activity', which is a functional change as it alters the parameter type without justification. Additionally, multiple methods (executeWithParams) in subclasses are modified with identical logic but different variable names and references, indicating restructuring that includes behavioral modifications such as using activity instead of mapActivity for context-dependent operations.\",",
      "llm_confidence": "high\",",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-27T04:14:12.747569",
      "diff_size": 7485,
      "diff_lines": 130
    },
    {
      "hash": "988d8cf56c469075a6b91f827d5746a8639d8f67",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T04:14:26.373797",
      "diff_size": 120482,
      "diff_lines": 2481
    },
    {
      "hash": "989820360de9986cab99c17920e114500d6bd9df",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "gedcomx",
      "analysis_timestamp": "2025-08-27T04:15:00.266985",
      "diff_size": 34025,
      "diff_lines": 733
    },
    {
      "hash": "98ae8e4f7e0f49d7025300b4c173d01718ac9aa4",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method extraction from the setAddress() function, which adds new conditional logic and changes exception handling. The original code directly called getLastKnowLocation(), but now it's encapsulated in getLocation(). Additionally, if getLocation() returns null, it triggers an alert message via mainActivity.showMessage(), altering the behavior by adding side effects (user feedback) when location is unavailable.",
      "llm_confidence": "high",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-27T04:15:07.749991",
      "diff_size": 2146,
      "diff_lines": 52
    },
    {
      "hash": "98aeaf670626da3a2faf49720efe8d71c9b83b8f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "restlet-framework-java",
      "analysis_timestamp": "2025-08-27T04:15:52.212984",
      "diff_size": 390262,
      "diff_lines": 9524
    },
    {
      "hash": "98d74ed998706e9e047dc0f7886a1e9b18df3ce9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:16:14.303879",
      "diff_size": 592530,
      "diff_lines": 12699
    },
    {
      "hash": "98d7d0dc42da3075d0f4f3f9fc04e2dbf947fcbd",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T04:17:30.907970",
      "diff_size": 73302,
      "diff_lines": 2037
    },
    {
      "hash": "98fff8fe9984bdecc7f0a6f1aa593dd67d18686f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OpenID-Connect-Java-Spring-Server",
      "analysis_timestamp": "2025-08-27T04:18:55.077176",
      "diff_size": 11890,
      "diff_lines": 273
    },
    {
      "hash": "990433fc3638de70af1820a8bf888291a952c9ff",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T04:19:21.759734",
      "diff_size": 70812,
      "diff_lines": 1194
    },
    {
      "hash": "9916b51ced60fb05ee23d26cc11ebb3045e7c8de",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fabric8",
      "analysis_timestamp": "2025-08-27T04:19:43.078843",
      "diff_size": 101462,
      "diff_lines": 2235
    },
    {
      "hash": "99268a99ac0517d0f1b82d9648017a805b0cb4b6",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jsoup",
      "analysis_timestamp": "2025-08-27T04:21:00.762029",
      "diff_size": 115178,
      "diff_lines": 2597
    },
    {
      "hash": "992a81bb48e62466a456cb5d92d7cdbaaa805c58",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:22:34.742883",
      "diff_size": 21701,
      "diff_lines": 431
    },
    {
      "hash": "9930ab7f6ff9400d6e3aa36ce06c663ce09be633",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new activity (ConsolidateDialogActivity) and modifies existing code to handle consolidation operations with additional logging, progress tracking, and error handling. It also adds a dialog-based UI for the consolidation process, including horizontal scrolling and focus management in the CertifyKeyActivity layout changes. The key behavioral change is the addition of functionality to recover from an unknown consolidation state by reimporting keys based on their count (one or many). This includes new log messages and resources that handle specific error conditions during cache deletion and database operations.",
      "llm_confidence": "low",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T04:22:44.820023",
      "diff_size": 29187,
      "diff_lines": 631
    },
    {
      "hash": "993167908d433c55a17a65b27e1b7d23a40545f6",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "androidannotations",
      "analysis_timestamp": "2025-08-27T04:22:55.974086",
      "diff_size": 177560,
      "diff_lines": 3670
    },
    {
      "hash": "99391ac9fbafc66ca03ed5bed15e95f2a5870727",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit includes changes to the API init method and RestEasy class that alter parameter usage, add new conditional logic for security in RestEasyTest, and change exception handling. Specifically, the API constructor parameters are reordered with different comments but same structure, indicating a potential functional change. The RestEasy start() method now uses variables from configuration instead of directly accessing them, which could affect behavior if those variables differ. Additionally, the test file shows changes to error messages and assertions that imply new functionality or bug fixes related to authentication.",
      "llm_confidence": "medium",
      "project_name": "iri",
      "analysis_timestamp": "2025-08-27T04:23:05.130674",
      "diff_size": 10824,
      "diff_lines": 253
    },
    {
      "hash": "99452483f8acbda786a7f7a72ee613d501d9010a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include a replacement of MathType.POWER_10 with MathType.EXPONENT, which alters the constant used in exponent handling. Additionally, there are modifications to method signatures and logic within NumberBuilder and JsclMathEngine classes, such as changing formatNumber's parameter from String to oldNumber and altering the return type of DoubleParser.parser.parse(). These changes indicate functional adjustments rather than pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "android-calculatorpp",
      "analysis_timestamp": "2025-08-27T04:23:15.173680",
      "diff_size": 15220,
      "diff_lines": 352
    },
    {
      "hash": "9948bb5a50465e6d6dc801fada6c1d371a65d0d2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-27T04:23:23.330935",
      "diff_size": 228556,
      "diff_lines": 7064
    },
    {
      "hash": "9968898c6adc11d783dbfd7a2effd78ad8fe571f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include several functional modifications that alter behavior or add functionality. A new class `DependencyResolutionFailedException` was introduced which extends Exception and used in multiple places replacing the previous error handling approach. The method signatures have changed, for example, `getRemoteRegistry()` is now replaced by a call to `getInstallManager().updateRemoteRegistry()`, indicating a change in interface or behavior. Additionally, there are changes in how dependencies are resolved and checked (e.g., comparing versions with new logic). These modifications go beyond simple structural reorganization.",
      "llm_confidence": "high",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T04:23:32.154770",
      "diff_size": 27327,
      "diff_lines": 617
    },
    {
      "hash": "99801cc8b28d438e08c3b1f617fb06f35a2c63f9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "rest-assured",
      "analysis_timestamp": "2025-08-27T04:23:53.498402",
      "diff_size": 44530,
      "diff_lines": 1105
    },
    {
      "hash": "9987670225d4d568616795329a3d0e0eba129b81",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "android-calculatorpp",
      "analysis_timestamp": "2025-08-27T04:25:09.949829",
      "diff_size": 78263,
      "diff_lines": 1747
    },
    {
      "hash": "99af2c33d35f9557c2f23e1abddd82d770e763d8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T04:29:00.338820",
      "diff_size": 45263,
      "diff_lines": 970
    },
    {
      "hash": "99b7fbfaea7af348bd13c61cd16cb5a3c8dc509a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-27T04:30:17.209435",
      "diff_size": 71080,
      "diff_lines": 1722
    },
    {
      "hash": "99be3996a09404129b1fd17561722859038d401d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "spring-hateoas",
      "analysis_timestamp": "2025-08-27T04:31:34.383423",
      "diff_size": 30092,
      "diff_lines": 561
    },
    {
      "hash": "99ca2f23d00ba349401c423d4fe5d01540c5e0f1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new PNG export functionality by adding a FileOutputStream import, creating a new PNGDataWriter class and extending the DataWriterType enum. The method signature of SimpleChartRenderer.render() is changed from taking a String to a FileOutputStream, which alters its behavior as it now writes directly to an OutputStream instead of a file path. This change enables exporting in PNG format without modifying existing code for other export types, but it represents a functional addition rather than pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "GCViewer",
      "analysis_timestamp": "2025-08-27T04:31:44.243830",
      "diff_size": 14824,
      "diff_lines": 295
    },
    {
      "hash": "99d226940e84e1526a2ee5e136696ff4ac3139e3",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T04:31:53.608801",
      "diff_size": 372202,
      "diff_lines": 9949
    },
    {
      "hash": "99d550c559bde1fc67db64babd25ff35522710c4",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T04:32:34.960971",
      "diff_size": 39022,
      "diff_lines": 799
    },
    {
      "hash": "99e10776be32bb9f827c7d755f60ea2b554875bd",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include several functional modifications. In BufferedTokenStream.java, the method getTokens now uses BitSet for filtering tokens instead of Set<Integer>, which is a change in data structure affecting behavior by potentially altering performance or memory usage due to different implementations (BitSet vs HashSet). Additionally, there are new static imports and utility methods introduced in Utils.java that handle equality checks differently. In TestPerformance.java, the OPTIMIZE_LL1 flag is now being set dynamically based on configuration changes, which alters how the parser operates under certain conditions.",
      "llm_confidence": "medium",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T04:32:44.909070",
      "diff_size": 14976,
      "diff_lines": 314
    },
    {
      "hash": "99f69d9d9be4ab00942f23bc80c43e6d8372498e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "tenacity",
      "analysis_timestamp": "2025-08-27T04:33:02.313038",
      "diff_size": 33817,
      "diff_lines": 725
    },
    {
      "hash": "99fca02856cf0b297b02417f4fc7a7037a3cd91f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T04:33:19.407127",
      "diff_size": 148160,
      "diff_lines": 3727
    },
    {
      "hash": "9a0727a6c69bf62d4c9dfb95b59fb0ecc77009bc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jbake",
      "analysis_timestamp": "2025-08-27T04:34:19.906629",
      "diff_size": 35093,
      "diff_lines": 861
    },
    {
      "hash": "9a0a1ab6c97cd155f0b30e3ae3d2092002d769c8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality related to social reminders, including the addition of a SOCIAL_REMINDER property and associated constants. It also modifies the behavior of the setComplete method by adding conditional logic based on the reminder period and social reminder type, which affects how statistics are reported. These changes include additions of new parameters (socialReminder) and modifications to existing methods that alter their functionality.",
      "llm_confidence": "high",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-27T04:34:29.517724",
      "diff_size": 15930,
      "diff_lines": 316
    },
    {
      "hash": "9a0bbc542b7dc73e30e6a648a82cf38ff2e39df9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:34:38.004469",
      "diff_size": 2248473,
      "diff_lines": 49278
    },
    {
      "hash": "9a11e424efeaa67a5d0081a93319b5ed9fddc516",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:34:44.783294",
      "diff_size": 22160,
      "diff_lines": 428
    },
    {
      "hash": "9a27107d07289a77f5c15b7bc4d67c2ead8d8007",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T04:34:52.413343",
      "diff_size": 255760,
      "diff_lines": 5187
    },
    {
      "hash": "9a2a66e81a964db626ad17c1220e87b3796bce6e",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The commit introduces a new constant 'NATIVE_QUERY' which is used to replace the hardcoded SQL string in the method. The change simplifies the code by using String.format for query construction, but does not alter functionality as it merely replaces an equivalent condition. The ternary operator replacement maintains identical logic flow and behavior.",
      "llm_confidence": "high",
      "project_name": "javers",
      "analysis_timestamp": "2025-08-27T04:35:00.119061",
      "diff_size": 2519,
      "diff_lines": 53
    },
    {
      "hash": "9a34ef8fd38cfbecb7615099d9482981c6df8e4a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-27T04:35:14.632206",
      "diff_size": 21679,
      "diff_lines": 587
    },
    {
      "hash": "9a41ef646e7390648f99a14a57e749a39cf38bfa",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "mvel",
      "analysis_timestamp": "2025-08-27T04:36:06.977316",
      "diff_size": 41076,
      "diff_lines": 900
    },
    {
      "hash": "9a63d6f8cb734d99597c12263f232fc49604eeb0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a security context impersonation mechanism within the remove method, which alters its behavior by adding exception handling and changing how operations are performed. This includes wrapping existing code with try/finally blocks for context management, indicating a functional change beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-27T04:36:14.526002",
      "diff_size": 2458,
      "diff_lines": 65
    },
    {
      "hash": "9a693cfadb97f9cf7d7a53e659d9489ca6c2fa0c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality by creating and managing notification channels, which is a functional change. It adds conditional logic for channel creation based on API version and modifies method signatures to use enum values instead of direct constants.",
      "llm_confidence": "high",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-27T04:36:23.728276",
      "diff_size": 20136,
      "diff_lines": 483
    },
    {
      "hash": "9a6a8e5c8c8322fc07a3ba681e86c5cdb60210df",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a nested SetFromList class within BinaryJedis, which is a structural change. However, it also adds the AbstractSet import and modifies test code to use reflection for accessing this inner class's 'of' method. The test changes indicate an adaptation in behavior (using reflection instead of direct instantiation) without explicit functional changes.",
      "llm_confidence": "medium",
      "project_name": "jedis",
      "analysis_timestamp": "2025-08-27T04:36:31.759453",
      "diff_size": 8228,
      "diff_lines": 306
    },
    {
      "hash": "9a76e646e6ead3f8e900123485d6768604b47630",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:36:45.995551",
      "diff_size": 1087503,
      "diff_lines": 25356
    },
    {
      "hash": "9a901a90e86bc9dde9ced06162bb55d5da9b7127",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "geppetto",
      "analysis_timestamp": "2025-08-27T04:36:54.855121",
      "diff_size": 22676,
      "diff_lines": 490
    },
    {
      "hash": "9a9810a4c955c39a41135afc365cd5df6f532dae",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve renaming methods and adding new logic for extracting stream names, which alters the behavior of how transcode requests are handled. Specifically, in VideoTranscoder.java, output variables were changed to outputLive with additional method calls (ffmpeg.addRtmpOutputConnectionParameter) that modify the command structure without changing semantics directly. In VideoRotator.java, several methods and fields were commented out or renamed, indicating a change in how rotation is handled. The introduction of new helper methods like getStreamName changes the input processing logic for transcode requests by using stream names instead of IDs.",
      "llm_confidence": "medium",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T04:37:01.840708",
      "diff_size": 16240,
      "diff_lines": 278
    },
    {
      "hash": "9aa1865489a160c2c008f194f1cd6abd619a7e0f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T04:37:13.685080",
      "diff_size": 2667325,
      "diff_lines": 65612
    },
    {
      "hash": "9aae0b5b654d58774c67f502974068aa0dc946d8",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the diff primarily involve updating version numbers and modifying URLs, which are simple renames or updates without altering functionality. In AbstractSiteRenderingMojo.java, a TODO comment is removed but no functional change occurs there. SiteMojo.java shows variable renaming (outputDirectory to outputDir) that does not affect behavior since it's just changing the name of an object reference and updating its usage consistently. Similarly, SiteRunMojo.java adds method calls for encoding settings without modifying existing logic or adding new conditions. The FML file updates formatting but no functional changes are introduced.",
      "llm_confidence": "high",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-27T04:37:24.718920",
      "diff_size": 5927,
      "diff_lines": 146
    },
    {
      "hash": "9ab649d60746cdb77c1ec5dd7d6f34ba34e75044",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new controller class (GCViewerController) that replaces the static start method in GCViewerGui with an instance-based approach. This includes changes to how URLs and files are opened, which alters the control flow and behavior of the application. Additionally, there is a change in the constructor of GCModelLoader where it now accepts different parameters for documentTitle and URL, affecting its functionality.",
      "llm_confidence": "high",
      "project_name": "GCViewer",
      "analysis_timestamp": "2025-08-27T04:37:30.753688",
      "diff_size": 9167,
      "diff_lines": 246
    },
    {
      "hash": "9abb758273b120f4a5bdc6fd414c53d2a3de7725",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T04:37:39.878902",
      "diff_size": 59388,
      "diff_lines": 1265
    },
    {
      "hash": "9ac1b412f90e911c597fbe0f77f3cbaf25f17396",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method signature change in AutoIngestDashboardTopComponent by adding an overridden method 'componentOpened' with additional logic. This includes calling super.componentOpened() and then setting the top component to float, which alters behavior compared to previous versions where these actions were handled separately or not at all.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T04:37:47.803776",
      "diff_size": 4906,
      "diff_lines": 113
    },
    {
      "hash": "9ad2d0e701694f4e3c65ee9919b4c4fd45a31740",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T04:38:05.290817",
      "diff_size": 119105,
      "diff_lines": 2463
    },
    {
      "hash": "9ae2cddfda5255ecc8251917b9ee27cccf124501",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in method signatures and logic by renaming 'setUseDefaultPortalSearch' to 'setUseCustomPortalSearch' and corresponding getters. This alters the behavior because now, when setting the portal search mode, the parameter is inverted (settings node value changes from negated boolean to direct boolean). Additionally, two listener methods conditionally set the search radius based on whether custom or default search is being used, which directly affects functionality by changing the condition logic and potentially altering the system's behavior regarding portal searches.",
      "llm_confidence": "high",
      "project_name": "Multiverse-Core",
      "analysis_timestamp": "2025-08-27T04:38:15.089242",
      "diff_size": 3760,
      "diff_lines": 69
    },
    {
      "hash": "9af297154641ee7c75f6bbc4c6db56c4613db283",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in this diff are limited to renaming constants and updating import statements. The constant ERROR_METADATA_FORMAT_UNKOWN is renamed to ERROR_METADATA_FORMAT_UNKNOWN, which preserves the same functionality as it's a simple name change without altering behavior or adding new logic. Import statements were updated accordingly with no functional impact.",
      "llm_confidence": "high",
      "project_name": "pdfbox",
      "analysis_timestamp": "2025-08-27T04:38:19.820281",
      "diff_size": 2405,
      "diff_lines": 35
    },
    {
      "hash": "9af46b2978e3c8ae4760d3709205e7a02f83063e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-27T04:38:28.429017",
      "diff_size": 1800943,
      "diff_lines": 36611
    },
    {
      "hash": "9b021d5adbc17c43a840e234565e4a7fd185cad4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the exception handling logic by replacing an existing log statement with a new one that logs and then throws a TskCoreException. This alters the behavior of the method from simply logging a warning to throwing an exception, which is a functional change.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T04:38:36.045156",
      "diff_size": 959,
      "diff_lines": 16
    },
    {
      "hash": "9b08a7f187e14e93ed06e7a07b34a0ce64c1aa46",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include multiple bug fixes and functional adjustments. In ColumnSerializer.java, the code modifies how timestamps are handled by clamping future timestamps to 'now', which alters behavior (CASSANDRA-4561). Similarly, in SystemTable.java, there is a change from retrieving one specific column for current node ID to using a slice filter that returns multiple columns ordered by timeuuid, and the method writeCurrentLocalNodeId now adds a new column with broadcast address instead of handling deletions separately. These modifications indicate functional changes beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:38:42.943940",
      "diff_size": 6821,
      "diff_lines": 147
    },
    {
      "hash": "9b1a790c5a218b1c8ea0dcc15f4a751de28678ef",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "uaa",
      "analysis_timestamp": "2025-08-27T04:38:54.634985",
      "diff_size": 282190,
      "diff_lines": 4615
    },
    {
      "hash": "9b1c69b17dbabf30e9ee975ab608712a3d6b90aa",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve method renaming and code movement, but there are also functional modifications. In RepeatControlSet.java, the method 'RepeatChanged' is renamed to 'repeatChanged'. However, in EditTitleControlSet.java, the method signature change from 'RepeatChanged(boolean repeat)' to 'repeatChanged(boolean repeat)' indicates a direct call from another file (likely ImportanceControlSet.java). The key evidence is that the updateCompleteBox method now includes conditional logic based on importanceValue and its relation to array lengths. This modification changes how the completeBox's button drawable is set, depending on whether it's repeating or not, which alters the behavior compared to the original where only a simple check was done without considering repetition.",
      "llm_confidence": "medium",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-27T04:39:03.875564",
      "diff_size": 4039,
      "diff_lines": 96
    },
    {
      "hash": "9b23ba9096b720f282cdb1a93d28f0cd0f5717f8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'ConfigurationContext' and replaces multiple instances of ConfigurationFactory with ConfigurationContext. This change alters the way configurations are obtained, as seen in various classes like TwitterFactory, AsyncTwitter, RequestToken, etc., where the static method calls now use ConfigurationContext.getInstance() instead of ConfigurationFactory.getInstance(). Additionally, there is a new interface 'ConfigurationFactory' and its implementation 'PropertyConfigurationFactory', which further indicates a change in the underlying structure. The replacement of old imports with new ones (e.g., twitter4j.conf.ConfigurationContext) suggests that the codebase's configuration handling mechanism has been restructured to use ConfigurationContext, implying functional changes beyond pure structural refactoring.",
      "llm_confidence": "high",
      "project_name": "twitter4j",
      "analysis_timestamp": "2025-08-27T04:39:15.947916",
      "diff_size": 26699,
      "diff_lines": 554
    },
    {
      "hash": "9b2d8fbcfe624c1945daa24d33a6ff8211389072",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "YCSB",
      "analysis_timestamp": "2025-08-27T04:39:23.187705",
      "diff_size": 108666,
      "diff_lines": 2951
    },
    {
      "hash": "9b31aaefea2ca68e3d07df4a792ee1ef047d5f3c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "PinDroid",
      "analysis_timestamp": "2025-08-27T04:39:38.465584",
      "diff_size": 83908,
      "diff_lines": 2298
    },
    {
      "hash": "9b428b16489a87bc783f44052eebd0b45ed45a0d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in AffineThreadPool.java and KilimEvent.java involve significant structural reorganization but also include functional modifications. In the constructor, new BlockingQueue and ExecutorService objects are created and managed differently, altering how tasks are published and executed. The getTaskCount method now calculates remaining capacity from multiple queues instead of a single RingBuffer, changing its behavior. Additionally, Task.java's _runExecute method is renamed to run(), which changes the interface expected by callers (e.g., Generator.java). These modifications introduce new conditional logic in publish() for handling task submission and change parameter meanings without justification.",
      "llm_confidence": "high",
      "project_name": "kilim",
      "analysis_timestamp": "2025-08-27T04:39:48.894348",
      "diff_size": 12661,
      "diff_lines": 430
    },
    {
      "hash": "9b48a0bf430b995332e1a4dde20ba7482175ef99",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:39:57.071902",
      "diff_size": 443964,
      "diff_lines": 9165
    },
    {
      "hash": "9b53d737e47dcc57fb1e6a47e1ba57fdc6474dd8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-27T04:40:10.824315",
      "diff_size": 191589,
      "diff_lines": 5532
    },
    {
      "hash": "9b623dc37a876f5a48d647dbd91a2c4e5e82c57f",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve refactoring the code structure without altering functionality. The main modification is renaming variables and methods for clarity, such as changing 'cfmd' to a more descriptive name in QueryProcessor.java. This aligns with pure refactoring criteria where semantic preservation occurs through simple renames.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:40:18.673661",
      "diff_size": 3071,
      "diff_lines": 57
    },
    {
      "hash": "9b67a72fa3d1c93c6a0cb1e1d463a3d3b149bdef",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "infinispan",
      "analysis_timestamp": "2025-08-27T04:40:27.121574",
      "diff_size": 166486,
      "diff_lines": 3594
    },
    {
      "hash": "9b7228ca0ab8bf514a47d346aff247e334b4bdc7",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'EBeanConverter' and modifies the existing code to use it. In the RestHandler, there is a change from directly creating JClass instances to using APTCodeModelHelper's newBeanOrEBean method which now checks for EBean annotation before instantiation. This indicates a functional change because the behavior of how beans are instantiated has been altered by adding conditional logic based on annotations.",
      "llm_confidence": "high",
      "project_name": "androidannotations",
      "analysis_timestamp": "2025-08-27T04:40:35.687151",
      "diff_size": 10546,
      "diff_lines": 205
    },
    {
      "hash": "9b7c52277ce5b9961bad099f46e066fd6d0cee72",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T04:40:45.765639",
      "diff_size": 134216,
      "diff_lines": 3176
    },
    {
      "hash": "9b7fb982f25b5d3f0dc265a7e71186a8e1e9e340",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-27T04:41:13.159084",
      "diff_size": 1099480,
      "diff_lines": 27419
    },
    {
      "hash": "9b8692c6a4c75b7df29a58b5d3d1d1ee5cb0c3a4",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:42:29.942649",
      "diff_size": 120378,
      "diff_lines": 2501
    },
    {
      "hash": "9b9e70b9d14f92c4a12acc56967503f5b300b6e5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include a mix of structural and functional modifications. In RenderPathMarker.java, the code reorganization removes unnecessary glPushMatrix/glPopMatrix calls but alters the rendering logic by directly using EntityLaser.LASER_BLUE without parameter change justification. The primary behavioral change is in TilePathMarker.java where 't' is renamed to 'available', which simplifies variable usage but does not affect functionality. However, more significant changes occur with texture renames: laser_4.png becomes blue.png and stripes.png becomes stripes_yellow.png, indicating a shift from generic laser beams to specific color textures (blue/yellow/green/red). This introduces new conditional logic for different colors based on the renamed variables, changing how lasers are rendered. The package change in TileLaser.java is purely structural.",
      "llm_confidence": "medium",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T04:45:13.530178",
      "diff_size": 5488,
      "diff_lines": 91
    },
    {
      "hash": "9baae7b80767b077403a75cd1c1e2589ae38b0ba",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The diff introduces significant changes to the KeyspaceMetrics class, including renaming several metrics from 'allMemtablesDataSize' and others to new names like 'memtableOnHeapDataSize'. Additionally, it modifies the logic of existing metrics by changing what they measure (e.g., replacing pendingTasks with pendingFlushes). These changes alter the functional behavior because different data is now being tracked under these metric names. The justification for floss classification lies in the behavioral modifications detected: new conditional logic based on ColumnFamilyStore metrics, changed method signatures and return values, and removal of old metrics while adding new ones.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:45:20.961366",
      "diff_size": 9592,
      "diff_lines": 185
    },
    {
      "hash": "9bab11683d0a9b1f7b90628cfad612d569cf41fd",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "ribbon",
      "analysis_timestamp": "2025-08-27T04:45:32.982855",
      "diff_size": 39845,
      "diff_lines": 933
    },
    {
      "hash": "9baeff9282418562efede3e25490e58d59ae9818",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-27T04:45:48.628253",
      "diff_size": 59955,
      "diff_lines": 1207
    },
    {
      "hash": "9bbdb6f50e27ea5573bb2a27b285d920fa2c864b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a significant refactor of SetupTeardownAndLibraryIncluder, changing its structure and behavior. It removes the static method makeNormalWikiPageContent and modifies includeInto to accept TestPage directly instead of PageData, which changes how setup/teardown pages are included based on page name checks (isSuiteSetUpOrTearDownPage). This indicates a functional change as it alters the conditions under which certain code is executed. Additionally, in multiple test files, the method calls and variable references have been updated to use TestPage instances directly with SetupTeardownAndLibraryIncluder, changing the input types and thus affecting behavior.",
      "llm_confidence": "low",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-27T04:46:01.128138",
      "diff_size": 18139,
      "diff_lines": 443
    },
    {
      "hash": "9bc255d14ba6696c4b0d390f657c738e42b51c52",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T04:46:30.168679",
      "diff_size": 832828,
      "diff_lines": 18623
    },
    {
      "hash": "9bd7391bf8fee11be781d34d1cbce4d861fd4249",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include a significant restructuring of the codebase, introduction of new classes (SubscriberIndexEntry), modifications to static initializer blocks with added logic for generating an index via reflection or using a generated class, and changes in method signatures. The renaming from 'annotations' package to root package indicates a potential change in structure but combined with functional changes like cache handling and conditional logic based on the existence of the generated index, it qualifies as FLOSS.",
      "llm_confidence": "medium",
      "project_name": "EventBus",
      "analysis_timestamp": "2025-08-27T04:46:38.021287",
      "diff_size": 27072,
      "diff_lines": 623
    },
    {
      "hash": "9bd986edb1fe11ffa473ca0a6fda33e8b1382641",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "uaa",
      "analysis_timestamp": "2025-08-27T04:46:56.103113",
      "diff_size": 470023,
      "diff_lines": 5883
    },
    {
      "hash": "9bf7f1b59e6b3dbe77af75d1d3d517aa4876d63a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the preference constants and method names, altering the behavior of color settings. Specifically, 'FAIL_BACKGROUND_COLOR' is renamed to 'FAILING_BACKGROUND_COLOR', which changes how failing background colors are handled. This includes modifications to method signatures (e.g., setFailingBackgroundColor instead of setFailBackgroundColor) and references throughout the codebase, such as in ColorSettings.java where static variables now store failing color information rather than general fail colors. Additionally, test cases were updated to reflect this change by verifying against new methods like getFailingBackgroundColor and getFailTextColor. These functional changes indicate a floss refactoring.",
      "llm_confidence": "high",
      "project_name": "infinitest",
      "analysis_timestamp": "2025-08-27T04:47:06.828694",
      "diff_size": 14370,
      "diff_lines": 269
    },
    {
      "hash": "9c01f5fe863eb6677df0a21049737f198f12bcc6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "infinispan",
      "analysis_timestamp": "2025-08-27T04:47:24.242442",
      "diff_size": 38027,
      "diff_lines": 789
    },
    {
      "hash": "9c0ffa953c73da52b2f09b10ba89c7d3f7bc7fa9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T04:47:31.711504",
      "diff_size": 638201,
      "diff_lines": 14053
    },
    {
      "hash": "9c18d679dd9d002b3c2fce06b11b17f44bae9aea",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T04:48:43.577449",
      "diff_size": 467654,
      "diff_lines": 11594
    },
    {
      "hash": "9c3855b5fd83b9fa9ffb2e5495e43cbea9855dee",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:52:32.800016",
      "diff_size": 617998,
      "diff_lines": 12673
    },
    {
      "hash": "9c3fc450bfaa7a951fc0ebe61f935e645cb45b8c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "ANE-Facebook",
      "analysis_timestamp": "2025-08-27T04:53:48.992941",
      "diff_size": 57568,
      "diff_lines": 1550
    },
    {
      "hash": "9c404694bffdcbc2ee2d758f356b7d5a0e9cb851",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "tahrir",
      "analysis_timestamp": "2025-08-27T04:55:04.662352",
      "diff_size": 151991,
      "diff_lines": 3939
    },
    {
      "hash": "9c80f37d5eb3ec505341347631a430ffc03b0071",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:56:21.301495",
      "diff_size": 2284235,
      "diff_lines": 53880
    },
    {
      "hash": "9c89af116857ff54b03cf0bddc98989057bb8057",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T04:57:38.088665",
      "diff_size": 143609,
      "diff_lines": 3225
    },
    {
      "hash": "9c9d85a5029fa04cee893a130337dee66f386dc6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in the diff include renaming of static variables (totalsForIngestJobs to INGEST_JOB_TOTALS and refCounter to REF_COUNTER) which is a structural change. However, there are also modifications that alter functionality: adding 'break' statements inside loops in FileTypeDetector.java and changing variable names with corresponding updates in FileTypeIdIngestModule.java from the old variable name references (refCounter) to the new ones (REF_COUNTER). These additions of break statements introduce explicit termination conditions where previously they were implicit, potentially affecting control flow. Additionally, the use of static field access via renamed variables might change how these are handled across different instances or contexts if there are any differences in scope or initialization.",
      "llm_confidence": "medium",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T04:57:47.283675",
      "diff_size": 3879,
      "diff_lines": 76
    },
    {
      "hash": "9ce222a745ca902961d3b8fac7f6954ca135f7a2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class DoxiaBean and refactors the existing code to handle internationalization (i18n) by creating separate contexts for different locales. This includes changes to method signatures, addition of conditional logic based on locale handling, and restructuring that alters behavior.",
      "llm_confidence": "high",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-27T04:57:56.685717",
      "diff_size": 14563,
      "diff_lines": 388
    },
    {
      "hash": "9ce4699f21dc2ccf464470dea455af321c36aabf",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-27T04:58:14.704447",
      "diff_size": 87540,
      "diff_lines": 1348
    },
    {
      "hash": "9cf541caae4415d34363e8e4ec3f5dc2d2889dc0",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-27T04:59:32.128280",
      "diff_size": 63805,
      "diff_lines": 1827
    },
    {
      "hash": "9cf605854c61344ab48ca1f3cbe1614fa8ebc53f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "GCViewer",
      "analysis_timestamp": "2025-08-27T04:59:40.483609",
      "diff_size": 16491,
      "diff_lines": 314
    },
    {
      "hash": "9cfbc31bc29685bd60355a823e0cf261a89858f0",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T04:59:52.752586",
      "diff_size": 1958308,
      "diff_lines": 41455
    },
    {
      "hash": "9d026962b1fe6088ecb47e1b08f0350524158a5e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new feature for handling report titles, including the creation of ReportTitlesModal.js and changes to existing files like ClassPathRepositoryManager.java and MarkLogicRepositoryManager.java. This includes adding conditional logic in the modal view (e.g., checking for JSON data), modifying method signatures by introducing new parameters or conditions, and updating configuration settings. These changes alter functionality beyond simple structural reorganization.",
      "llm_confidence": "high",
      "project_name": "saiku",
      "analysis_timestamp": "2025-08-27T05:00:02.313081",
      "diff_size": 14612,
      "diff_lines": 381
    },
    {
      "hash": "9d087a67cb88b31b8a7faa5b6e8542a9af7b18cf",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-27T05:00:11.864659",
      "diff_size": 37671,
      "diff_lines": 661
    },
    {
      "hash": "9d1b3ca03bcd794f60758b17f324172545e8f655",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include new method additions, modifications to existing methods, and structural reorganizations that alter behavior or add functionality. Specifically, the introduction of a cast method in APTCodeModelHelper (addIntentBuilderPutExtraMethod) with conditional casting logic indicates functional changes for handling different types. The ServiceActionProcessor now uses helper.addCastMethod instead of generateCastMethod, suggesting refactoring to improve structure while maintaining function. However, there are also new imports and code additions that change the behavior.",
      "llm_confidence": "medium",
      "project_name": "androidannotations",
      "analysis_timestamp": "2025-08-27T05:00:18.918685",
      "diff_size": 25435,
      "diff_lines": 588
    },
    {
      "hash": "9d33e4bddaed25542e204838c59bf7158f7223c8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "threetenbp",
      "analysis_timestamp": "2025-08-27T05:00:31.732846",
      "diff_size": 2340210,
      "diff_lines": 51080
    },
    {
      "hash": "9d440c595d4f51c036826616dd4fde6972c5d94a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit involves a significant refactoring of the ALTER TABLE and VIEW parsing logic. The class name is changed from AlterTableParser to AlterRelationParser, which now handles both tables and views uniformly. This change includes restructuring how view alterations are parsed by incorporating them into the same parser as table alterations, altering method signatures (e.g., parse() parameters), and modifying internal logic for object handling. These changes indicate a functional shift where the codebase's ability to handle ALTER TABLE and VIEW statements is now unified under one class, representing an algorithm modification that alters behavior.",
      "llm_confidence": "high",
      "project_name": "apgdiff",
      "analysis_timestamp": "2025-08-27T05:03:15.037996",
      "diff_size": 11973,
      "diff_lines": 280
    },
    {
      "hash": "9d5c30de1ead079d05e86ac9359c968ba2c5080b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jasmine-maven-plugin",
      "analysis_timestamp": "2025-08-27T05:03:30.527188",
      "diff_size": 104178,
      "diff_lines": 2761
    },
    {
      "hash": "9d70189e8ee966358597aca7974dda95cded2368",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in SoundData.java and Sprite.java introduce new functionality related to sound management. In SoundData.java, the fields 'soundId', 'soundPath' are renamed to 'soundAbsolutePath' and a method is added that constructs an absolute path using project-specific constants and manager. This modifies behavior by changing how paths are stored and retrieved. Similarly, in Sprite.java, there's a replacement of static lists with instance variables for costumes and sounds, along with new logging methods (setCostumeList, removeCostumeList, setSoundList, removeSoundList) that add side effects like logging the number of elements or specific messages when adding/removing items. These additions change how costume and sound data is handled, including potential changes in error handling through log statements.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T05:03:40.958450",
      "diff_size": 4517,
      "diff_lines": 144
    },
    {
      "hash": "9d7affad19010ae71742c81d9bcff324a1bc08de",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "rundeck",
      "analysis_timestamp": "2025-08-27T05:03:52.587099",
      "diff_size": 2028652,
      "diff_lines": 42535
    },
    {
      "hash": "9d89c69bbe66eece69e203b1513abeb107f4eae8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-27T05:04:37.082990",
      "diff_size": 1402032,
      "diff_lines": 36233
    },
    {
      "hash": "9d8cf4dee67c4ce05f31bba3585854354fc88f2a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-27T05:05:53.178811",
      "diff_size": 127401,
      "diff_lines": 2720
    },
    {
      "hash": "9da5f4b17f26993cf681af2bc9e8461e61c3068a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T05:09:42.735196",
      "diff_size": 276544,
      "diff_lines": 8365
    },
    {
      "hash": "9db5933bf133605baf9e28081d748dbad452250e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-27T05:10:58.877901",
      "diff_size": 97992,
      "diff_lines": 2240
    },
    {
      "hash": "9dc6f69b95051cc3d5a521357880b3f3b45da3c9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality by replacing 'solo.sleep()' calls with 'solo.waitForActivity()' in multiple test methods. This change alters the execution flow and adds explicit waiting for specific activities, which is a functional modification rather than pure structural refactoring.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T05:12:23.616211",
      "diff_size": 7079,
      "diff_lines": 132
    },
    {
      "hash": "9dcaed4194162c50dc1fa3a0b7a2ec994c1d91b4",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T05:12:32.340188",
      "diff_size": 234745,
      "diff_lines": 7150
    },
    {
      "hash": "9dcd16b005ae65e7ec9ac654ff5f74a15e16ff8b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "saiku",
      "analysis_timestamp": "2025-08-27T05:13:14.167571",
      "diff_size": 130044,
      "diff_lines": 2897
    },
    {
      "hash": "9dd025173c51881abd28f4a7437bc836f3b130e7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T05:14:30.856768",
      "diff_size": 30349,
      "diff_lines": 591
    },
    {
      "hash": "9dd03fba58e9d577258ecbf37016228a9802824e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new event class (PushbulletReplyEvent) and refactors the PushBulletExtension to use EventBus for posting events, while also modifying the MainActivity to remove direct references to restart functionality. However, it adds conditional logic in DetailFragment's onStop method by unregistering EventBus, which is a structural change but does not alter behavior. The key functional changes are: 1) Replacing OmniNotes.restartApp with MiscUtils.restartApp (which now uses a different approach via AlarmManager and PendingIntent), indicating a modification to the restart mechanism; 2) Adding new event handling in DetailFragment for PushbulletReplyEvent, which appends messages differently than before. These modifications include changes to method signatures and return types (e.g., restartingApp now requires an activityClass parameter), along with added conditional logic (event-based behavior).",
      "llm_confidence": "medium",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-27T05:14:41.794618",
      "diff_size": 13081,
      "diff_lines": 299
    },
    {
      "hash": "9dd7b1b2cf2e2e40723d355a6d90d106ce8cbada",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the method signature of createGerritRepo by renaming one parameter from 'gerritGitRepoDesription' to 'gerritGitRepoDescription'. This is a simple rename and does not affect functionality. However, it also adds new conditional logic for handling HTTP responses with Digest authentication (lines 107-128 in DevOpsConnector.java), including parsing headers, processing challenges, and using specific classes like DefaultHttpClient, HttpGet, HttpPost, and BasicResponseHandler. Additionally, the method now uses a different return type (IOException instead of JsonProcessingException) and includes new imports for DigestScheme-related classes. The addition of these authentication handling steps indicates an implementation change that alters behavior by replacing the previous approach with CXF WebClient calls to use HTTP client libraries directly.",
      "llm_confidence": "low",
      "project_name": "fabric8",
      "analysis_timestamp": "2025-08-27T05:14:50.879338",
      "diff_size": 20144,
      "diff_lines": 408
    },
    {
      "hash": "9de6a8cc692ca3b95323b7f64d584db406bc90f4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "uaa",
      "analysis_timestamp": "2025-08-27T05:15:00.322337",
      "diff_size": 297015,
      "diff_lines": 5403
    },
    {
      "hash": "9df0ed97c64847df8264d6c71ea7986b2275aff8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T05:16:17.093071",
      "diff_size": 3384982,
      "diff_lines": 78611
    },
    {
      "hash": "9e04de6ac093925402a9e42f7cbb239c92f949ab",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T05:16:54.801074",
      "diff_size": 23165,
      "diff_lines": 525
    },
    {
      "hash": "9e07bc783ec2736eba484f9305b62c642cd7fb11",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T05:17:04.874141",
      "diff_size": 34876,
      "diff_lines": 873
    },
    {
      "hash": "9e14e195a401e51d9c0d5a7a1d95cdd47806938a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T05:17:13.842466",
      "diff_size": 402364,
      "diff_lines": 8338
    },
    {
      "hash": "9e19f2c35f063bffce326aed485e5370b3e9532e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "nimbus",
      "analysis_timestamp": "2025-08-27T05:18:30.598429",
      "diff_size": 105514,
      "diff_lines": 2443
    },
    {
      "hash": "9e39f16e3bf49e245712bdad0809efe772c759b1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "basex",
      "analysis_timestamp": "2025-08-27T05:22:22.275475",
      "diff_size": 62429,
      "diff_lines": 1436
    },
    {
      "hash": "9e4131c3e8f87b56a15c9cb68bf10bbbe31e9437",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "MinecraftForge",
      "analysis_timestamp": "2025-08-27T05:23:39.428036",
      "diff_size": 130171,
      "diff_lines": 3340
    },
    {
      "hash": "9e4c2a663f5e2a86597ed298f59bf769062e39a8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T05:24:56.325320",
      "diff_size": 536580,
      "diff_lines": 13882
    },
    {
      "hash": "9e52233ef05fcb8eb26a9bed44f4428480100d9b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "threetenbp",
      "analysis_timestamp": "2025-08-27T05:26:13.847496",
      "diff_size": 71261,
      "diff_lines": 1762
    },
    {
      "hash": "9e56c1c6a9eaebf893107651840223271f8e1f93",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit updates dependencies in build.gradle (versions changed for androidTestCompile) and adds",
      "llm_confidence": "low",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-27T05:27:27.267268",
      "diff_size": 19754,
      "diff_lines": 481
    },
    {
      "hash": "9e7489116feace284e0d704135186991a67ee5e3",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T05:27:35.845331",
      "diff_size": 1044853,
      "diff_lines": 22459
    },
    {
      "hash": "9e7775c9d7f6e2747b9af851429769a02ca2bc85",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'FaunusTitanGraph' and refactors existing classes to extend it. This involves changes in method signatures (e.g., FaunusTitanCassandraGraph constructor now calls super with configuration, previously it did the same but was part of a larger refactor) and adds conditional logic for exception handling. The readFaunusVertex methods are replaced by direct calls to superclass methods via the new hierarchy, indicating functional changes due to parameter additions/removals (like 'autoTx' in FaunusTitanGraph constructors) that affect behavior.",
      "llm_confidence": "high",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T05:27:45.266281",
      "diff_size": 7209,
      "diff_lines": 166
    },
    {
      "hash": "9e77e28bc158c66193f8249729f0215996150f62",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include an addition of a new method 'getVersion' in JavaTarget.java, which returns the tool version. This is a functional change because it introduces new behavior (returning Tool.VERSION) that wasn't present before. Additionally, there's a comment indicating this forces targets to implement getVersion for compatibility with newer tools.",
      "llm_confidence": "high",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T05:27:50.154339",
      "diff_size": 1898,
      "diff_lines": 53
    },
    {
      "hash": "9e794ef070c23d61d3a10b5488074364674c1107",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-27T05:27:57.801239",
      "diff_size": 32910,
      "diff_lines": 801
    },
    {
      "hash": "9e925bb0b786e38eb1ff17d83340f90a867ba611",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'PathValidator' replacing the existing 'MultiUserPathValidator', which is part of refactoring but also includes functional changes. The method signatures and logic in several panels (ImageFilePanel, LocalDiskPanel, etc.) are updated to use this new validator instead of the old one, preserving behavior but changing implementation details. Additionally, there are minor behavioral changes such as updating condition checks from 'DbType.UNKNOWN' to 'DbType.SQLITE'. These modifications indicate a functional change despite structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T05:28:07.214169",
      "diff_size": 13617,
      "diff_lines": 274
    },
    {
      "hash": "9e984ecd6a41104b957357f0dcdad540e5ccafac",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method signature for CacheManager.add() that allows specifying a CacheConfiguration parameter, which changes the behavior by enabling customized cache settings. Additionally, MilestoneViewModel methods are modified to use cache operations (like getCache(), put, evict) instead of direct map manipulation, altering how milestones are cached and retrieved. This includes conditional logic based on cache configuration parameters and different return types for caching-related functions.",
      "llm_confidence": "high",
      "project_name": "iri",
      "analysis_timestamp": "2025-08-27T05:28:14.623025",
      "diff_size": 18778,
      "diff_lines": 442
    },
    {
      "hash": "9eace03cdcd36cff2958a367b72c3d0d9b3fb851",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces significant changes that alter the behavior of the code. In BrowseBookmarks.java, variables 'tagname' and 'unread' are moved from method scope to class level, which affects how they are initialized and used throughout the activity. This change is not merely structural but impacts functionality by making these variables accessible across multiple methods without reinitialization each time. Additionally, in BrowseBookmarkFeedFragment.java, there's a shift from setting title via base.setTitle() with conditional logic based on intent actions to direct string formatting for search results, which changes how titles are dynamically generated and displayed. These modifications indicate functional changes beyond simple structural refactoring.",
      "llm_confidence": "high",
      "project_name": "PinDroid",
      "analysis_timestamp": "2025-08-27T05:28:21.773569",
      "diff_size": 12028,
      "diff_lines": 310
    },
    {
      "hash": "9ead881a6727cadd175bd62e2338bf34ff826d69",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a try-catch block around the deserialization logic, which changes the error handling behavior. Previously, if deserialize() threw an exception (not shown in diff but implied by context), it would have been caught and handled implicitly or not at all; now, specific SyntaxError exceptions are caught and processed differently, altering the program's flow for certain errors.",
      "llm_confidence": "medium",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-27T05:28:29.268992",
      "diff_size": 699,
      "diff_lines": 20
    },
    {
      "hash": "9eb5b374517259a5bf766619979d52754520880d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-27T05:28:40.032876",
      "diff_size": 94209,
      "diff_lines": 1961
    },
    {
      "hash": "9ed219b870494e212a69833dc8b85646a6f0de04",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T05:28:53.668370",
      "diff_size": 112668,
      "diff_lines": 2075
    },
    {
      "hash": "9ed2727739c73d64086d09a86a407a77390f081a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T05:30:10.766889",
      "diff_size": 2199650,
      "diff_lines": 49088
    },
    {
      "hash": "9efaa289f09eb1e64bde3b9d73913853af24dab1",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class MockMvcRequestSpecificationImpl and modifies the existing RestAssuredMockMvc class. The changes include adding method signatures for standaloneSetup, webAppContextSetup, and given(), which now return instances of MockMvcRequestSpecificationImpl instead of creating them directly in the static methods. This involves restructuring with functional additions, such as new conditional logic (e.g., notNull checks) and modifications to behavior through parameter handling and exception filtering. The introduction of a new class indicates code movement that alters functionality due to added method implementations.",
      "llm_confidence": "medium",
      "project_name": "rest-assured",
      "analysis_timestamp": "2025-08-27T05:31:38.006137",
      "diff_size": 21407,
      "diff_lines": 515
    },
    {
      "hash": "9f00d960d1f6697436aea807baf3bf04ebba97d1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T05:31:53.895556",
      "diff_size": 3431093,
      "diff_lines": 60198
    },
    {
      "hash": "9f0403a41cd31fc2d3dc31abfca8f9e8702204dd",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'isPowerSource' in PipeTransportPower and modifies the condition for power sources. This includes changes to how energy connections are handled, specifically by checking if the tile is an instance of IEngine or IEnergyReceiver/IEnergyProvider, which alters the logic flow and behavior compared to previous implementations.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T05:32:02.300593",
      "diff_size": 4967,
      "diff_lines": 113
    },
    {
      "hash": "9f15ec6de11c57d5fff02fe08639b647fc0749e8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T05:33:09.057050",
      "diff_size": 458198,
      "diff_lines": 9611
    },
    {
      "hash": "9f1ddcc81eb0f75d2fbd663e7143dab28ee6a512",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Multiverse-Core",
      "analysis_timestamp": "2025-08-27T05:33:23.342151",
      "diff_size": 76244,
      "diff_lines": 1633
    },
    {
      "hash": "9f4155a150c6673de5e43051231d7405ae393b7a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jna",
      "analysis_timestamp": "2025-08-27T05:34:40.293752",
      "diff_size": 131069,
      "diff_lines": 4104
    },
    {
      "hash": "9f471e3e65187345372b2fc0f7a3e80f5c0e32bb",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T05:34:56.933276",
      "diff_size": 9286,
      "diff_lines": 232
    },
    {
      "hash": "9f4f1fb2f924daf94a178ab11ccb18ddaa9ee09d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-27T05:36:15.582031",
      "diff_size": 45651,
      "diff_lines": 1089
    },
    {
      "hash": "9f5581463f1b2d07217f59fa32346c786069dbf5",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T05:37:31.828114",
      "diff_size": 528780,
      "diff_lines": 12323
    },
    {
      "hash": "9f5eca6190ba9dd873ddbcedd6d0c5d9153d67f3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new interface AreaI and modifies the AreaPtg class to implement it, which is a structural change. However, there are functional changes: the method toFormulaString in AreaPtg now uses a helper method that handles whole-column references differently by returning 'C:C' instead of 'C$1:C$0'. This change affects the behavior because when converting Ptgs to strings for display, it produces a more user-friendly representation. Additionally, there are changes in how whole-column ranges are handled internally and externally, including updates in test cases that now expect different string representations (e.g., SUM(C:C) instead of SUM(C$1:C$0)). These modifications indicate functional behavior changes beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-27T05:37:42.421993",
      "diff_size": 15915,
      "diff_lines": 363
    },
    {
      "hash": "9f6f0f5fadd14700359270cf3ba8f15fc33ea5db",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality with the addition of a ScheduledExecutorService and related code for periodic publishing. It also adds two test interfaces (InterfaceNameTestService and InterfaceNameTestService2) which are used in tests to verify behavior changes, including handling different interface names and service descriptors. The method 'calculateStartTime' is added with logic that modifies the timing behavior, indicating a functional change beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T05:37:52.281777",
      "diff_size": 24204,
      "diff_lines": 496
    },
    {
      "hash": "9f6fcc340d89eecc000765f6ab93e862f53a02d9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T05:37:59.522798",
      "diff_size": 15475198,
      "diff_lines": 304439
    },
    {
      "hash": "9f71fdfe0e1ed9578e96d6c6fd1977e4eb8561d2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T05:38:32.975396",
      "diff_size": 237813,
      "diff_lines": 5715
    },
    {
      "hash": "9f95ed0eaf959e19f5bcc7cd4864f6ea8b7e2008",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T05:43:15.709166",
      "diff_size": 56737,
      "diff_lines": 1327
    },
    {
      "hash": "9f9e79dd99290c056c52be952fd2f607807a8a78",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in this commit introduce a method signature change from String to Index object, which alters the way index information is passed and processed. This includes modifications to how indices are identified for upgrading (using schema version) and copying operations, indicating functional behavior changes rather than pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T05:43:24.770672",
      "diff_size": 12046,
      "diff_lines": 186
    },
    {
      "hash": "9fa1b4fcafeb5521aa60a1ae5123aba67a1c24db",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T05:43:33.865772",
      "diff_size": 37083,
      "diff_lines": 1010
    },
    {
      "hash": "9fab67ee533f6c3d19b12daa73ee755c47fa6d43",
      "purity_classification": "FALSE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve renaming and code organization without altering functionality. The Logger was changed from static to final, which is a structural change but does not affect behavior. Method names were updated (e.g., setBasedir -> resetBase() in FileServer) for clarity or consistency, preserving the same logic. New methods like closeFile(String name, FileEntry fileEntry) and toBasicHeader() are added but they directly replace existing functionality without changing behavior.",
      "llm_confidence": "high",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-27T05:43:42.995221",
      "diff_size": 25448,
      "diff_lines": 672
    },
    {
      "hash": "9fb1c343f254e74524d48fa0826522032f16ff9c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T05:43:52.211362",
      "diff_size": 639555,
      "diff_lines": 17238
    },
    {
      "hash": "9fd7f57ddc43a79522f7c6fbb8a49e26eed7598c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-27T05:45:09.141448",
      "diff_size": 117123,
      "diff_lines": 3204
    },
    {
      "hash": "a0225bad54c808e10a1c2381197e60adab0136c5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T05:49:00.138567",
      "diff_size": 166423,
      "diff_lines": 4500
    },
    {
      "hash": "a02f7a689434fe37dd11fe54ca353989f878848d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T05:50:17.677727",
      "diff_size": 44446,
      "diff_lines": 858
    },
    {
      "hash": "a032317f57ee52627f85c6d5088c3cdefadb6120",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T05:51:35.323190",
      "diff_size": 709445,
      "diff_lines": 21287
    },
    {
      "hash": "a03424ef95559c9df2bb7f86e1ac1edca1436058",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T05:52:52.252546",
      "diff_size": 2406696,
      "diff_lines": 23163
    },
    {
      "hash": "a035a15632597a5b9ee28263db9729d081d87a33",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T05:54:09.030523",
      "diff_size": 35272,
      "diff_lines": 1040
    },
    {
      "hash": "a035b04f807864185b80ed88b56bd310b1d21cfa",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T05:55:25.677333",
      "diff_size": 1767790,
      "diff_lines": 43074
    },
    {
      "hash": "a0569da249765a50f6082e697dd8ca787b10ac35",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T05:56:43.155593",
      "diff_size": 39430,
      "diff_lines": 614
    },
    {
      "hash": "a057f0a2b11b4ea1fe452a1a25f0c17c26895b13",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve structural refactoring with minimal functional impact. The .classpath file updates the build path without altering behavior, changing a test library inclusion and adding an output entry but maintaining identical functionality. In SQLiteProvider.java, method signatures remain unchanged except for renaming 'getTableName' to 'getItemDirID', which is semantically equivalent given the context of URI table mapping. Similarly in UriUtils.java, static methods are renamed (e.g., getTableName -> getItemParentID) without changing their logic or inputs/outputs. The test files show no functional changes; they only update method calls and assertions slightly but preserve all existing behaviors.",
      "llm_confidence": "high",
      "project_name": "SQLiteProvider",
      "analysis_timestamp": "2025-08-27T05:56:55.173171",
      "diff_size": 17966,
      "diff_lines": 508
    },
    {
      "hash": "a06be23fbe7859063039767ce0dff64922445f39",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T05:58:13.392527",
      "diff_size": 133642,
      "diff_lines": 2827
    },
    {
      "hash": "a083857efc72542c4d86d2e7551b1e51ac39faf2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T05:59:29.826433",
      "diff_size": 223081,
      "diff_lines": 6221
    },
    {
      "hash": "a0856422ac0a830c1f3f7eef9ec7f5e9ffadfc8c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T05:59:42.694123",
      "diff_size": 20654,
      "diff_lines": 468
    },
    {
      "hash": "a09dc3a530921c5c4a8a9cdf3df201aef2c11742",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T06:01:24.853542",
      "diff_size": 1208637,
      "diff_lines": 27249
    },
    {
      "hash": "a0a3cb6f7f689a41a0113bbeb6023edbe98d0690",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "core",
      "analysis_timestamp": "2025-08-27T06:01:32.354018",
      "diff_size": 19005,
      "diff_lines": 483
    },
    {
      "hash": "a0a949440e9025300e4574a07628cbe5a95e517c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T06:01:44.791848",
      "diff_size": 938012,
      "diff_lines": 20011
    },
    {
      "hash": "a0ba4d7d511a77e10859cee449a3eda678ca19ab",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method `initializeClientFromURI` in the BinaryJedis class, which replaces multiple lines of code that parsed and used parts of the URI. This change involves restructuring how client initialization is done from a URI, including handling password and database index differently (using JedisURIHelper). Additionally, it adds a constructor with timeout parameter to JedisPool and updates related methods. The justification for FLOSS classification includes: 1) New conditional logic in `initializeClientFromURI` that checks if password or dbIndex is present before proceeding; 2) Changes to method signatures (e.g., adding parameters) which affect behavior by allowing more flexible initialization with timeout.",
      "llm_confidence": "high",
      "project_name": "jedis",
      "analysis_timestamp": "2025-08-27T06:01:55.235045",
      "diff_size": 15181,
      "diff_lines": 426
    },
    {
      "hash": "a0bd16891705bf4087e0766d744a009ac923b5f3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jsoup",
      "analysis_timestamp": "2025-08-27T06:02:04.728409",
      "diff_size": 178058,
      "diff_lines": 3815
    },
    {
      "hash": "a0c2e337cdc6df090f0a60eac106905322d6d921",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve a significant restructuring of the code, including modifications to method signatures and logic. In MeetingService.java, the method 'getRecordings' now takes two ArrayList parameters instead of one Map with nested structure, which alters its behavior by changing how state filters are applied. Similarly, RecordingService.java's 'getRecordings' method is updated to accept different parameters and includes conditional checks for states that change the logic flow. The API controller also changes from using a Map-based filter system to an ArrayList-based state filtering approach, affecting what recordings are retrieved based on their state.",
      "llm_confidence": "high",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T06:02:15.781115",
      "diff_size": 14334,
      "diff_lines": 258
    },
    {
      "hash": "a0cc667fbc49c1894e7dccdc7969165d43afe549",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in PearlDiver.java involve restructuring the thread creation and management logic. A new Thread array 'workers' is introduced, and each worker thread is stored before starting. Additionally, a loop is added to join these threads with proper exception handling. This introduces new conditional logic (the for-loop) and modifies how threads are managed, which alters the control flow and behavior compared to the original pure method extraction.",
      "llm_confidence": "high",
      "project_name": "iri",
      "analysis_timestamp": "2025-08-27T06:02:24.719009",
      "diff_size": 2172,
      "diff_lines": 57
    },
    {
      "hash": "a0d4c61082a56593a08a3779dd5b19a95a92c253",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality for handling and storing configuration XML, including adding a Config domain class, modifying Meeting to use defaultConfig instead of defaultConfigURL, updating ApiErrors with new error methods, and enhancing ParamsProcessorUtil. These changes include conditional logic (if/else statements) in ApiController and MeetingService that alter behavior by checking configToken presence and processing configurations differently. Additionally, the method signatures are modified (e.g., storeConfig now returns a token string), and there is algorithm modification for storing and retrieving configs with unique tokens.",
      "llm_confidence": "high",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T06:02:34.731228",
      "diff_size": 15956,
      "diff_lines": 444
    },
    {
      "hash": "a0d966713c2463372656c85e8b506d79cabd4962",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'hasAuthenticatedUser()' in AuthenticationService, which is used to check for authentication context. This changes the behavior of TimelineService by modifying its logic to conditionally retrieve user groups and favorite line based on this method's result. Additionally, a new method 'getUserTimeline' is added with different parameters (login instead of username) and more query options, altering the interface and functionality. The SyndicTimelineController also updates to use the new service method and adds feed metadata objects that were not present before.",
      "llm_confidence": "high",
      "project_name": "tatami",
      "analysis_timestamp": "2025-08-27T06:02:44.236698",
      "diff_size": 10654,
      "diff_lines": 239
    },
    {
      "hash": "a0f6205c99d8487c3ef83fae59a96195610001b0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Rajawali",
      "analysis_timestamp": "2025-08-27T06:04:03.504581",
      "diff_size": 133181,
      "diff_lines": 3700
    },
    {
      "hash": "a0f9010fa06a43cbda0540f1a7063cf1e9dc3a5d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "YCSB",
      "analysis_timestamp": "2025-08-27T06:05:20.322247",
      "diff_size": 74161,
      "diff_lines": 1842
    },
    {
      "hash": "a0fbca0d863e63bc9d1bc2eeb9d034fc94ab1972",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit includes changes that alter the behavior of the code. In StandardProjectHandler.java, the gravity value for the ball is changed from -8.0f to -4.0f (Vector2), and the position for leftBottomWallStartScript is modified from (-155.0f, -255.0f) to (0.0f, -100.0f). Additionally, in PhysicsObject.java, there are changes to method signatures and logic that affect collision handling by setting categoryBits and maskBits differently based on the object type. These modifications change the functional behavior of the code.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T06:05:31.470155",
      "diff_size": 14369,
      "diff_lines": 341
    },
    {
      "hash": "a103f18dbeaa0ae82f2190dc1d08548763f2a631",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T06:05:45.591470",
      "diff_size": 2387631,
      "diff_lines": 59415
    },
    {
      "hash": "a1075224d32d9c60686d804df4b68e3fa46d6291",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Multiverse-Core",
      "analysis_timestamp": "2025-08-27T06:05:58.141845",
      "diff_size": 47176,
      "diff_lines": 1136
    },
    {
      "hash": "a10c600a257ffe644ab2fe60c90685e3593004cb",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "nimbus",
      "analysis_timestamp": "2025-08-27T06:07:15.079195",
      "diff_size": 55231,
      "diff_lines": 1185
    },
    {
      "hash": "a130b9e62321d76aebacd3bb0cc7d9425e0276b5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-27T06:11:04.850211",
      "diff_size": 71997,
      "diff_lines": 2102
    },
    {
      "hash": "a1347966677dddce2a432a1cd19080557048bac0",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T06:12:20.561000",
      "diff_size": 70723,
      "diff_lines": 1701
    },
    {
      "hash": "a15500e742b7c18804ead7ef338d6fa39b9ba984",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T06:13:36.626049",
      "diff_size": 79757,
      "diff_lines": 1529
    },
    {
      "hash": "a161f8a27da9ad4f478910dbf16e1e71a1f6a90e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T06:14:53.158546",
      "diff_size": 117845,
      "diff_lines": 2470
    },
    {
      "hash": "a16af5c20864903936000247d45bd36e38dd1a46",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T06:17:25.762258",
      "diff_size": 41468,
      "diff_lines": 988
    },
    {
      "hash": "a175eadfd2319b32136faa4e52def1edebfbf446",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-27T06:18:42.611412",
      "diff_size": 85397,
      "diff_lines": 2171
    },
    {
      "hash": "a1913e1d227080c117d43ff91f4b1047bdc62b4d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new interface DataResources and refactors the QueryResources class to use it. This includes changing field names from 'resources' and 'jdbc' to 'texts' and 'external', respectively, which alters the structure of how resources are stored and accessed. Additionally, methods like addResource and jdbc() now interact with this new structure, indicating functional changes beyond pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "basex",
      "analysis_timestamp": "2025-08-27T06:18:52.718307",
      "diff_size": 12592,
      "diff_lines": 340
    },
    {
      "hash": "a194f7bb046c1fbe6dea2f03b3c46b5b2e91a154",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T06:19:12.894413",
      "diff_size": 52047,
      "diff_lines": 1326
    },
    {
      "hash": "a19f7f1c6ef78ccdb935b9834f153573bc9de837",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T06:19:24.589621",
      "diff_size": 48309,
      "diff_lines": 1027
    },
    {
      "hash": "a1af3bca86e6e53c2dbd184da97963ce01f6304a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T06:20:41.381300",
      "diff_size": 59736,
      "diff_lines": 1258
    },
    {
      "hash": "a1cb713ab44eadfda620877141f0eb0c2a341823",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T06:25:48.872788",
      "diff_size": 41366,
      "diff_lines": 973
    },
    {
      "hash": "a1de9e8b6fcf62e20516605fa9120e5ab1379e1f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "graylog2-server",
      "analysis_timestamp": "2025-08-27T06:27:06.373957",
      "diff_size": 185718,
      "diff_lines": 4072
    },
    {
      "hash": "a1f178413bc96686a9fa3fc1218a1b05dee6b69f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T06:28:22.859926",
      "diff_size": 27808,
      "diff_lines": 690
    },
    {
      "hash": "a1f645f9aba7cdc222b6fbd3d17742d005dc4acc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T06:29:38.959052",
      "diff_size": 38384,
      "diff_lines": 860
    },
    {
      "hash": "a20ac8708a9ff19c4eb0268e47e98225aff2c7f5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change to the method signature of addDFAState by adding an additional parameter (contextCache) and modifying its implementation. This affects behavior because it now uses contextCache for joining contexts, which is not present in the old version. Additionally, the overridden method in TestPerformance.java also changes to include this new parameter, indicating a functional change rather than pure structural refactoring.",
      "llm_confidence": "high",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T06:29:47.437334",
      "diff_size": 4495,
      "diff_lines": 95
    },
    {
      "hash": "a20b2051c031234484e81154e32556e7041744d1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T06:29:54.982055",
      "diff_size": 138356,
      "diff_lines": 3293
    },
    {
      "hash": "a22ce89e868644ea04f0f3dacec05fff1673a345",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T06:30:25.281233",
      "diff_size": 303566,
      "diff_lines": 5658
    },
    {
      "hash": "a23597b05d2640ad947a70f2591d75a3b9951e12",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The diff shows multiple changes across several files, including removals of method 'addDrops' from various tile classes (TileEngineIron_BC8, TileDistiller_BC8, TileFloodGate, TileHeatExchangeEnd, TileHeatExchangeStart, TilePump) and its replacement in the base class TileBC_Neptune. Additionally, there are changes to import statements removing references to 'net.minecraft.item.ItemStack' and 'buildcraft.api.items.FluidItemDrops'. The method 'addDrops' is being removed from these classes entirely, which indicates a functional change as it was part of their drop logic. However, the base class now handles this functionality via its overridden addDrops method that calls tankManager.addDrops(). This suggests a restructuring with potential behavioral changes due to centralization of drop handling.",
      "llm_confidence": "medium",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T06:30:36.587885",
      "diff_size": 17040,
      "diff_lines": 402
    },
    {
      "hash": "a23f58522dfd1214ab935d4d9b832142d3f5f248",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "android",
      "analysis_timestamp": "2025-08-27T06:30:46.659972",
      "diff_size": 562421,
      "diff_lines": 13513
    },
    {
      "hash": "a281500ef22d946fe445662a9ade882ab603ef02",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "hydra",
      "analysis_timestamp": "2025-08-27T06:30:57.429032",
      "diff_size": 22324,
      "diff_lines": 396
    },
    {
      "hash": "a287f42ceb1d5eac033e2db2201422801b772e99",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T06:32:15.501195",
      "diff_size": 858010,
      "diff_lines": 19904
    },
    {
      "hash": "a2a8fc0bc6a647ec63ba0fb6feb89796fb948075",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T06:32:25.095666",
      "diff_size": 21711,
      "diff_lines": 382
    },
    {
      "hash": "a2aa8f27ac7628f380b40c8507bde8bb5cbf53a4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T06:32:49.932656",
      "diff_size": 51388,
      "diff_lines": 1086
    },
    {
      "hash": "a2d10c45076d0cc920c6649fcc797697102280f2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include modifications to method signatures (e.g., changing 'addColumn' parameter from Cell to Column) and additions of new conditional logic in the SSTableSimpleUnsortedWriter class. Additionally, there are calls to finishCompactionsAndShutdown which alter the behavior by ensuring compaction tasks complete before shutdown. These functional changes indicate FLOSS refactoring.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T06:36:50.361238",
      "diff_size": 12799,
      "diff_lines": 304
    },
    {
      "hash": "a2eaf685707140a0dd02df5f236df8923051d5a4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the parameter types of several methods from String to File, which alters how inputs are handled. This is evident in the FileSystem interface and its implementations (DiskFileSystem, MemoryFileSystem). Additionally, there are changes in method signatures for constructors and other methods that affect behavior by requiring different input formats. The introduction of new conditional logic based on file existence checks using File objects further indicates functional modifications beyond pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-27T06:37:01.089480",
      "diff_size": 24283,
      "diff_lines": 605
    },
    {
      "hash": "a2f5714240d9b99dec508ea1f03fab176c59b1d6",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-27T06:37:40.159494",
      "diff_size": 32458,
      "diff_lines": 897
    },
    {
      "hash": "a3055094ae3c5e5d31c58142b56605ed674bbd61",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T06:38:57.046564",
      "diff_size": 388383,
      "diff_lines": 8634
    },
    {
      "hash": "a3410e56cd4db794223d51d6b384c7758668ece3",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-27T06:44:02.306828",
      "diff_size": 42853,
      "diff_lines": 1178
    },
    {
      "hash": "a35558d58a9d013da2c297bcb865b42ed9bcf454",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The change replaces a direct call to getView().findViewById with a variable assignment and an additional null check. This is purely structural, as the same functionality (hiding the view if its width exceeds 2/3 of the total width) is preserved without altering behavior or adding new features.",
      "llm_confidence": "high",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-27T06:44:09.915071",
      "diff_size": 812,
      "diff_lines": 16
    },
    {
      "hash": "a359601e2872da4fbb9754eb5ed071d4cd35b9ad",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-27T06:44:33.725251",
      "diff_size": 23526,
      "diff_lines": 739
    },
    {
      "hash": "a365b39268e1fd8022e50793e6e54cda52b87ba4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T06:44:41.725254",
      "diff_size": 114785,
      "diff_lines": 2131
    },
    {
      "hash": "a36bae8948f11accaa01808bd747c1e542d9d0e6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "ExtrabiomesXL",
      "analysis_timestamp": "2025-08-27T06:45:17.989695",
      "diff_size": 37683,
      "diff_lines": 829
    },
    {
      "hash": "a36d55dd0159f7cb228b5ca0ee48b465d0f406d4",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T06:46:34.526323",
      "diff_size": 487632,
      "diff_lines": 12483
    },
    {
      "hash": "a394090969ac6a1dfc1c58f7829d71e203fca7b8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-27T06:46:41.959348",
      "diff_size": 18792,
      "diff_lines": 410
    },
    {
      "hash": "a396063981a563c2269d65749ff3dd3fa3df00f7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit includes changes that alter method signatures (e.g., 'endMeeting' changed from String to meetingId) and introduces new conditional logic in the event handling. Additionally, there are modifications to return values and exception handling patterns across multiple files, indicating functional changes rather than pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T06:46:50.322326",
      "diff_size": 8577,
      "diff_lines": 157
    },
    {
      "hash": "a39c3cbab9e0d6fa2235ef88d83ec6ce8e930231",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T06:47:08.863811",
      "diff_size": 207937,
      "diff_lines": 4512
    },
    {
      "hash": "a39c73ca12dabba01412083afbf0b58dfb42a79e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a significant restructuring of the code for handling user ID changes during key certification. It replaces the simple loop with an if-else structure that differentiates between primary ID change and no change scenarios, which alters the control flow and behavior. Additionally, it adds new conditional logic to handle cases where IDs are changed or removed, including generating certifications differently based on conditions.",
      "llm_confidence": "high",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T06:47:16.759120",
      "diff_size": 5789,
      "diff_lines": 112
    },
    {
      "hash": "a3a8dbca5cc190caea36c5029d83f02977b6d149",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T06:47:36.887611",
      "diff_size": 969840,
      "diff_lines": 20118
    },
    {
      "hash": "a3b3853dc73c19432afa41b1e36357e08076498c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new feature for message journaling by adding configuration parameters and modifying the InputBufferImpl to conditionally handle events based on whether the journal is enabled. This includes changes to method signatures, addition of conditional logic (if-else statements), and introduction of new classes (RawMessageEncoderHandler) that perform specific functions related to encoding messages for journaling.",
      "llm_confidence": "high",
      "project_name": "graylog2-server",
      "analysis_timestamp": "2025-08-27T06:47:45.672309",
      "diff_size": 9408,
      "diff_lines": 200
    },
    {
      "hash": "a3d5c123450f6551b21c1ff6d2d2888f4d1f7305",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T06:47:54.206028",
      "diff_size": 73752,
      "diff_lines": 1681
    },
    {
      "hash": "a3dfc8016c6df7021b21f11c8fc97bcca0af9253",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "threetenbp",
      "analysis_timestamp": "2025-08-27T06:48:11.717219",
      "diff_size": 80873,
      "diff_lines": 1906
    },
    {
      "hash": "a405f276c641f5bf0ef2e87229206f8fd11c69ea",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "xabber-android",
      "analysis_timestamp": "2025-08-27T06:49:24.029244",
      "diff_size": 33395,
      "diff_lines": 743
    },
    {
      "hash": "a40bd45c9666b33812e77ad4165710bcbc056baa",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T06:49:33.333140",
      "diff_size": 10417,
      "diff_lines": 282
    },
    {
      "hash": "a4193af7d9fb0d0ce2da6b2a775ddfe795ee8b85",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fabric8",
      "analysis_timestamp": "2025-08-27T06:49:40.827931",
      "diff_size": 248471,
      "diff_lines": 5956
    },
    {
      "hash": "a43b509f14e04129b086cf612fd893cdf81fa0fd",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "grails-core",
      "analysis_timestamp": "2025-08-27T06:49:49.588279",
      "diff_size": 4447165,
      "diff_lines": 113462
    },
    {
      "hash": "a43dc98d8648fad8799b0a21b15f1f2b22e6e304",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T06:51:06.949019",
      "diff_size": 79159,
      "diff_lines": 1909
    },
    {
      "hash": "a485c15c7d8f93cd5a42e08ac515845bd41b7b68",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T06:56:17.138775",
      "diff_size": 28929,
      "diff_lines": 550
    },
    {
      "hash": "a4a3b8f742ed32536865809f828df8561cdec5ba",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in Comments.java and Likes.java introduce new fields (openGraphCommentOrder, openGraphCanLike, etc.) and modify the fillFromSummary method to handle additional logic. In PageRating.java, there are structural changes including renaming variables and methods, but also functional additions like handling a 'data' object with nested properties for rating scale and review text. The test files update to reflect these new fields and behaviors, indicating that functionality has been extended or modified.",
      "llm_confidence": "medium",
      "project_name": "restfb",
      "analysis_timestamp": "2025-08-27T06:56:26.963303",
      "diff_size": 13402,
      "diff_lines": 444
    },
    {
      "hash": "a4a7bc6aac4b61aca5c03eca890a69d89c827552",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "gephi",
      "analysis_timestamp": "2025-08-27T06:57:46.619948",
      "diff_size": 73053,
      "diff_lines": 1908
    },
    {
      "hash": "a4b1e10ef5e2b49d6c97840cc7d2d732ed5d9ffa",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T06:59:09.977009",
      "diff_size": 21583,
      "diff_lines": 439
    },
    {
      "hash": "a4bea74aeb9dcd8a2104ae1a7d4660a65af7420f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T06:59:17.747419",
      "diff_size": 2907164,
      "diff_lines": 65632
    },
    {
      "hash": "a4c5ca0c692c8f5952e9f19d3fc7abd4419e8aa4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T06:59:26.554595",
      "diff_size": 28608,
      "diff_lines": 705
    },
    {
      "hash": "a4d602933f30cb3e71f6d4bba8a38177758d4620",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve refactoring the method signatures and parameter passing in the AutoIngestDashboard, AutoIngestJobsNode, and AutoIngestJobsPanel classes. The refreshTables() method now passes a JobsSnapshot object instead of directly referencing autoIngestMonitor, which is a structural change without altering functionality. Similarly, the constructor for AutoIngestJobsNode changed to accept a JobsSnapshot parameter, and the refresh method in AutoIngestJobsPanel was updated accordingly. These changes are consistent with pure refactoring as they only restructure how data is passed (via dependency injection) without changing behavior or adding new features.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T06:59:37.427431",
      "diff_size": 8349,
      "diff_lines": 157
    },
    {
      "hash": "a4d7573a77750fee7e0026a4f572df5360129dea",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces several changes that alter the functional behavior of the code. In LexerATNSimulator, it replaces direct field access with method calls (isAcceptState() and getPrediction()) which may change how these states are handled in subclasses or other parts of the system if they override these methods. Similarly, in ParserATNSimulator, multiple occurrences of isAcceptState and prediction fields are replaced by accessor methods, affecting state management and debugging output. DFAState now uses private fields with public getters/setters, changing its interface which could impact code relying on direct field access. These changes introduce new ways to interact with the objects that were previously accessed directly, indicating a functional change.",
      "llm_confidence": "high",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T06:59:47.575037",
      "diff_size": 12460,
      "diff_lines": 307
    },
    {
      "hash": "a4db9793ea02dacc35c497def2db16ba26e30148",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T06:59:55.087848",
      "diff_size": 34418,
      "diff_lines": 528
    },
    {
      "hash": "a4dfaf1d1148fa6ba900b3e4c9685a2e0548d2e5",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T07:00:05.690426",
      "diff_size": 96282,
      "diff_lines": 1862
    },
    {
      "hash": "a4f622dd7ed65a241935601f8fae73ad3f401ee5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new functionality by adding an option to limit image file size during embedding. This includes modifying the CSSURLEmbedder class constructor and its embedImages method to incorporate this new condition, which changes the behavior of how images are processed when they exceed a specified size.",
      "llm_confidence": "high",
      "project_name": "cssembed",
      "analysis_timestamp": "2025-08-27T07:01:31.447664",
      "diff_size": 8831,
      "diff_lines": 183
    },
    {
      "hash": "a53da491c09fc7db814d4c2358ffe5dc9fe888bc",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T07:02:49.815838",
      "diff_size": 227480,
      "diff_lines": 4700
    },
    {
      "hash": "a55f82bd310cf1703a8eacf27d9096fdbaa4ef71",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in Asset.java and other files involve restructuring with functional modifications. In Asset.java, the copy method is replaced by a private copy method that uses FilenameUtils for path concatenation, altering how paths are handled. This introduces new conditional logic (checking file.isDirectory) and modifies exception handling details. Similarly, Crawler.java now uses FilenameUtils.concat which changes the way contentPath is constructed compared to source.getPath() + separator. These structural changes include modifications in parameter usage and return value formatting that affect behavior.",
      "llm_confidence": "medium",
      "project_name": "jbake",
      "analysis_timestamp": "2025-08-27T07:05:25.458075",
      "diff_size": 16343,
      "diff_lines": 461
    },
    {
      "hash": "a56472741bae66448b315b0cc7c1a5cab3c5e7aa",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "ExtrabiomesXL",
      "analysis_timestamp": "2025-08-27T07:05:35.869054",
      "diff_size": 16178,
      "diff_lines": 486
    },
    {
      "hash": "a564c4cb638ec9fba87ceaf3fef381b5a1489106",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "YCSB",
      "analysis_timestamp": "2025-08-27T07:05:45.752629",
      "diff_size": 417792,
      "diff_lines": 10385
    },
    {
      "hash": "a5822695e7246d8b4fc6408f59c64dd9997e6cf6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T07:06:31.770138",
      "diff_size": 34754,
      "diff_lines": 683
    },
    {
      "hash": "a582e28e64502e10a7bb3391715461292234f72b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a structural change by replacing 'viaLegs' with 'viaSegments'. However, this is not merely a rename or simple reorganization. The method signature changes from getRoutingResponse(RouteViaRequest request, RouteViaRequest.ViaLeg v) to getRoutingResponse(RouteViaRequest request, RouteViaRequest.ViaSegment v), indicating a change in parameter type which affects behavior. Additionally, the code that was previously using viaLegs() now uses viaSegment(), and there are changes in how elements are accessed (e.g., from index i to i+1 for filtering). These modifications constitute functional changes beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "OpenTripPlanner",
      "analysis_timestamp": "2025-08-27T07:06:41.101952",
      "diff_size": 5759,
      "diff_lines": 148
    },
    {
      "hash": "a58653bc1161524f840978d0dcca0d3548f98a73",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T07:06:50.902581",
      "diff_size": 68998,
      "diff_lines": 1774
    },
    {
      "hash": "a5acef742728815023b552f8605bd7831e64df58",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T07:07:29.353039",
      "diff_size": 63338,
      "diff_lines": 1488
    },
    {
      "hash": "a5b1c2f0d56216496d91fd997242ec91eaefe664",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T07:08:30.251190",
      "diff_size": 11338776,
      "diff_lines": 244288
    },
    {
      "hash": "a5bc52eee90e342efcdc53282612008d3dbaeaeb",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T07:09:46.483620",
      "diff_size": 326268,
      "diff_lines": 7929
    },
    {
      "hash": "a5eda673274ed6b085b4c7c0a7f7746a7f70fbd8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T07:11:09.072032",
      "diff_size": 9770,
      "diff_lines": 253
    },
    {
      "hash": "a600920cb5ee2866b09ee6c1ebae9518096e5bc4",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T07:11:21.469901",
      "diff_size": 667256,
      "diff_lines": 13966
    },
    {
      "hash": "a605e7da138697a5fa2d5067a75838f7ce68219d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-27T07:11:54.656801",
      "diff_size": 84254,
      "diff_lines": 2353
    },
    {
      "hash": "a60f3163f74863ec9c2a3177a913b87055b0a8f9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include a mix of structural refactoring and functional changes, but there are several indicators suggesting functional changes: (1) The class name 'MessageDeliveryController' is renamed to 'MessageResultsController'. This is not just renaming but a change in the role of the class from handling message delivery to results. (2) Method names have been changed from sendSMSWithMessageDeliveryAPIEnabled to sendSMSWithMessageResultsAPIDisabled, indicating different functionality. (3) The method signature for sending messages has changed: 'sendSMS' is now called with a SyncUrl object instead of the old parameter type. This change in parameters and return types indicates functional changes.",
      "llm_confidence": "medium",
      "project_name": "SMSSync",
      "analysis_timestamp": "2025-08-27T07:13:11.566114",
      "diff_size": 28406,
      "diff_lines": 609
    },
    {
      "hash": "a61185398628385ba5d4fad3b0ead86f4e20ad67",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include modifications to method signatures (changing 'public final int group' to 'private final int group') and the addition of new conditional logic in BlockCustomFlower's getGroupTypeIcon method. In the latter, a warning is added when no icon is found for a block type, which alters error handling behavior. Additionally, the BlockHandler change involves updating how blocks are registered with proxy methods, including correcting an earlier mistake by reverting to the original class reference (Block.getClass().getName() instead of extrabiomes.items.ItemFlower.class). These functional changes and behavioral modifications indicate floss refactoring.",
      "llm_confidence": "medium",
      "project_name": "ExtrabiomesXL",
      "analysis_timestamp": "2025-08-27T07:13:20.644015",
      "diff_size": 3917,
      "diff_lines": 100
    },
    {
      "hash": "a62d7f759f56671df2021807ec6fae0b557059e2",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'log' that refactors the existing test logic, altering how log messages and exceptions are handled. This includes changes to exception handling (adding MishandledException) and modifications in the way tab characters are processed within the SyslogAppenderTest class. The introduction of conditional statements based on parameters indicates functional changes beyond pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-27T07:13:27.421829",
      "diff_size": 4250,
      "diff_lines": 121
    },
    {
      "hash": "a6368e4a2ff3c0f38d4161d11ac2ce978f1f65aa",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve renaming and reorganizing imports, with no modifications to the logic or behavior of the code. The commit renames several classes and their packages (e.g., moving MockMvcRequestSpecification from top-level package to specification subpackage), which is a pure structural change preserving semantics.",
      "llm_confidence": "high",
      "project_name": "rest-assured",
      "analysis_timestamp": "2025-08-27T07:13:33.178258",
      "diff_size": 5770,
      "diff_lines": 82
    },
    {
      "hash": "a6385f3eb1928dcb8eca30406154bd350fade164",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-27T07:13:45.102575",
      "diff_size": 336182,
      "diff_lines": 10108
    },
    {
      "hash": "a646d21a6bab53ff404fbe5fe9197e70a1ba0398",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality by adding support for Graph API 2.9, including modifications to existing types (User and URL) with added fields or properties that change behavior. Additionally, it adds a breaking change in the JSON parsing logic for arrays when strings start with '[' but are not recognized as such, requiring special handling. The test cases are updated to reflect these changes, indicating functional alterations.",
      "llm_confidence": "high",
      "project_name": "restfb",
      "analysis_timestamp": "2025-08-27T07:13:53.977926",
      "diff_size": 8576,
      "diff_lines": 215
    },
    {
      "hash": "a649b7a3d40eae5fb7cbbe6b37988a002b6a1ed2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T07:14:02.401027",
      "diff_size": 129136,
      "diff_lines": 2553
    },
    {
      "hash": "a65c03599792e72ebd9517e71ad1e63c29113151",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-27T07:14:14.736108",
      "diff_size": 71516,
      "diff_lines": 2081
    },
    {
      "hash": "a65c7d64a8ea21a5bb7e5ce97c0e4a6847452b3b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "android-async-http",
      "analysis_timestamp": "2025-08-27T07:15:31.289527",
      "diff_size": 64154,
      "diff_lines": 1614
    },
    {
      "hash": "a68b97caac32029ba66e9b3ee7f2e1194401b2be",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "geoserver",
      "analysis_timestamp": "2025-08-27T07:19:22.205585",
      "diff_size": 488603,
      "diff_lines": 9968
    },
    {
      "hash": "a69a54e7a9f74ae586aa7f9cd20ca986b592192c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T07:20:39.155661",
      "diff_size": 53793,
      "diff_lines": 1490
    },
    {
      "hash": "a6d4168efcbee1201e487647bbdd8e06b9970753",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T07:21:55.825524",
      "diff_size": 776742,
      "diff_lines": 22461
    },
    {
      "hash": "a6ecfb9689fb757e7dac1c31dbb78534d81f8fde",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T07:23:09.626981",
      "diff_size": 23144,
      "diff_lines": 564
    },
    {
      "hash": "a6ed1efba51986966978eb253fb2af49c0b571af",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "torquebox",
      "analysis_timestamp": "2025-08-27T07:23:19.281259",
      "diff_size": 33009,
      "diff_lines": 787
    },
    {
      "hash": "a6ede9701141d3c5bb86be51091ade006e0c601f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T07:23:50.864465",
      "diff_size": 177205,
      "diff_lines": 4381
    },
    {
      "hash": "a6f8f2f256b1e1fe652066c622a264512737e8e3",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the diff primarily involve structural refactoring with no functional modifications. The new file 'ItemCustomCrop.java' introduces an enum and its associated methods, but these are purely for code organization and do not alter behavior. In contrast, the existing 'ItemCustomDye.java' commit shows parameter renaming from 'par1' to 'meta' in two methods without changing their logic or functionality. The method signatures remain consistent with identical inputs and outputs.",
      "llm_confidence": "high",
      "project_name": "ExtrabiomesXL",
      "analysis_timestamp": "2025-08-27T07:23:59.272948",
      "diff_size": 4829,
      "diff_lines": 154
    },
    {
      "hash": "a70d56ff566da3244a076a72f2323e38e89cd793",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method signature in Meeting.storeConfig and modifies the behavior of config handling. Specifically, it adds parameters for checksum and meetingID validation, implements backward compatibility logic, and changes how default configurations are stored and retrieved. These changes include conditional statements (if/else) that alter control flow based on input parameters, indicating functional modifications beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T07:24:08.148070",
      "diff_size": 12285,
      "diff_lines": 341
    },
    {
      "hash": "a71f81c27990ea52fb9084c3702dc229b6813cd5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T07:24:16.427983",
      "diff_size": 132463,
      "diff_lines": 3233
    },
    {
      "hash": "a74cfd453a2f58a9edf70a78fbd24f23f9ddd42d",
      "purity_classification": "FALSE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve renaming and code organization without altering functionality. The pom.xml updates the JUnit version, which is a simple dependency update. In GHHook.java, there's a minor change in variable initialization but no functional impact. GHMilestone.java adds a close method for milestone management, maintaining existing behavior. Other classes show refactoring of test methods with improved structure and comments, including renaming some tests to @Test annotations.",
      "llm_confidence": "high",
      "project_name": "github-api",
      "analysis_timestamp": "2025-08-27T07:24:25.199589",
      "diff_size": 25925,
      "diff_lines": 674
    },
    {
      "hash": "a757c77a910700282f64bd496aa4ceb22734a2d1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OpenTripPlanner",
      "analysis_timestamp": "2025-08-27T07:24:44.148330",
      "diff_size": 10189,
      "diff_lines": 185
    },
    {
      "hash": "a767a5b8473743d3224bd9b5854fc662e60e2fb7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T07:24:51.517233",
      "diff_size": 11373,
      "diff_lines": 227
    },
    {
      "hash": "a76f2e9fa14185dae1e96ae2561e3ff07c966e11",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include adding new HTTP methods (PUT, DELETE) to the Connection enum and modifying method calls from using 'method' to use a new Method enum. This introduces new functionality for handling different HTTP methods with body content, which is not purely structural.",
      "llm_confidence": "low",
      "project_name": "jsoup",
      "analysis_timestamp": "2025-08-27T07:25:00.521777",
      "diff_size": 7459,
      "diff_lines": 174
    },
    {
      "hash": "a771b3cec76a63d109878aca2b31bc16b4cdd7be",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include a method rename from getRelativeWidth to getRelBoundingBoxWidth, getRelativeHeight to getRelBoudingBoxHeight, and modifications in the execute() method that change how coordinates are calculated. The new methods return double instead of int, indicating potential functional differences due to floating point precision or scaling issues. Also, there is a change in variable names from 'width' and 'height' to 'width' and 'height', but more importantly, the calculations use Math.floor previously, now they do not (they are using direct division). Additionally, conditionals were changed with different constants.",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T07:26:06.655715",
      "diff_size": 4468,
      "diff_lines": 96
    },
    {
      "hash": "a77a116991454763813b5ea2bd2bb1e55dd33f69",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-27T07:26:19.954077",
      "diff_size": 38857,
      "diff_lines": 851
    },
    {
      "hash": "a77e57ede407d2f003dc4ee4af2f8650efa56cb0",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'findSession' in MemcachedBackupSession with different return type and logic, including the addition of registerReference() calls. It also modifies existing methods to include conditional checks for sticky mode and reference counting, which alters behavior by adding synchronization around session operations. These changes involve both structural reorganization (moving code) and functional modifications that change how sessions are managed and backed up.",
      "llm_confidence": "high",
      "project_name": "memcached-session-manager",
      "analysis_timestamp": "2025-08-27T07:27:43.282428",
      "diff_size": 27799,
      "diff_lines": 629
    },
    {
      "hash": "a79aca906ef3f5e1ebf28dbc0197e04855adf04e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OpenID-Connect-Java-Spring-Server",
      "analysis_timestamp": "2025-08-27T07:27:53.734011",
      "diff_size": 31759,
      "diff_lines": 721
    },
    {
      "hash": "a79c5f41220fb8e3ad1cdc7b856726f98f0abe02",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T07:28:26.326613",
      "diff_size": 48971,
      "diff_lines": 1074
    },
    {
      "hash": "a7a0d49cb4bf07fbfd4b163509a37eedb07c26f7",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces multiple changes that alter the behavior of the code. In BaseBot.java, the method 'invokeMethods' is renamed and its parameters are changed from (Event event, Object[] methodArgs) to (String text, List<MethodWrapper> methodWrappers), which affects how it processes events. Additionally, in Bot.java for Slack, the method signature changes from private void invokeMethods(WebSocketSession session, Event event) to a new implementation that uses reflection differently and passes additional parameters. These changes include modifications to parameter types (e.g., adding Matcher class as a parameter type check), altering return values by making them public, and changing exception handling. The introduction of new conditional logic in the method calls also indicates functional changes rather than pure structural ones.",
      "llm_confidence": "high",
      "project_name": "jbot",
      "analysis_timestamp": "2025-08-27T07:28:37.438048",
      "diff_size": 16287,
      "diff_lines": 352
    },
    {
      "hash": "a7a4539f3b4df4df2454cbad480990c10aa72e18",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method duplication issue across three brick classes (BroadcastBrick, BroadcastReceiverBrick, and BroadcastWaitBrick). Each class now contains an identical 'showNewMessageDialog' method. This violates the DRY principle by adding redundant code without any functional change. However, the test file changes from checking spinner texts to ensuring broadcast messages are removed correctly, which indicates a shift in functionality focus but no direct behavioral modification.",
      "llm_confidence": "medium",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T07:28:45.713437",
      "diff_size": 7312,
      "diff_lines": 132
    },
    {
      "hash": "a7a95e6c2a39d4bbaa327018f1b83c19993a4319",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method 'getMainParameterValue' replacing the old 'initMainParameterValue', which changes the behavior by returning a list instead of void. This indicates functional modification as it alters how main parameter values are handled and initialized, including clearing state under certain conditions.",
      "llm_confidence": "high",
      "project_name": "jcommander",
      "analysis_timestamp": "2025-08-27T07:28:50.901768",
      "diff_size": 6110,
      "diff_lines": 163
    },
    {
      "hash": "a7ad468735884937616825d46c8e3ed4922af010",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "openstack-java-sdk",
      "analysis_timestamp": "2025-08-27T07:29:03.499284",
      "diff_size": 34746,
      "diff_lines": 889
    },
    {
      "hash": "a7ae7651490c8a0304285bd9b85ca7585ee40ebc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T07:29:28.153644",
      "diff_size": 127570,
      "diff_lines": 2432
    },
    {
      "hash": "a7b72140b61cf1998963750c21d6f6080f02d6bb",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T07:30:44.788718",
      "diff_size": 2493991,
      "diff_lines": 57464
    },
    {
      "hash": "a7b98c182e6ce0c67c933285fd927dcb2f7683f4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method call to setFragment, which modifies the URI by removing its fragment part. This changes the behavior of the code as it now explicitly handles fragments differently than before (by setting them to null). Additionally, in the test file, the target path creation is changed from using File and FileWriter to using Path and Files.write with explicit charset handling, indicating a functional change.",
      "llm_confidence": "high",
      "project_name": "dita-ot",
      "analysis_timestamp": "2025-08-27T07:32:09.773740",
      "diff_size": 5189,
      "diff_lines": 139
    },
    {
      "hash": "a7c4ba9eeecb365e7c4753d8eaab747edd9a632a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T07:33:29.322147",
      "diff_size": 760852,
      "diff_lines": 16286
    },
    {
      "hash": "a7cae150c0902e0f8b70d0f0077045a0739847de",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-27T07:34:45.258039",
      "diff_size": 143569,
      "diff_lines": 3563
    },
    {
      "hash": "a7eff41ced8b5622f6ed96a5b834677314ae7ca8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T07:38:34.103171",
      "diff_size": 446876,
      "diff_lines": 8548
    },
    {
      "hash": "a7f086aba094fb446468c0dda5458e8e754bf90b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "restfb",
      "analysis_timestamp": "2025-08-27T07:39:49.831394",
      "diff_size": 25912,
      "diff_lines": 730
    },
    {
      "hash": "a7f53ce39602802f3ff69f5828754423260486b8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change to handle list labels in left recursive rule analysis by adding the 'isListLabel' parameter and modifying several methods. This includes changes to method signatures, additions of conditional logic (if statements) based on new parameters, and modifications that affect how altLabels are processed. Specifically, the LeftRecursiveRuleAltInfo class is updated with a new boolean field 'isListLabel', which alters the structure of the object without changing its core functionality but introduces a condition for template selection in OutputModelController.java. The code generation templates (Java.stg) and parser grammar (LeftRecursiveRuleWalker.g) are also adjusted to include list labels, indicating functional changes beyond pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T07:40:00.113543",
      "diff_size": 14279,
      "diff_lines": 319
    },
    {
      "hash": "a80f6fc61863abc501b4922306df86569d5e7e71",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T07:41:19.756361",
      "diff_size": 131536,
      "diff_lines": 2813
    },
    {
      "hash": "a82195772e539437911c25508168cb607659bc71",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method signature and modifies the logic of existing methods, including adding conditional checks for blockedIds. Specifically, in FMLContainer.java, the method 'fireMissingMappingEvent' now takes additional parameters (LinkedHashMap<String, Integer> missing, boolean isLocalWorld, GameData gameData) compared to its previous version (ArrayListMultimap<String,String> missing, boolean isLocalWorld). This change alters how missing mappings are handled by including a GameData instance for processing. Additionally, in GameData.java, the method 'injectWorldIDMap' now accepts an int[] blockedIds parameter and passes it to fireMissingMappingEvent, which previously did not exist with this signature. The addition of new conditional logic (checking for blockedIds) indicates functional changes beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "FML",
      "analysis_timestamp": "2025-08-27T07:41:31.216683",
      "diff_size": 19686,
      "diff_lines": 466
    },
    {
      "hash": "a827bfe32504e08357b0e84c872b5af73bac4a9c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-27T07:41:47.041189",
      "diff_size": 50766,
      "diff_lines": 1230
    },
    {
      "hash": "a83a6cefe947464745a2a86df82361484bc8b684",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a significant change to the Snapshot class by removing its static latestSnapshot field and replacing it with an initialSnapshot. This affects multiple classes including LedgerValidator, API, and SnapshotTest through changes in method signatures (e.g., LedgerValidator constructor now takes 'latestSnapshot' instead of implicitly using it) and modifications to return values or exception handling. Additionally, the Milestone class has a static final field updated from 18750 to 62000, which is likely part of a larger functional change related to snapshot management.",
      "llm_confidence": "high",
      "project_name": "iri",
      "analysis_timestamp": "2025-08-27T07:41:56.756161",
      "diff_size": 11320,
      "diff_lines": 210
    },
    {
      "hash": "a83da13fa0852a5a2728c0884ec626e7b6100d9e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the method signature of decodeHeader, replacing parameters 'recipient' and 'sender' with 'recipientSocket' and 'senderSocket'. This is more than just renaming; it alters how the message's recipient and sender are set. Additionally, inside the method, there are changes to the logic: the PeerAddress constructor now uses different port variables (tcpPort vs portUDP) which were renamed from previous code. The use of constants like Utils.MASK_0F instead of direct bit masks suggests a change in how bits are handled, potentially affecting behavior by making it more explicit or secure. These changes indicate functional modifications rather than pure structural ones.",
      "llm_confidence": "high",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T07:42:03.890838",
      "diff_size": 7402,
      "diff_lines": 150
    },
    {
      "hash": "a85eeefe88eb036a9cd9fa85a1c8c31c2bfad78a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T07:42:11.761429",
      "diff_size": 2820858,
      "diff_lines": 59711
    },
    {
      "hash": "a8613e6aa19c44b27d0431f7c4332442147e8b38",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T07:42:52.663955",
      "diff_size": 37201,
      "diff_lines": 770
    },
    {
      "hash": "a86f998a3d792a6a84b87ae5e4c100df7d3379df",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new interface IStringConverterInstanceFactory and modifies JCommander to use it for converter instantiation, which changes the method signatures and behavior. Specifically, addConverterFactory is replaced with a static method that uses an internal factory adapter, and there are modifications in how converters are instantiated (instantiateConverter now handles parameterized types differently). Additionally, new conditional logic was added in MissingCommandException's constructor to handle unknown commands, altering exception handling behavior.",
      "llm_confidence": "high",
      "project_name": "jcommander",
      "analysis_timestamp": "2025-08-27T07:43:03.140427",
      "diff_size": 18475,
      "diff_lines": 431
    },
    {
      "hash": "a8782272b3db20ba6e88acab1d035d4699aa7166",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T07:43:29.653853",
      "diff_size": 453301,
      "diff_lines": 9605
    },
    {
      "hash": "a88b1e295b63b27b194fea42d13f1720f3ba43a8",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The change renames 'factories' to 'factory' in the variable name and updates the method call from getExtension() on factories to getExtension() on factory, but since the extension loader returns a single instance (getExtension returns one object) and the original code used that instance directly without any additional changes, this is purely structural. The logic remains identical with no functional modifications.",
      "llm_confidence": "high",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T07:43:37.362917",
      "diff_size": 1162,
      "diff_lines": 17
    },
    {
      "hash": "a89597da137ad55a5a1b5268ff414c3c1effce10",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T07:44:16.688694",
      "diff_size": 405329,
      "diff_lines": 8567
    },
    {
      "hash": "a89a8af640c4e41be593e441d61ba47f807e9431",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T07:45:25.678732",
      "diff_size": 11977,
      "diff_lines": 337
    },
    {
      "hash": "a8a416255ff3e3421464588092b238497b809c83",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T07:45:33.734874",
      "diff_size": 46367,
      "diff_lines": 1171
    },
    {
      "hash": "a8bfd9f3607b101273d00ee4218c714abf39f903",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T07:46:09.267921",
      "diff_size": 1318908,
      "diff_lines": 33583
    },
    {
      "hash": "a8c676820d8770a37a5d28a9e9db42585c16f418",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "threetenbp",
      "analysis_timestamp": "2025-08-27T07:47:26.168707",
      "diff_size": 26442,
      "diff_lines": 488
    },
    {
      "hash": "a8d7c4a14deff338cd59b5ff92f6eb738ce85308",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve updating version numbers and minor structural adjustments in XML files (AndroidManifest.xml, pom.xml) without altering any functional logic. In the ActionBarSherlock.java file, there is a change from using 'CheckPermanentMenuKey' to 'ActionMenuPresenter.HasPermanentMenuKey', but this appears to be a refactor for better code organization or dependency management rather than changing behavior. The new class definition in ActionMenuPresenter.java replaces an existing method with one that uses the same logic and naming convention, preserving functionality.",
      "llm_confidence": "high",
      "project_name": "ActionBarSherlock",
      "analysis_timestamp": "2025-08-27T07:47:36.286349",
      "diff_size": 12496,
      "diff_lines": 343
    },
    {
      "hash": "a8da70916ab9aad1ffa2ce3eb47fca78dcf982eb",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "infinispan",
      "analysis_timestamp": "2025-08-27T07:47:43.531412",
      "diff_size": 27948,
      "diff_lines": 590
    },
    {
      "hash": "a8de5408b055e4fcfd35c348f61b43df1f59166d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-27T07:48:46.810473",
      "diff_size": 43911,
      "diff_lines": 1116
    },
    {
      "hash": "a8e58afe7673e255005ee917bf24f26a1aff4165",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in BaseValidate and Validate classes involve restructuring the validation logic, but they also include functional modifications. In BaseValidate, a new abstract method 'isValid()' is introduced without parameters, replacing the existing one with a String parameter. This change alters the behavior because now the validation must rely on an internal source retrieval (getSource()) which was previously handled by passing a value directly to isValid(). Similarly, in Validate class, the implementation of isValid() has been completely rewritten and now calls mValidators instead of _validators, using a different approach with try-catch blocks. These changes introduce new conditional logic and modify how validation is performed.",
      "llm_confidence": "high",
      "project_name": "Android-Validator",
      "analysis_timestamp": "2025-08-27T07:48:55.866096",
      "diff_size": 9107,
      "diff_lines": 284
    },
    {
      "hash": "a8e68328c4f521ef5b6d406d5d850b1156457a3f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "MinecraftForge",
      "analysis_timestamp": "2025-08-27T07:49:14.316831",
      "diff_size": 55408,
      "diff_lines": 1155
    },
    {
      "hash": "a8ece25fd203326442a3351f77eb2c95f08f917f",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the diff primarily involve replacing a method call with inline code and changing variable names, both of which are structural refactoring without altering functionality. The replacement of 'FunctionUtils.square' with direct squaring (aData[k][i] * aData[k][i]) is equivalent functionally, preserving behavior. Similarly, renaming constants like EPS to EPS and UNCONSTAINED to UNCONSTRAINED maintains the same logic flow.",
      "llm_confidence": "high",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-27T07:49:22.818971",
      "diff_size": 3059,
      "diff_lines": 50
    },
    {
      "hash": "a8ed29baec96c76bbfda1d878758e82b0323d0e7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T07:49:32.540752",
      "diff_size": 65574,
      "diff_lines": 1545
    },
    {
      "hash": "a8efceb1523293db52a049d76495ba8630ecda6d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T07:49:48.269744",
      "diff_size": 75694,
      "diff_lines": 1837
    },
    {
      "hash": "a91710ef75b407baad3c31b7297c8e42eedca7f3",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "grails-core",
      "analysis_timestamp": "2025-08-27T07:52:28.254128",
      "diff_size": 22830,
      "diff_lines": 561
    },
    {
      "hash": "a92f2a263b8d163cab2d4212f74d4f571d8269c6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a significant change to the logging behavior and adds new conditional logic. Specifically, it replaces hardcoded string references with more descriptive log messages that include mod names and encourages users to report bugs. This includes modifications to method signatures (adding parameters or changing existing ones) and changes in how errors are handled by adding explicit logging calls.",
      "llm_confidence": "high",
      "project_name": "MinecraftForge",
      "analysis_timestamp": "2025-08-27T07:52:36.283818",
      "diff_size": 3734,
      "diff_lines": 67
    },
    {
      "hash": "a93e96c15f225fdad11f2135b27c6944c8a189a2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T07:52:49.243509",
      "diff_size": 38831,
      "diff_lines": 665
    },
    {
      "hash": "a94302745dac9cbeae1f305ef151cd875f8e4b38",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T07:52:55.249048",
      "diff_size": 152579,
      "diff_lines": 3609
    },
    {
      "hash": "a947dfdac53e91e78ff72fcc28f3995efe292ce1",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jna",
      "analysis_timestamp": "2025-08-27T07:54:12.552217",
      "diff_size": 277863,
      "diff_lines": 7437
    },
    {
      "hash": "a950b9257f4c92d067eb5e1d437096699123ac9b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T07:58:03.269434",
      "diff_size": 1574119,
      "diff_lines": 33818
    },
    {
      "hash": "a9561bfc5838ee94cb4d74935de9818d535872d4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces SonarQube and Jacoco for code coverage, which adds new functionality (coverage reporting) through structural changes. Specifically, the build.gradle files are modified to include new dependencies and configurations that change how tests are handled, indicating a functional shift rather than pure restructuring.",
      "llm_confidence": "low",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-27T07:58:14.338052",
      "diff_size": 10372,
      "diff_lines": 298
    },
    {
      "hash": "a9659774b3a9b71975ea9084ed26de971dcd0ee7",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T07:59:41.259875",
      "diff_size": 912528,
      "diff_lines": 21121
    },
    {
      "hash": "a969064297454ab134e017bef5a752cf48614b42",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-27T07:59:48.118936",
      "diff_size": 23880,
      "diff_lines": 503
    },
    {
      "hash": "a97bf43e0e1f9958ffb4b483a624671f13eb29e2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T07:59:55.351306",
      "diff_size": 272796,
      "diff_lines": 5038
    },
    {
      "hash": "a983110523eee5ab4df9a96993a8222d2675eb34",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "restfb",
      "analysis_timestamp": "2025-08-27T08:00:14.186936",
      "diff_size": 180357,
      "diff_lines": 5249
    },
    {
      "hash": "a99c2d680cbf23172dadd83966c34a40dfa1302c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include modifications to method signatures (e.g., adding parameters or changing return types) which change the behavior of the code. There are also new conditional statements and loops introduced, indicating a change in logic.",
      "llm_confidence": "medium",
      "project_name": "rexster",
      "analysis_timestamp": "2025-08-27T08:00:27.920837",
      "diff_size": 2445219,
      "diff_lines": 31462
    },
    {
      "hash": "a99f2589842ef2c010df2d304a084dd40c9c36d3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "netty",
      "analysis_timestamp": "2025-08-27T08:01:36.744962",
      "diff_size": 45894,
      "diff_lines": 1188
    },
    {
      "hash": "a9bd531bc9a286cc8e81a800aaa29c1fead62dcd",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:05:27.550518",
      "diff_size": 496799,
      "diff_lines": 10849
    },
    {
      "hash": "a9d1e3a8680cd368b6ce02e43dcb3b688ed9e34f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a refactoring effort to rename several classes and methods related to HA (High Availability) functionality, but it also includes changes that alter the behavior. Specifically, 'HaBackupRegistrationMessage' is renamed to 'BackupRegistrationMessage', which affects method signatures and logic in multiple files. Additionally, there are modifications like changing variable names from 'journalsHolder' to 'journal' or altering method parameters (e.g., 'createFilesForRemoteSync' becomes 'createFilesForBackupSync'). These changes indicate functional adjustments rather than pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "hornetq",
      "analysis_timestamp": "2025-08-27T08:05:38.615579",
      "diff_size": 17341,
      "diff_lines": 330
    },
    {
      "hash": "a9da88fb792cbf4f27f2efc053731c38a7eb74bc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit includes changes that alter the behavior of the code. In IntrospectingTokenService.java, the method 'createAuthentication' now uses 'token.get(\"sub\")' instead of 'token.get(\"subject\")'. This change in field name from 'subject' to 'sub' is a functional modification because it affects how tokens are processed and validated by changing the expected key in the JSON object. Similarly, TokenIntrospectionView.java updates the serialization logic for OAuth2RefreshTokenEntity, using different claims (e.g., 'active' instead of 'valid') which changes the output structure and thus behavior. The RevocationEndpoint.java also modifies token handling parameters with a new 'token_type_hint', affecting how tokens are revoked based on type. These modifications introduce functional differences beyond simple structural reorganization.",
      "llm_confidence": "high",
      "project_name": "OpenID-Connect-Java-Spring-Server",
      "analysis_timestamp": "2025-08-27T08:05:50.345128",
      "diff_size": 25528,
      "diff_lines": 590
    },
    {
      "hash": "a9e1c62746d1236bb26bec591405ffb182b560be",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'purgerThreads' in FileCacheStoreConfigurationBuilder, which is not present before. This indicates an addition of functionality (parameter for purger threads) and changes the structure to accommodate it. Additionally, there are multiple renames across different configuration classes (e.g., groupsConfiguration() to groups(), various getters). While some renaming might be purely structural, the introduction of new parameters and methods suggests functional changes. The test file updates also show assertions on these new configurations, confirming that behavior is being tested with the changed structure.",
      "llm_confidence": "medium",
      "project_name": "infinispan",
      "analysis_timestamp": "2025-08-27T08:06:00.279677",
      "diff_size": 17405,
      "diff_lines": 300
    },
    {
      "hash": "a9fcd40e99a80779491d8d59798305a557737b06",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-27T08:06:11.328037",
      "diff_size": 49309,
      "diff_lines": 1182
    },
    {
      "hash": "aa1317db9090700a39c12267925eec03d5cfa588",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change from 'peerSocketAddresses' to 'peerSocketAddressList', which is more than just renaming. This variable name change suggests a potential shift in the underlying data structure or purpose, but without direct evidence of structural changes (like adding/removing methods), it's ambiguous. However, there are also functional changes: the method that initializes this field now uses 'peerSocketAddressList' instead of 'peerSocketAddresses', and the accessor method returns from 'peerSocketAddresses' to 'peerSocketAddressList'. This indicates a possible change in behavior or data handling beyond simple renaming.",
      "llm_confidence": "medium",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T08:06:20.167255",
      "diff_size": 1619,
      "diff_lines": 37
    },
    {
      "hash": "aa18b4c2b2e8855c985f5e7ab06b93bfa41d55a0",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-27T08:06:28.012441",
      "diff_size": 323888,
      "diff_lines": 8389
    },
    {
      "hash": "aa2c14474856e8a466f9a60493d996f32263ca19",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The commit primarily renames methods and variables from filter to filterRelayCandidates, removes the unused FutureChannelCreator import, and reorganizes code structure. The method signature changes are limited to renaming (setupRelays now calls filterRelayCandidates instead of filter), which is a pure structural change preserving semantics. No new functionality or behavioral modifications were introduced; all logic remains identical with no alterations in inputs/outputs or exception handling.",
      "llm_confidence": "high",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T08:06:37.014958",
      "diff_size": 4722,
      "diff_lines": 107
    },
    {
      "hash": "aa2e1189d6bd28744a4215b309accdda2cba8c4d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T08:07:55.961327",
      "diff_size": 35315,
      "diff_lines": 874
    },
    {
      "hash": "aa34f33846fe44f47db21d31c3b3a6fca85dc25e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T08:09:12.220653",
      "diff_size": 517292,
      "diff_lines": 13308
    },
    {
      "hash": "aa35b1f4b5a5198482c9c5a659d357b3ac9a101b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T08:09:30.676516",
      "diff_size": 97861,
      "diff_lines": 2076
    },
    {
      "hash": "aa5fd9f4d9248d2caca437b3ca75c4062327bd46",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "restfb",
      "analysis_timestamp": "2025-08-27T08:13:19.999151",
      "diff_size": 90186,
      "diff_lines": 2668
    },
    {
      "hash": "aa61087b5c5aed1ef231ded4b7a9bc962839829e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T08:14:33.932799",
      "diff_size": 18154,
      "diff_lines": 458
    },
    {
      "hash": "aa68c3cd8154cefd632db5185e64688706a3f34a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T08:14:43.216680",
      "diff_size": 183762,
      "diff_lines": 2931
    },
    {
      "hash": "aa6c16b13620c53a485247dae5da3ad0e7fe8ba6",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces several changes that alter functionality. In DynamicChannelBuffer.java, a new condition is added to prevent exceeding 2GB capacity by throwing an exception if the calculated newCapacity becomes zero due to overflow. This modifies behavior by adding a specific check and action for maximum size exceeded cases. Additionally, in CookieEncoder.java, there's a comment indicating that calling encode() clears the encoder content, which suggests a functional change not previously present. In HttpClientCodec.java, a private method 'decrement' is introduced with additional logic to handle non-chunked messages and arrays of objects differently from before, changing how requests are counted under certain conditions. The WebSocket handshaker classes (00, 08, 13) modify the ORIGIN header construction by conditionally adding port numbers based on RFC standards, which is a functional change affecting HTTP headers sent during websocket handshake. Finally, a new test file HttpClientCodecTest.java is added to verify specific failure cases related to chunked encoding and missing responses, indicating that new functionality was tested or integrated.",
      "llm_confidence": "high",
      "project_name": "netty",
      "analysis_timestamp": "2025-08-27T08:14:54.597036",
      "diff_size": 15247,
      "diff_lines": 301
    },
    {
      "hash": "aa76394764bcb4af54150f12528fed9ddfa66044",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:15:07.098817",
      "diff_size": 1092100,
      "diff_lines": 23509
    },
    {
      "hash": "aa76bcc372523bc3556620a56f4aa9ac8c0619ff",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit includes several changes that modify the behavior of methods by renaming and updating their logic. Specifically, multiple files show method renames (e.g., 'isPortAvailable' to 'available') with updated implementations in some cases. The Server class now uses a different static method name and likely has similar functionality but possibly improved error handling or conditions. Additionally, there are changes in the indexer initialization block where exceptions are handled differently by returning early instead of throwing, which alters control flow without changing structure.",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T08:15:15.457039",
      "diff_size": 11010,
      "diff_lines": 206
    },
    {
      "hash": "aa91cf6562ebf152306c963825af3eb89cf9ec11",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T08:15:27.270247",
      "diff_size": 1853876,
      "diff_lines": 40752
    },
    {
      "hash": "aa92b572b33be974c1ea90d2791e48dc406e948b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit renames a class and its constructor, but the method signature changes from 'UserLeftMessage' to 'UserLeavingMessage' are more than just simple renaming. The constructor parameters remain identical (meetingID and internalUserId), however, the name change indicates a potential shift in functionality or behavior. Additionally, within the renamed file, there is a static method 'fromJson' that now returns an instance of UserLeavingMessage instead of UserLeftMessage. This suggests a functional change as the same logic but with different class names implies a new role for this message type. The renaming alone does not constitute pure refactoring because it introduces ambiguity without clear evidence of identical behavior.",
      "llm_confidence": "medium",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T08:15:35.792277",
      "diff_size": 3483,
      "diff_lines": 64
    },
    {
      "hash": "aa98dec33fe79af93e89c13a1811f20622025cd6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the method signature of getWriteResponseHandler by renaming 'consistencyLevel' to 'consistency_level'. This is not merely a simple rename as it alters the parameter name, which could be considered a behavioral modification. Additionally, the code now includes conditional logic based on the consistency level value (LOCAL_QUORUM or EACH_QUORUM), directing different response handlers accordingly. The original method in AbstractReplicationStrategy did not have this condition and returned a single WriteResponseHandler regardless of the consistency level. This change adds new functional behavior by enabling specific handling for these levels, thus qualifying as FLOSS refactoring.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:15:41.791323",
      "diff_size": 3635,
      "diff_lines": 69
    },
    {
      "hash": "aaa8aacb5f0321c71dde2cabe87a19846b0d804b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "PinDroid",
      "analysis_timestamp": "2025-08-27T08:15:49.747798",
      "diff_size": 94970,
      "diff_lines": 2172
    },
    {
      "hash": "aadb569f3008b9426b557d086e9e475164153d91",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-27T08:16:11.422434",
      "diff_size": 11739,
      "diff_lines": 223
    },
    {
      "hash": "aaecbe2bd3d0c12b584577df8b8351dab46e30cf",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T08:17:30.030525",
      "diff_size": 60656,
      "diff_lines": 1115
    },
    {
      "hash": "aaf3166aed1c78a04686807cdf274538f95fa887",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'ClusterProcesses' which encapsulates the functionality of managing Redis processes in a cluster. This includes changes to method signatures (adding synchronization and changing return type) and adding new methods that alter how nodes are shut down, indicating functional behavior changes beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "redisson",
      "analysis_timestamp": "2025-08-27T08:17:37.511743",
      "diff_size": 8296,
      "diff_lines": 176
    },
    {
      "hash": "aaf3579a551fedc0c38ef1dff0caf5d1daa6a27e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'registerModels' in ItemBlueprint.java, which adds conditional logic and changes the way models are registered. Additionally, it modifies existing methods by changing parameter types (from int to BlockPos) and updating return values or exception handling, indicating functional changes rather than pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T08:17:43.901677",
      "diff_size": 10466,
      "diff_lines": 196
    },
    {
      "hash": "ab0633ac20ac86c2553953f1827ebd21e7831480",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T08:18:05.549940",
      "diff_size": 1015896,
      "diff_lines": 21563
    },
    {
      "hash": "ab1c8291024e506ddb92abf801113fa1d54a24af",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the method signature of 'updateFromSnapshot' from accepting two Hash parameters to one Hash and a List<Hash> parameter. This is not merely a structural change but alters functionality by allowing multiple extra tips, which can affect ledger validation logic. Additionally, within 'isTailConsistentStatement', there are modifications including adding loops over a list of transactions and changing the condition checks from single transaction to multiple ones, indicating functional changes for handling consistency across more than one tail.",
      "llm_confidence": "high",
      "project_name": "iri",
      "analysis_timestamp": "2025-08-27T08:18:14.846157",
      "diff_size": 8287,
      "diff_lines": 160
    },
    {
      "hash": "ab230fd225c861f54f5f3dd2db6278d48dfc3a2f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jbake",
      "analysis_timestamp": "2025-08-27T08:18:22.566280",
      "diff_size": 81151,
      "diff_lines": 2254
    },
    {
      "hash": "ab27a398bcf17f5a5928ece4db9d5e75c378e38c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T08:18:46.848023",
      "diff_size": 210466,
      "diff_lines": 4715
    },
    {
      "hash": "ab2dafbd4ea3ab9bc1a21fa81534a94f12eeb1e0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T08:19:26.169332",
      "diff_size": 2609630,
      "diff_lines": 44710
    },
    {
      "hash": "ab2f43b8c0155f03c8b8f3932141630e1c825f65",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new conditional block in the JedisSentinelPool class that checks if the master address retrieved from sentinel is null or has an incorrect size, logging a warning and disconnecting the Jedis instance before continuing. This change alters the control flow by adding explicit error handling for invalid master addresses. Additionally, it adds a test case to ensure safe twice failover behavior with a wrong master name, which includes thread operations and time unit imports that are not present in the previous code. These functional changes (new conditional logic, modified method parameters implicitly through added test) indicate floss refactoring.",
      "llm_confidence": "high",
      "project_name": "jedis",
      "analysis_timestamp": "2025-08-27T08:19:34.620344",
      "diff_size": 2495,
      "diff_lines": 67
    },
    {
      "hash": "ab3de58257edddff10886d2f0830c07fbdf9abc8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-27T08:19:43.710392",
      "diff_size": 263129,
      "diff_lines": 6495
    },
    {
      "hash": "ab47dab0c267e96f02cd1ad345553a1d5f841f0c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new parameter 'arriveBy' in multiple classes and methods, which is used to change the behavior of AStarRequest. This includes modifications to method signatures (e.g., setArriveBy(boolean) added), changes in return values based on this flag, and alterations in exception handling by setting arriveBy conditionally. Additionally, new conditional logic was introduced where 'arriveBy' affects how initial states are built and the heuristic initialization. These changes indicate functional modifications rather than pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "OpenTripPlanner",
      "analysis_timestamp": "2025-08-27T08:19:53.163822",
      "diff_size": 14110,
      "diff_lines": 343
    },
    {
      "hash": "ab5a8c77e4509fee9c4942ae391bbd82d7f7b295",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:20:05.927703",
      "diff_size": 2146386,
      "diff_lines": 49741
    },
    {
      "hash": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T08:20:25.030045",
      "diff_size": 315299,
      "diff_lines": 6774
    },
    {
      "hash": "ab6db94d9a6521443a76c274d93fc04b84e712b8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a significant refactor of the getRecordings method, replacing multiple conditional blocks with a more streamlined approach using getAllDirectories. However, this change includes modifications to method signatures and logic that alter behavior: new methods like getAllDirectories are introduced which encapsulate complex state-based directory selection, changing how recordings are retrieved by abstracting away explicit state checks into a map structure. This represents a functional shift as the code now relies on different internal organization for its operations.",
      "llm_confidence": "medium",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T08:20:34.183097",
      "diff_size": 12630,
      "diff_lines": 260
    },
    {
      "hash": "ab6eaed8f6bdef21323be561a22e9fdb16bbd0fc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:20:42.532171",
      "diff_size": 316368,
      "diff_lines": 6414
    },
    {
      "hash": "ab72dc9270bc14235ea81f7fc73da1b780f657e5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in the diff include several modifications that alter functionality. In CliClient.java, there are changes to method signatures and logic for handling column specifications, including new conditional checks and different return types or values. Additionally, AbstractReplicationStrategy has a change removing an exception condition from getNaturalEndpoints, which affects behavior by altering how endpoints are cached and calculated. There is also a performance optimization in WriteResponseHandler.java where the quorum calculation now uses the replication factor directly instead of writeEndpoints.size(), potentially changing the consistency level handling.",
      "llm_confidence": "medium",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:20:52.330763",
      "diff_size": 10979,
      "diff_lines": 193
    },
    {
      "hash": "ab849a793d2b0d22b2cf19f77314f6a2cb698137",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:21:02.631014",
      "diff_size": 33426,
      "diff_lines": 733
    },
    {
      "hash": "ab8e68435da49c62daffef14ac5c6ce4646e44a9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T08:21:15.554593",
      "diff_size": 20350,
      "diff_lines": 437
    },
    {
      "hash": "ab920c30310a8c095ba76b363142b8e74cbf0a0a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:21:31.149864",
      "diff_size": 598071,
      "diff_lines": 13250
    },
    {
      "hash": "ab95f980f4ea13a60a03b0bdf90479c7c36c54e8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve modifications to the CQL grammar and related code structures, including updates to method signatures in Gossiper.java (adding a parameter) and altering return values. Specifically, the useStatement now accepts numeric keyspace names, which is a functional change. Additionally, several methods were updated to handle new parameters or different logic for expiration times, indicating behavioral modifications.",
      "llm_confidence": "medium",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:21:42.174053",
      "diff_size": 16627,
      "diff_lines": 324
    },
    {
      "hash": "ab98b1151ecb61a62df30b9777fa962d60e97767",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit includes multiple changes that introduce new functionality or fix bugs. In LogFile.java, the method 'make' is modified to filter files with positive lastModified times and adjust the return value accordingly (CASSANDRA-11889). This change alters the behavior by ensuring only existing files are considered for modification time calculation. Additionally, in DecayingEstimatedHistogramReservoir.java, the method 'forwardDecayWeight' now returns a double instead of long, which changes the type and potentially affects calculations downstream (CASSANDRA-12522). The RepairRunnable.java updates to include error handling when parsing options, with a new parameter for gc_grace_seconds in sstablemetadata. These modifications involve behavioral changes beyond pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:21:50.183661",
      "diff_size": 14863,
      "diff_lines": 285
    },
    {
      "hash": "abaaadc20b2a9ae6e2700d34b0562518c55278b8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Spout",
      "analysis_timestamp": "2025-08-27T08:22:03.979674",
      "diff_size": 59649,
      "diff_lines": 1541
    },
    {
      "hash": "abbc0fe2ee465d2dcf0c5016b34564ce926e5941",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-27T08:22:13.444466",
      "diff_size": 10946,
      "diff_lines": 229
    },
    {
      "hash": "abd10d9089bb40dc75b067bdfe90a9befbfbe694",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "netty",
      "analysis_timestamp": "2025-08-27T08:22:38.859676",
      "diff_size": 20420,
      "diff_lines": 438
    },
    {
      "hash": "abe9babea1d0054ae2bc33bce0b3feda54f5b6c8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "easy-batch",
      "analysis_timestamp": "2025-08-27T08:22:59.586842",
      "diff_size": 976056,
      "diff_lines": 16524
    },
    {
      "hash": "abebb25e530a6e6ceb3ebdb721fe8c7b6a527bb6",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "android-calculatorpp",
      "analysis_timestamp": "2025-08-27T08:23:28.416079",
      "diff_size": 192159,
      "diff_lines": 5059
    },
    {
      "hash": "abfbd7d605f0e99588fa3d8962da52e940871dd3",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T08:24:45.424231",
      "diff_size": 438470,
      "diff_lines": 10446
    },
    {
      "hash": "ac037957244e2d350eb06e3d269d977928be30fb",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T08:26:03.657312",
      "diff_size": 92160,
      "diff_lines": 2113
    },
    {
      "hash": "ac103d05507e7ea330d7a2ed9e257f4446a6ce97",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T08:27:21.066499",
      "diff_size": 102663,
      "diff_lines": 1896
    },
    {
      "hash": "ac19ee45dfaef38901987f28831dc2d41efd08a6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit changes the method signature from 'calcularDigitoVerificador' to 'calcularDigitoVerificadorNossoNumero', which is a structural change. However, it also modifies the test cases by changing expected outputs (from '4' to '2') and adjusting input values ('566612457800' vs '105613749501'), indicating functional changes due to altered behavior or parameters.",
      "llm_confidence": "medium",
      "project_name": "caelum-stella",
      "analysis_timestamp": "2025-08-27T08:27:29.546426",
      "diff_size": 2281,
      "diff_lines": 58
    },
    {
      "hash": "ac332dc08819796908a402f69f0fbdef198b9784",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "graylog2-server",
      "analysis_timestamp": "2025-08-27T08:27:53.805360",
      "diff_size": 587612,
      "diff_lines": 13899
    },
    {
      "hash": "ac3a249b77f741fd6f31b8e8873ced01698c2394",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OpenTripPlanner",
      "analysis_timestamp": "2025-08-27T08:30:27.515331",
      "diff_size": 122670,
      "diff_lines": 2835
    },
    {
      "hash": "ac3d88e8088d791e8c9b793901ae97d91136be2a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit involves renaming several classes and methods (ShowArtifactInTimelineAction to ViewArtifactInTimelineAction, ShowFileInTimelineAction to ViewFileInTimelineAction) while also changing the parameter of one method call from 'false' to 'true'. This indicates a functional change because the new class names suggest different behavior ('View' vs 'Show'), and the parameter change in FileNode.java likely alters functionality. Additionally, there are changes in exception handling (NbBundle.Messages annotations) which is a behavioral modification.",
      "llm_confidence": "medium",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T08:30:37.449177",
      "diff_size": 16820,
      "diff_lines": 322
    },
    {
      "hash": "ac411a549f569c680e1db3c932a858021f16c01c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "android-calculatorpp",
      "analysis_timestamp": "2025-08-27T08:30:45.319547",
      "diff_size": 125879,
      "diff_lines": 2488
    },
    {
      "hash": "ac44af863bcbf81ae83451b347b816768955b16c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "MinecraftForge",
      "analysis_timestamp": "2025-08-27T08:30:52.008784",
      "diff_size": 28285,
      "diff_lines": 724
    },
    {
      "hash": "ac484ba40cc1d94d42ce59e9df92b13e98ed0b6e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "clojure",
      "analysis_timestamp": "2025-08-27T08:32:08.726070",
      "diff_size": 51671,
      "diff_lines": 1326
    },
    {
      "hash": "ac4f00524ec510b880506806192e500b8c3a7c29",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in ATNConfigSet.java and ATNSimulator.java involve modifications to method signatures, addition of new parameters (contextCache), and integration with a PredictionContextCache class. These alterations change the way contexts are handled during configuration additions and optimizations, which can affect behavior by enabling more efficient context reuse or caching. Additionally, there is logic in addAll that now interacts with an external cache parameter, altering the execution path compared to before.",
      "llm_confidence": "medium",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T08:32:18.833125",
      "diff_size": 14409,
      "diff_lines": 358
    },
    {
      "hash": "ac59ef27e828825345e6b650c0d65adf99b6d80d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality by adding a method to drain fluids in the builder, which alters behavior. Additionally, it adds conditional logic for fluid rendering and includes changes that fix bugs related to survival mode liquid placement and tank rendering.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T08:32:26.705220",
      "diff_size": 6378,
      "diff_lines": 139
    },
    {
      "hash": "ac5f5a5faa790a84528bdf675a0a51f916d2128f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T08:33:40.210183",
      "diff_size": 19029,
      "diff_lines": 438
    },
    {
      "hash": "ac60cad84a8e56bdac6da30094d7135792f3c568",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new parameter 'force' to the updateRecordings method, which is then used in the RecordingService's updateMetaParams method. This change adds conditional logic based on the force parameter value (true/false), altering the behavior of how metadata updates are handled. Specifically, when force is true and metadata doesn't exist, it now creates new metadata instead of leaving it unchanged or deleting it as before. Additionally, a deleteMetadata method was added to Recording domain class for handling deletions under certain conditions.",
      "llm_confidence": "high",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T08:33:48.367922",
      "diff_size": 5040,
      "diff_lines": 92
    },
    {
      "hash": "ac66fccbc63b1689d93fa3b4c91db00899271fe9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T08:34:22.258185",
      "diff_size": 69009,
      "diff_lines": 1688
    },
    {
      "hash": "ac7c83535f05dfc55daf3c77e7aa22d08e35a278",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:39:31.368644",
      "diff_size": 767124,
      "diff_lines": 18676
    },
    {
      "hash": "ac8bb37c96470f307acf38e8ed2a0fd916fcafdd",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T08:39:42.557490",
      "diff_size": 22456,
      "diff_lines": 703
    },
    {
      "hash": "ac965a60eeb931d0d97346157004681d76e2a0d6",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:40:02.994747",
      "diff_size": 77196,
      "diff_lines": 1488
    },
    {
      "hash": "ac99201f0b68fab29ecf89bc3a9d1f74b8ff812e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "core",
      "analysis_timestamp": "2025-08-27T08:40:34.773970",
      "diff_size": 71329,
      "diff_lines": 2000
    },
    {
      "hash": "acb3a4eee0c0682df7bd67528be764ec313dbc9b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "encog-java-core",
      "analysis_timestamp": "2025-08-27T08:41:51.773018",
      "diff_size": 108150,
      "diff_lines": 1133
    },
    {
      "hash": "acf1b1801352cdc6103325ff4498c2020dcc1c32",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:45:43.725278",
      "diff_size": 1348332,
      "diff_lines": 29943
    },
    {
      "hash": "ad034b55c400add3f0878fba00e5964b01719e43",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new functionality for Response Assertion to check headers. This includes adding new methods (setTestFieldResponseHeaders, isTestFieldResponseHeaders), modifying the logic in the assertion processing to handle header checks separately from response data, and updating test cases to include header assertions. The addition of conditional logic for handling different response fields (headers) indicates a functional change beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-27T08:47:10.294035",
      "diff_size": 12242,
      "diff_lines": 264
    },
    {
      "hash": "ad0716267831e96a543d41138aba5d1be7f2940e",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve renaming constants and replacing direct index references with constant variables, which is a pure structural refactoring. The method calls remain unchanged in behavior as they are simply using different variable names to access the same indices.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T08:47:18.133749",
      "diff_size": 6818,
      "diff_lines": 128
    },
    {
      "hash": "ad0dc48f59ce1f664379c5afa0b88a09739dbd4d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jbake",
      "analysis_timestamp": "2025-08-27T08:47:33.117240",
      "diff_size": 82295,
      "diff_lines": 1999
    },
    {
      "hash": "ad10f91b607f71b9a2bd53566ad3f25cbeb0cc9b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jedis",
      "analysis_timestamp": "2025-08-27T08:47:44.452330",
      "diff_size": 99660,
      "diff_lines": 2820
    },
    {
      "hash": "ad135685ede9c4a42c1b10748f60d80eaa1f2ac9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method signature for secure() in multiple classes, adding a boolean parameter 'needsClientCert'. This changes the behavior by allowing explicit control over client certificate requirements. Additionally, it renames several components (e.g., DoneFilters to AfterAfterFilters) and updates related code references, which is not purely structural as there are functional modifications.",
      "llm_confidence": "high",
      "project_name": "spark",
      "analysis_timestamp": "2025-08-27T08:47:54.177744",
      "diff_size": 18246,
      "diff_lines": 446
    },
    {
      "hash": "ad1e047aa926cc8aee68edd00917d06b297157b8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T08:48:02.577797",
      "diff_size": 141256,
      "diff_lines": 3061
    },
    {
      "hash": "ad249424814836bd00f47931258ad58bfefb24fd",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:49:19.266827",
      "diff_size": 578921,
      "diff_lines": 12727
    },
    {
      "hash": "ad33fe1963dc98abec1a44fe93cb70dce0ee8cb4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new import for TokenBuffer and refactors the serialization methods to handle this specific generator type. This includes adding conditional logic (else if) checks for TokenBuffer instances, which alters the control flow based on the generator's class. Additionally, it adds a private method 'handleUnsupportedGenerator' that throws an exception when encountering unsupported generators, changing the error handling behavior.",
      "llm_confidence": "high",
      "project_name": "jongo",
      "analysis_timestamp": "2025-08-27T08:49:27.432193",
      "diff_size": 9508,
      "diff_lines": 182
    },
    {
      "hash": "ad3450477a77a963b46c8c563e7c857e85a994ce",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-27T08:49:37.165067",
      "diff_size": 260701,
      "diff_lines": 7479
    },
    {
      "hash": "ad36ec30cda84fffcd4b34e956116e9b8fe3d37e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T08:49:53.685789",
      "diff_size": 194134,
      "diff_lines": 5127
    },
    {
      "hash": "ad3ba6677c43cc58700d8eef1c5934dbf044eb57",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-27T08:51:10.525422",
      "diff_size": 75901,
      "diff_lines": 1628
    },
    {
      "hash": "ad52ce4fa303d2c63cbd9833b7245ab2cdff28b3",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The commit renames the class from 'trace_next_queryNodeCmd' to 'NodeCmd', and updates a comment line accordingly. The change is purely structural with no functional modifications, as all method calls and logic remain unchanged.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:52:35.115486",
      "diff_size": 1365,
      "diff_lines": 22
    },
    {
      "hash": "ad685c4615b08725488fdf26c1dd248cfe196cf8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:52:58.092014",
      "diff_size": 2899642,
      "diff_lines": 66381
    },
    {
      "hash": "ad70a46b1b7162287804a43c917e4f78bfbb75ea",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T08:53:05.856588",
      "diff_size": 161560,
      "diff_lines": 3692
    },
    {
      "hash": "ad774814fba9e0ad0fa30b4ae835a48fa71d2b27",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new file 'GestureListener.java' which adds logging for various touch events (onSingleTapUp, onShowPress, etc.). Additionally, the existing code in 'Script.java' and other files is modified to handle touch-related logic, including scaling costumes and processing touched coordinates. These changes include additions of conditional statements and loops that were not present before, indicating functional modifications beyond pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T08:53:16.052914",
      "diff_size": 15557,
      "diff_lines": 463
    },
    {
      "hash": "ad8cad7c4d05fd5dea68fb274c81a102533ebe36",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T08:53:25.368422",
      "diff_size": 3535579,
      "diff_lines": 79639
    },
    {
      "hash": "ad900272f222be894c354171ed9844b30421aab1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "threetenbp",
      "analysis_timestamp": "2025-08-27T08:54:27.923563",
      "diff_size": 552415,
      "diff_lines": 12189
    },
    {
      "hash": "ad90bc4b6641789305101637ad315cafbf4bc094",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "rest-assured",
      "analysis_timestamp": "2025-08-27T08:55:44.998638",
      "diff_size": 30801,
      "diff_lines": 711
    }
  ]
}