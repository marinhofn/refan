{
  "session_info": {
    "start_time": "2025-08-19T23:11:00.912525",
    "end_time": "2025-08-20T05:57:28.980411",
    "total_processed": 700,
    "successful_analyses": 491,
    "failed_analyses": 209,
    "skipped_already_analyzed": 40,
    "processing_errors": 0
  },
  "analyses": [
    {
      "hash": "0230f8772d6fa33db0843df36a6119ade574c636",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-19T23:11:19.181013",
      "diff_size": 915311,
      "diff_lines": 28444
    },
    {
      "hash": "023ca1c6968b7165405028215847dfe6af06064a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'listEnvironmentNodes' with specific functionality and annotations, which is not merely structural. It adds conditional logic in the test cases for this method and modifies existing methods by changing their binder parameters to use @WrapWith, altering how requests are constructed.",
      "llm_confidence": "high",
      "project_name": "jclouds",
      "analysis_timestamp": "2025-08-19T23:11:28.440521",
      "diff_size": 18020,
      "diff_lines": 391
    },
    {
      "hash": "0251a8f0f66055960c2dc5502b6496313bf074f3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method signature change from 'response(Message message)' to 'waitingFor(Message message) protected boolean' and similarly modifies the response(ReadResponse result) method. This includes changes in parameter handling, addition of conditional logic (return statements based on conditions), and modifications to return values which directly alter the functional behavior by changing how messages are processed for read repair.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-19T23:11:36.436411",
      "diff_size": 3667,
      "diff_lines": 102
    },
    {
      "hash": "02678b307325a5bfd8bc4329e48a21f7639a7414",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-19T23:11:46.442577",
      "diff_size": 71535,
      "diff_lines": 1787
    },
    {
      "hash": "0267900f9fbe0170314767269cfc4db69d6b2d85",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-19T23:12:08.261724",
      "diff_size": 218469,
      "diff_lines": 4911
    },
    {
      "hash": "0282b9adc629dae2f5f1675d51234722d3c23a85",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "uaa",
      "analysis_timestamp": "2025-08-19T23:12:52.866164",
      "diff_size": 72350,
      "diff_lines": 1339
    },
    {
      "hash": "02a3d737ac169506e6dec3b0c43d8d81c47136bc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality for handling Decimal128 objects by adding deserializers and serializers in BsonDeserializers.java, BsonSerializers.java, and MongoBsonGenerator/MongoBsonParser classes. This includes implementing a custom logic to convert between BSON's Decimal128 type and BigDecimal, which alters the behavior of how these types are processed compared to existing pure structural changes.",
      "llm_confidence": "high",
      "project_name": "jongo",
      "analysis_timestamp": "2025-08-19T23:16:51.972355",
      "diff_size": 9125,
      "diff_lines": 203
    },
    {
      "hash": "02a7acf8bf23e65bd53fe75bca85c41c6a4cb2cc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jedis",
      "analysis_timestamp": "2025-08-19T23:17:02.198447",
      "diff_size": 2033640,
      "diff_lines": 61775
    },
    {
      "hash": "02b1e4ae35e771ed8a6b7e6472e1847e20439453",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-19T23:17:19.852712",
      "diff_size": 41645,
      "diff_lines": 1060
    },
    {
      "hash": "02b99aeeddaa8208324e4703feb7fec1f9f6e75a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-19T23:18:36.850092",
      "diff_size": 209108,
      "diff_lines": 5155
    },
    {
      "hash": "02f34bd51beb02600b5957e61d8c351bf85571f0",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve adding a new import and modifying the logic of the streamBroadcastStart method by removing commented code. The core functionality remains unchanged, with only minor structural adjustments.",
      "llm_confidence": "high",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-19T23:23:52.615921",
      "diff_size": 10297,
      "diff_lines": 219
    },
    {
      "hash": "02f5119470d5181b111acdd1735e45093de33533",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "threetenbp",
      "analysis_timestamp": "2025-08-19T23:24:00.987009",
      "diff_size": 1823537,
      "diff_lines": 40470
    },
    {
      "hash": "031ca83e762852168078be1d39382ed144cb635a",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve refactoring the code structure without altering functionality. The README.md update is minor text correction and version change, which is structural. pom.xml updates are mostly version adjustments but one plugin was removed (maven-resources-plugin) with no functional impact. In PgDiffTables.java, inherits list type changed from List<String> to List<Pair>, but the method signatures remain compatible as they now use a helper class for storing schema and table names. The parser methods were updated to handle inheritance properly by passing database context, which is structural improvement without changing behavior.",
      "llm_confidence": "high",
      "project_name": "apgdiff",
      "analysis_timestamp": "2025-08-19T23:24:09.664089",
      "diff_size": 24655,
      "diff_lines": 568
    },
    {
      "hash": "032b476c522e7d78c244b6a132027197b7434a08",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new enum constant 'RPC_ADDRESS' and adds corresponding functionality in multiple classes. In VersionedValue.java, a new method 'rpcaddress' is added which creates a VersionedValue from an InetAddress. This changes the behavior of storing and retrieving application states by using RPC addresses instead of endpoints. Additionally, StorageService.java now uses this new method to populate data structures with RPC address information, altering the logic flow for ring topology mapping. The MBean interface also updates its method signature to reflect this change, indicating a functional shift from endpoint-based to rpcaddress-based operations.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-19T23:24:18.568589",
      "diff_size": 6210,
      "diff_lines": 117
    },
    {
      "hash": "035b37a601cbdfc60e9517a9504078d6ae122824",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new XML layout files for different UI components (drawer_list_header.xml, drawer_list_layer.xml, etc.), which are structural changes. However, it also includes multiple code modifications in Java files where method names and parameters have been changed from.getItemId to.getElementId, indicating a functional change due to the addition of 'getElementId' methods that alter behavior by changing how item IDs are retrieved.",
      "llm_confidence": "medium",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-19T23:24:29.184060",
      "diff_size": 17135,
      "diff_lines": 382
    },
    {
      "hash": "0368e97ee4a807cb832a90c590ae5c65a98730c1",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-19T23:24:41.600514",
      "diff_size": 733663,
      "diff_lines": 16055
    },
    {
      "hash": "0379201c7057f6bac4abf1e0f3d81a12d90abd08",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-19T23:24:58.478302",
      "diff_size": 1229501,
      "diff_lines": 25311
    },
    {
      "hash": "038924037bbaae4a62fb167e5ce7ae9e34a129fc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "platform_packages_apps_email",
      "analysis_timestamp": "2025-08-19T23:25:07.636070",
      "diff_size": 23733,
      "diff_lines": 509
    },
    {
      "hash": "03d74581bf226498108b29ce9712128d90ae5711",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include modifications to method signatures and the addition of new functionality for saving and restoring state via onSaveInstanceState and onCreate methods. Specifically, CalendarColorPickerDialog now has newInstance() constructor that returns an instance with arguments, whereas previously it was a no-arg constructor followed by setArguments(). This change allows passing calendarId earlier in the initialization process, which is a functional change as it affects how the dialog is instantiated and potentially its behavior based on different contexts. Additionally, there are changes to method signatures (e.g., newInstance() now takes more parameters) and new conditional logic for handling savedInstanceState.",
      "llm_confidence": "high",
      "project_name": "platform_packages_apps_calendar",
      "analysis_timestamp": "2025-08-19T23:25:24.058555",
      "diff_size": 19565,
      "diff_lines": 438
    },
    {
      "hash": "03e329bede79b7ef9647a99219c2cbae45857860",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'getColumnFamilyIds' in both RowMutation and CounterMutation classes, which changes the interface of IMutation. Additionally, it modifies the Util.writeColumnFamily() method to accept List<IMutation> instead of List<RowMutation>, requiring callers to wrap mutations appropriately. This change alters how code interacts with these objects (e.g., by replacing direct access to column families with calls to getColumnFamilyIds), indicating a functional shift rather than pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-19T23:25:32.751655",
      "diff_size": 7974,
      "diff_lines": 173
    },
    {
      "hash": "03f5cd2f0a6bd0ce04c37d380c87c538de76c7a4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'RelayBuilder' which encapsulates the logic for setting up relays, including method extraction and code movement. However, it also includes changes to method signatures (e.g., constructor of RelayManager now takes BootstrapBuilder instead of PeerAddress) and modifications in behavior through conditional logic that uses BootstrapBuilder parameters. The introduction of a new class with specific methods like 'bootstrapAddress' and the change in how bootstrap information is handled indicate functional shifts beyond pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-19T23:25:39.119469",
      "diff_size": 9871,
      "diff_lines": 236
    },
    {
      "hash": "03f72acd546407c7f9de2a976de31dcd565dba9a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-19T23:25:58.170022",
      "diff_size": 783460,
      "diff_lines": 16938
    },
    {
      "hash": "03fc26d8c8f079c3bf0376147d18afdeebbbefbf",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new conditional logic in the DroneMap class, specifically an if-statement checking for auto pan enabled status and updating camera parameters accordingly. This change alters the behavior by conditionally zooming based on whether the map has been zoomed before or not, indicating functional modifications beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-19T23:26:06.475790",
      "diff_size": 9107,
      "diff_lines": 231
    },
    {
      "hash": "0414e27714bfb2fc49d8208e834dd0d184bd3469",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-19T23:27:25.906125",
      "diff_size": 42280,
      "diff_lines": 1142
    },
    {
      "hash": "04150edaa58736ba572e3614b5c256a441a181c6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include a method signature modification in RconRPC where the searchHandlerMap method is called with an Integer parameter (message.recipient().peerId()) instead of just the peer ID, and there are logic changes such as adding conditional statements to iterate over a map entry set. Additionally, new functionality was introduced including a prototype for NAT handling that adds a sendNATDummy method which sends a direct message and checks success with potential side effects.",
      "llm_confidence": "high",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-19T23:27:34.771725",
      "diff_size": 6530,
      "diff_lines": 155
    },
    {
      "hash": "0428aa849ad40e1a90dc841e595122664efc0f62",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-19T23:27:42.737427",
      "diff_size": 200388,
      "diff_lines": 3765
    },
    {
      "hash": "0431989116035a7126a63d19a8a5c7ae6d6c1616",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new feature by allowing the JUnit sampler to use a constructor string for creating test instances. This includes adding a new property (CONSTRUCTORSTRING) and modifying existing methods to conditionally set sample labels based on this property, which alters the behavior of how test cases are instantiated.",
      "llm_confidence": "high",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-19T23:27:51.051905",
      "diff_size": 11478,
      "diff_lines": 251
    },
    {
      "hash": "043ce2af5d6da3989c1eb0a655f139001bd7364f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-19T23:27:59.454457",
      "diff_size": 45237,
      "diff_lines": 1451
    },
    {
      "hash": "044fc0a15ec2fa326ee8cf0c6a4271d16a3ba687",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-19T23:28:10.439545",
      "diff_size": 232317,
      "diff_lines": 5472
    },
    {
      "hash": "045c3cee6ce6dfe5b027436c4ec0f240f1b8ae50",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The commit changes the package name from 'org.apache.log4j.performance' to 'org.apache.log4j.varia', which is a structural change. The class NullAppender now extends AppenderSkeleton instead of implementing OptionHandler, but this does not introduce new functionality as both interfaces are part of the logging framework and do not alter behavior. All methods remain unchanged in their logic: close(), doAppend(), requiresLayout() have identical implementations before and after. The added comments about activateOptions() and append() method do not change any functional aspects.",
      "llm_confidence": "high",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-19T23:30:52.454822",
      "diff_size": 1825,
      "diff_lines": 69
    },
    {
      "hash": "04639bf1cf1ff708a51c0958621926ca53002c63",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-19T23:31:02.192733",
      "diff_size": 1334267,
      "diff_lines": 31818
    },
    {
      "hash": "047bcd7ad171d6a4aa89128c5e6c6ed5f012b1c0",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-19T23:31:21.514956",
      "diff_size": 765041,
      "diff_lines": 15354
    },
    {
      "hash": "04874186892c86a20181a2f64c5dc24285021b2c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-19T23:32:38.336313",
      "diff_size": 172244,
      "diff_lines": 3539
    },
    {
      "hash": "049ac4f14f2bd8f17bb67ceabefaefdffe1fff9f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit involves a significant refactoring of the recent files functionality, renaming components from 'URLs' to 'ResourceNames'. This change alters method signatures and class names (e.g., RecentURLsMenu -> RecentResourceNamesMenu), which falls under FLOSS indicators due to behavioral modifications. Additionally, several classes were renamed or replaced entirely, such as RecentURLsModel becoming RecentResourceNamesModel, indicating a functional shift from handling URLs to resource names.",
      "llm_confidence": "high",
      "project_name": "GCViewer",
      "analysis_timestamp": "2025-08-19T23:35:22.470026",
      "diff_size": 16658,
      "diff_lines": 371
    },
    {
      "hash": "049e482780b9b7082e37e1a7b99e8cdcf453a00f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-19T23:35:30.599235",
      "diff_size": 55283,
      "diff_lines": 1162
    },
    {
      "hash": "04a2c2420b086036e4b7cc585ac507b0b9bc9558",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-19T23:35:41.306192",
      "diff_size": 4364297,
      "diff_lines": 98775
    },
    {
      "hash": "04aa35bb2939a81b8171633287c40c314ec00b20",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-19T23:36:58.557931",
      "diff_size": 57730,
      "diff_lines": 1421
    },
    {
      "hash": "04c92a39150a501a4531c77358565a85db9ef47f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-19T23:40:37.117953",
      "diff_size": 10493,
      "diff_lines": 220
    },
    {
      "hash": "04ca738c981bafb67fdb2ae01dc40c4774583923",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "core",
      "analysis_timestamp": "2025-08-19T23:40:45.334929",
      "diff_size": 29742,
      "diff_lines": 733
    },
    {
      "hash": "04ea30ebd9309331045903054e6dcc7d4e7edc09",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the test code by replacing hardcoded string references with calls to getString() method, which retrieves strings from resources. This is a functional change because it alters how text is obtained (from resource) rather than just moving existing code. Additionally, multiple tests have their expected values updated or modified parameters are introduced for testing purposes, indicating that the commit includes structural changes but also has elements of functionality modification.",
      "llm_confidence": "medium",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-19T23:40:55.237251",
      "diff_size": 15572,
      "diff_lines": 267
    },
    {
      "hash": "04ead9a56520d24008f1cd1a3057d75fb44411ae",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-19T23:41:06.585966",
      "diff_size": 53425,
      "diff_lines": 1322
    },
    {
      "hash": "04fa0e9cc7fbfc117948d60a3ad8bfab0b0060ba",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'SaveKeyringParcel' which encapsulates multiple parameters previously handled separately. This change includes modifications to method signatures and logic, such as using the parcel object in 'buildSecretKey' instead of individual arrays. Additionally, there are changes in how data is passed between classes (e.g., from KeychainIntentService to PgpKeyOperation), indicating a functional shift rather than pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-19T23:42:33.553554",
      "diff_size": 15150,
      "diff_lines": 251
    },
    {
      "hash": "050a0039573c63393678be3d9fff3f8fa780f36d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in RenderingRule.java and RenderingRuleSearchRequest.java involve structural modifications but also functional changes. In RenderingRule, the properties field is replaced with an array, which affects how methods access elements (e.g., using index instead of iterator). Similarly, visitRule method now uses a boolean parameter to control output loading, altering behavior by conditionally updating values and fvalues based on loadOutput. These signature changes and conditional logic additions indicate functional modifications.",
      "llm_confidence": "medium",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-19T23:42:41.081127",
      "diff_size": 15889,
      "diff_lines": 388
    },
    {
      "hash": "050d07919477023eed4c6d017a0bbe3fd5f1c928",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "GCViewer",
      "analysis_timestamp": "2025-08-19T23:42:50.186751",
      "diff_size": 28532,
      "diff_lines": 544
    },
    {
      "hash": "050d129179b99fa88d25a65afed78d0fedb24f1e",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes involve renaming methods and updating references in a way that preserves semantics. The method 'getHasToken' is renamed to 'hasToken', which aligns with the naming convention (changing from a getter style to a direct boolean query). This change does not alter any behavior as the logic remains identical, merely changing the interface for accessing the same data. Additionally, in Gossiper.java, the condition using the old method name now uses the new one but maintains the exact same conditions and actions. Similarly, StorageService.java updates its call to match the new method without altering functionality.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-19T23:42:58.714517",
      "diff_size": 2266,
      "diff_lines": 51
    },
    {
      "hash": "054404ba43d2e673adbd3da0317ed17b5c91701e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality by modifying the behavior of SSTableReader's getPosition method to handle different operators (EQ and GE) differently, specifically avoiding cached positions for GT requests. It also includes a fix for bloom filter true positives counting and initializes local endpoint state prior to gossip startup if needed. These changes alter existing logic and add new conditions, indicating functional modifications rather than pure structural refactoring.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-19T23:43:04.504032",
      "diff_size": 8165,
      "diff_lines": 177
    },
    {
      "hash": "05570fe5d338319807e23b91734e2fa6fa638f55",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OpenTripPlanner",
      "analysis_timestamp": "2025-08-19T23:44:23.670506",
      "diff_size": 38697,
      "diff_lines": 849
    },
    {
      "hash": "055cabc36c56faeb27158db9f0bd51275787cb7a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces functional changes by modifying the KSMetaData class to use a cloneWith method for creating system keyspace definitions, which involves restructuring and adding new conditional logic. Additionally, it updates several migration classes (AddColumnFamily, DropColumnFamily, UpdateKeyspace) with methods that change how CFMetaData is handled, including modifications to parameter usage and return value generation.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-19T23:46:35.071100",
      "diff_size": 8259,
      "diff_lines": 169
    },
    {
      "hash": "05605658bf9f72a9412760cba244be5fa077d217",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-19T23:46:46.513975",
      "diff_size": 815375,
      "diff_lines": 19687
    },
    {
      "hash": "05740ec5d53cd734671e8fa9cde035b75382e02c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-19T23:46:54.414787",
      "diff_size": 2110115,
      "diff_lines": 54705
    },
    {
      "hash": "058a4044d614a7bed2db9412a118fba3142f322b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include method signature changes (e.g., parameter name change from 'idList' to 'idList', but the functionality remains similar) and additions of new methods like deleteRecording, unpublishRecording, updateRecordingMetadata. Also there are changes in the way metadata is handled with added methods for updating metadata.",
      "llm_confidence": "medium",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-19T23:48:11.721089",
      "diff_size": 26489,
      "diff_lines": 554
    },
    {
      "hash": "058a6ac0e444512f7306097a2f8302690629c2ee",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'reference()' and modifies the existing 'free()' method, while also changing calls from 'free()' to 'unreference()' in multiple places. This represents more than just structural changes; it adds atomic reference counting logic which affects how memory is managed during cache operations. The change alters the behavior by introducing explicit resource tracking with a counter (AtomicInteger) and ensuring proper cleanup through unreference(), thus modifying the functional aspects of the code.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-19T23:48:20.823932",
      "diff_size": 4334,
      "diff_lines": 136
    },
    {
      "hash": "059ebc72c2e58bb96e586bda797e55ed43a806c9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "struts",
      "analysis_timestamp": "2025-08-19T23:49:25.155247",
      "diff_size": 37868,
      "diff_lines": 733
    },
    {
      "hash": "05a255c1f71b8c1f56c6bdf6ed29d613bcfb3e7d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jackrabbit-oak",
      "analysis_timestamp": "2025-08-19T23:49:45.120303",
      "diff_size": 94567,
      "diff_lines": 1966
    },
    {
      "hash": "05aa55bd61e508f9b7fb5209d3d272e1fdf0241b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit involves a significant refactoring of the messaging system to an events framework, including renaming packages and classes (org.sleuthkit.autopsy.messaging to org.sleuthkit.autopsy.events). This change alters method signatures in AutopsyEvent from returning SourceType enum directly to using getSourceType() which returns a string representation. Additionally, IngestManager methods now use the constant LOCAL instead of the enum Local, changing how source type is handled and potentially affecting behavior due to different return types or exception handling modifications (e.g., JMSException catch). The logic in several panels was updated to check for 'LOCAL' strings rather than direct enum comparison, indicating a functional shift. These changes include behavioral modifications such as altered method parameter usage and potential impact on event processing.",
      "llm_confidence": "medium",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-19T23:49:57.171252",
      "diff_size": 14869,
      "diff_lines": 294
    },
    {
      "hash": "05afe9da9230c7aecc17f6c3d16a53b8c4d09fb3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "ps3mediaserver",
      "analysis_timestamp": "2025-08-19T23:50:05.046225",
      "diff_size": 152069,
      "diff_lines": 3778
    },
    {
      "hash": "05c014c412254b961a64a96f726489c1b00ad3b2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "threetenbp",
      "analysis_timestamp": "2025-08-19T23:50:25.796184",
      "diff_size": 3792911,
      "diff_lines": 84877
    },
    {
      "hash": "05ca1ff087694ca6e1b99f5d2b12ac13a7198082",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "struts",
      "analysis_timestamp": "2025-08-19T23:51:42.457449",
      "diff_size": 34466,
      "diff_lines": 635
    },
    {
      "hash": "05d5071b9b19fb31ec76687942742e96093e4616",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jedis",
      "analysis_timestamp": "2025-08-19T23:53:06.856320",
      "diff_size": 19973,
      "diff_lines": 680
    },
    {
      "hash": "05dbea9329d1fdca61dc557b87de9c8d352b8c9b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-19T23:53:15.091901",
      "diff_size": 55615,
      "diff_lines": 1048
    },
    {
      "hash": "05e14fc6b81918a5e581940f119246c828d50a65",
      "purity_classification": "FALSE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the diff primarily involve updating version numbers and adding a static final field for an empty array, along with minor comment edits. There are no behavioral modifications detected; method signatures remain unchanged, no new conditional logic or loops are introduced, return values and exception handling are identical to before, parameter additions/removals do not alter functionality, and the code structure is preserved without altering execution paths.",
      "llm_confidence": "high",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-19T23:53:23.178677",
      "diff_size": 4988,
      "diff_lines": 143
    },
    {
      "hash": "05f480fec0fb1e5a92bd85402a541fa99d815f70",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-19T23:53:31.224393",
      "diff_size": 89481,
      "diff_lines": 1963
    },
    {
      "hash": "05f4f7a71c8cad07149beaf98da823ff6f3991b2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a significant change in the handleRelay method of BaseRelayForwarderRPC, modifying it to return a FutureDone object and adding an asynchronous listener pattern. This indicates functional changes as new conditional logic is introduced for handling success/failure cases via callbacks (FLOSS Indicator 4). Additionally, the GCMForwarderRPC class was renamed to AndroidForwarderRPC with similar method signature changes in handleRelay, which now returns a FutureDone object instead of being abstract (FLOSS Indicator 6). The OpenTCPForwarderRPC also changed its handleRelay implementation to return a FutureDone object and use asynchronous listeners. These modifications alter the execution flow by introducing futures and callbacks for error handling, demonstrating behavioral changes.",
      "llm_confidence": "high",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-19T23:53:41.019846",
      "diff_size": 12315,
      "diff_lines": 270
    },
    {
      "hash": "0602084f62590803358fdf1d98d9a4cc7ed5315b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "graylog2-server",
      "analysis_timestamp": "2025-08-19T23:54:09.425526",
      "diff_size": 255655,
      "diff_lines": 5253
    },
    {
      "hash": "0612d94092ebffa8733bb84097c5cd896dd5059c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-19T23:54:24.301567",
      "diff_size": 35788,
      "diff_lines": 871
    },
    {
      "hash": "062753ab5e39a0e172d2ad617cb57d0035236eea",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method signature change from 'ensureApiClassIsGenerated' to 'generateApiClass' in multiple classes (CodeModelGenerator, EActivityProcessor, SharedPrefProcessor). This change alters the behavior by replacing an existing method with a new one that has identical functionality but different name. Additionally, there are changes in variable/method names and code movement without altering logic flow. However, since the method signature is changed from 'ensure' to 'generate', which implies a potential shift in responsibility or naming convention, it indicates a functional change even if the behavior remains similar.",
      "llm_confidence": "medium",
      "project_name": "androidannotations",
      "analysis_timestamp": "2025-08-19T23:58:26.033900",
      "diff_size": 9866,
      "diff_lines": 141
    },
    {
      "hash": "063dd2ad03e30263b45167615cddb69dd9189584",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-19T23:58:41.973252",
      "diff_size": 238736,
      "diff_lines": 6077
    },
    {
      "hash": "063f0e52f3e6ae46b3098b833eed9a391b1af960",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "error-prone",
      "analysis_timestamp": "2025-08-19T23:59:02.814227",
      "diff_size": 57049,
      "diff_lines": 1399
    },
    {
      "hash": "064698b69fcf406ab78f435f39c2a0e205f14b5d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-19T23:59:54.496704",
      "diff_size": 64895,
      "diff_lines": 1517
    },
    {
      "hash": "067198e145e9558675689c84043ad7ab00c39d1b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new SessionTask class and modifies the getSessionTask method in SpoutEngine to return an instance of this task. Additionally, it changes the start methods in both SpoutClient and SpoutServer by adding calls to scheduleSyncRepeatingTask with the session task. The LoginMessage constructor and related fields are renamed from 'protoVersion' to 'extraInt', affecting behavior as the message now carries a different meaning (player ID instead of protocol version). These changes include new conditional logic in CommonCommands for handling world teleportation, modified method signatures, and behavioral shifts that cannot be attributed solely to structural reorganization.",
      "llm_confidence": "high",
      "project_name": "Spout",
      "analysis_timestamp": "2025-08-20T00:03:47.803844",
      "diff_size": 14730,
      "diff_lines": 367
    },
    {
      "hash": "06a2ce5865338c8f889f6543892a437be0ae2f0e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a performance optimization by changing the texture interpolation calculation from fixed values to dynamic based on context length and width. This alters the execution path of the rendering code, specifically in LaserRenderer_BC8's bakeStartCap and bakeEndCap methods where new parameters are used for vertex transformation (e.g., 'length' variable). Additionally, a bug fix is included by adjusting the laser marker texture coordinates to properly interpolate based on context length, ensuring correct visual representation. These changes modify method signatures and logic flow without being purely structural.",
      "llm_confidence": "medium",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T00:03:55.501997",
      "diff_size": 14530,
      "diff_lines": 248
    },
    {
      "hash": "06c12cf9b4eafceeff7e49f7df4e58548b088fec",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new constants and parameters for the DatabaseBinaryStore, including driverClass, connectionURL, username, password, and jndiLocation. It also modifies the constructor to accept these additional parameters and adds transaction handling methods (begin, commit, rollback). The logic changes include using UUID instead of content hash for key generation, restructuring data storage into two caches (metadata and payload), and adding new conditional logic in cleanup operations. These modifications change behavior by altering how binary data is stored and retrieved, introducing new dependencies, and changing the transaction management approach.",
      "llm_confidence": "high",
      "project_name": "modeshape",
      "analysis_timestamp": "2025-08-20T00:04:06.134058",
      "diff_size": 24263,
      "diff_lines": 667
    },
    {
      "hash": "06c130e3cb85577041b475084400c08c505d8f9e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T00:05:23.445748",
      "diff_size": 2937175,
      "diff_lines": 63697
    },
    {
      "hash": "06d4fcd713fdb0f40b641eb71c62f46c6e941b5e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T00:06:40.292049",
      "diff_size": 280579,
      "diff_lines": 5648
    },
    {
      "hash": "06d7ba2804f6785a8d19e70b707de35417c68cc2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'clone' in AbstractComponent.java, which performs deep cloning by iterating over fields and invoking their clone methods. This adds functional behavior beyond simple structural changes. Additionally, the PojoPrefabManagerTest.java file updates test cases to use new methods like getPrefab and createPrefab instead of deprecated ones, indicating API modifications that affect functionality.",
      "llm_confidence": "high",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-20T00:06:48.316288",
      "diff_size": 6077,
      "diff_lines": 176
    },
    {
      "hash": "06da35fdda32781e620d5d28c514ee480212a108",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T00:06:59.667329",
      "diff_size": 688485,
      "diff_lines": 14444
    },
    {
      "hash": "06db7c91ca00b4873d1f63f6bdbbe79adab8e739",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces multiple changes that alter the functional behavior of the code. In InfoBarItem.java, method signatures are changed (isConnected() instead of isConnected(), changeVehicleMode() instead of changeFlightMode()), and conditional logic is updated to use VehicleMode enum which affects how flight mode changes are handled. Additionally, Battery.java's constructor now includes a batteryDischarge parameter, changing its structure but not just renaming fields as the equals, hashCode, and toString methods were removed or modified, indicating potential impact on object comparison and string representation.",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-20T00:07:07.680049",
      "diff_size": 11521,
      "diff_lines": 281
    },
    {
      "hash": "06e0260905690735485d8ecc93ad5700cb2c1a81",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T00:07:19.917163",
      "diff_size": 208426,
      "diff_lines": 5420
    },
    {
      "hash": "06eff68e222cd67774d53e74bebacd7af25595d3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T00:08:15.660463",
      "diff_size": 219434,
      "diff_lines": 5042
    },
    {
      "hash": "071badb3540c1d0b2bf125865c8009612172c99a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include multiple bug fixes and functional improvements, such as modifying the behavior of the quarry to check its orientation before loading chunks, updating exception handling in event distribution with @SideOnly(Side.CLIENT), and reworking chunk loader ticket management. These modifications alter existing functionality or add new conditions that change how code executes, indicating a floss refactor.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T00:10:51.148967",
      "diff_size": 12363,
      "diff_lines": 294
    },
    {
      "hash": "072c079e732f2cac3c86d0f0d636d7ec8815dd7e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-20T00:10:59.698977",
      "diff_size": 978561,
      "diff_lines": 26429
    },
    {
      "hash": "07342afbab53154f50c49bac33e91790cfa65c91",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-20T00:11:05.343195",
      "diff_size": 11299,
      "diff_lines": 308
    },
    {
      "hash": "07346f005bce0371cdb5a1349c709f17d8c98876",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the loadExistingFile method by adding a try-catch block and modifying the error handling logic. The addition of a new variable 'errorDetected' and the introduction of conditional checks for exceptions indicate a behavioral change, as it now handles NumberFormatException specifically and provides user feedback via GuiPackage.showErrorMessage instead of simply sending an empty SampleResult object.",
      "llm_confidence": "high",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-20T00:11:10.412869",
      "diff_size": 2766,
      "diff_lines": 51
    },
    {
      "hash": "073b5b7b39af903f7bf59d57ae19525d84221ca7",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in FNXQuery.java involve replacing the variable 'ctx' with a new instance of QueryContext created by ctx.proc(new QueryContext(ctx)), and updating references to this new instance. This is a structural change where the context object is replaced with a derived one, but no functional behavior changes are observed as the same methods (stop) are called on the new object without altering their parameters or conditions.",
      "llm_confidence": "high",
      "project_name": "basex",
      "analysis_timestamp": "2025-08-20T00:11:16.689737",
      "diff_size": 3707,
      "diff_lines": 76
    },
    {
      "hash": "0745968b49e7eefc625942ea29933760e8cf34bd",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "infinispan",
      "analysis_timestamp": "2025-08-20T00:11:25.187674",
      "diff_size": 92605,
      "diff_lines": 2572
    },
    {
      "hash": "07468b234bf0144f895659eedfdb1dea1880f3d3",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve renaming methods from 'zeroOrOneViewParameters' to 'zeroOrOneViewParameter' and similarly for 'menuItem' related methods. These are simple renames that preserve the same functionality, as evidenced by the method signatures remaining largely identical (only changing plural to singular) and no other functional changes detected in the diff. The addition of copyright headers is a formatting change without altering behavior.",
      "llm_confidence": "high",
      "project_name": "androidannotations",
      "analysis_timestamp": "2025-08-20T00:11:33.497219",
      "diff_size": 11840,
      "diff_lines": 224
    },
    {
      "hash": "075af44c424afef544e4cb88fc42fae471a87ce2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-20T00:11:43.004649",
      "diff_size": 1128431,
      "diff_lines": 29712
    },
    {
      "hash": "075d78b9609dd4adba707b05b96b985a47ec3b15",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in the PDFStreamEngine.java file replace a Stack with a Deque, which is a structural change. However, this is accompanied by modifications to method signatures and logic that calculate font angles differently (ExtractText.java). The introduction of a new static method 'getAngle' indicates functional changes related to text extraction behavior.",
      "llm_confidence": "medium",
      "project_name": "pdfbox",
      "analysis_timestamp": "2025-08-20T00:11:52.100391",
      "diff_size": 12509,
      "diff_lines": 270
    },
    {
      "hash": "0760f598ecadfb225dcece6f7cf4a2a50f951a64",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new visitor method for DerivedFile in AbstractContentChildren.java, which is a structural change. However, it also modifies the DirectoryNode class to return a different node type (CONTENT) and updates DataResultFilterNode.java with additional handling for DerivedFileNode, including conditional logic that adds tag actions based on artifact types. These changes include new conditional statements and method additions that alter behavior by enabling derived file nodes in certain contexts.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T00:12:00.661904",
      "diff_size": 10686,
      "diff_lines": 235
    },
    {
      "hash": "0762f34f18effeff57fc3697df176e73605c079a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change from HashMap to ConcurrentHashMap in EngineController, which is a functional modification affecting thread safety. Additionally, it adds new methods and logic for dynamic reconfiguration of the server (e.g., configureScriptEngine, hasAnythingChanged) that handle property changes and redeploy services conditionally based on various factors. These additions include conditional checks and redeployment logic, altering the behavior compared to previous static setups.",
      "llm_confidence": "high",
      "project_name": "rexster",
      "analysis_timestamp": "2025-08-20T00:12:10.191790",
      "diff_size": 18673,
      "diff_lines": 407
    },
    {
      "hash": "077e40434fbbb77d71df6987ffdd0865a229fc56",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-20T00:12:23.913109",
      "diff_size": 89657,
      "diff_lines": 2474
    },
    {
      "hash": "077f38ea1352ed90a57d0b3b0fa825ccfb0dbbf0",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in this diff involve introducing a variable 'IInventory inventory' and using it to replace the direct cast of 'tile' within the loop. This is a straightforward code refactoring for clarity, with no change in functionality or behavior as all operations remain identical.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T00:12:31.048591",
      "diff_size": 1539,
      "diff_lines": 30
    },
    {
      "hash": "07893d704598f7cbbc316c9a65a8c415e5404dfa",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T00:12:41.433920",
      "diff_size": 1428507,
      "diff_lines": 29777
    },
    {
      "hash": "0789cacd45ede31bf966db59f9fa60cb141e7abc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a series of changes that qualify as floss refactoring due to multiple behavioral modifications. In Sender.java, the method 'handleRelay' is called based on 'isRelayed()' instead of 'isRelay()', indicating a change in condition checking (FLOSS Indicator 4). Additionally, within PeerAddress.java, all occurrences of 'IS_RELAY' are replaced with 'IS_RELAYED', and corresponding methods like 'isRelay()' become 'isRelayed()'. This not only changes the method names but also alters the logic flow by replacing a condition in one test case (TestPeerAddress) from checking 'isRelay' to 'isRelayed'. The change in variable name suggests potential differences in behavior, especially since it's part of a larger refactoring effort involving RelayBuilder and RelayManager classes. These changes include modifying method parameters implicitly through the use of different boolean flags, which falls under FLOSS Indicator 6 (behavioral modifications).",
      "llm_confidence": "medium",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-20T00:12:52.458920",
      "diff_size": 14273,
      "diff_lines": 297
    },
    {
      "hash": "0793e569b4ae5f3a74fbff272fed8ef8332f0557",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T00:13:00.461432",
      "diff_size": 114974,
      "diff_lines": 2350
    },
    {
      "hash": "07b76f491058b6c6b3440d03e66d1efd47e998ce",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T00:13:23.955470",
      "diff_size": 91516,
      "diff_lines": 1813
    },
    {
      "hash": "07b7a4b334b9c9b93a11928a6009103ec5ba43ea",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-20T00:13:46.124697",
      "diff_size": 109969,
      "diff_lines": 2021
    },
    {
      "hash": "07d303432462aab3be3adf1e138611383352ab84",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in this commit involve structural modifications but also include functional alterations. In PeerNAT.java, the methods startSetupRelay and startRelayMaintenance are changed from public to private, indicating a design change that might affect how they are called or their intended use. Additionally, DistributedRelay.java now returns an unmodifiable list of BaseRelayConnection objects in its relays() method, which is a functional change as it ensures thread safety by making copies and using synchronization, altering the behavior compared to before. PeerMapUpdateTask.java implements new interfaces for peer map changes, adding event handling logic that updates a status flag (AtomicBoolean) when peers are inserted/removed/updated, changing its functionality from just updating the relay to also reacting to peer map events. OpenTCPForwarderRPC.java modifies log levels and potentially adds more conditions or checks implicitly by changing debug logs to trace. TestRelay.java's test cases now use a different method (startRelay) instead of startSetupRelay for setting up relays, which is likely due to the functional changes in the code it tests.",
      "llm_confidence": "high",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-20T00:16:31.243335",
      "diff_size": 15622,
      "diff_lines": 374
    },
    {
      "hash": "07f24b8aa8745f6adb9f772a0a06f84bce7e4a99",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-20T00:16:38.249731",
      "diff_size": 11313,
      "diff_lines": 181
    },
    {
      "hash": "07fbd8ee6042797aaade90357d625ba9d79c31e0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T00:16:46.244560",
      "diff_size": 7707929,
      "diff_lines": 162012
    },
    {
      "hash": "0820ac014ea78d127cfa093c676a22924facfa94",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-20T00:17:01.464650",
      "diff_size": 32108,
      "diff_lines": 875
    },
    {
      "hash": "084125ca3c3dfc7bf5b08ec95097de2e03bfc0df",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include several modifications that change functionality: modified method signatures, added new methods, removed comments with different meanings, changed variable names (e.g., 'eventIDs' to 'eventIDs'), and introduced conditional logic. These changes indicate functional changes beyond simple structural reorganization.",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T00:18:18.210762",
      "diff_size": 30100,
      "diff_lines": 657
    },
    {
      "hash": "084d0e39620ab8b472aad462c763a4a3bc80da68",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-20T00:19:34.915186",
      "diff_size": 70749,
      "diff_lines": 1810
    },
    {
      "hash": "086949c8fb2204bfa51e989b1fb7b8ccc6a3bc39",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve restructuring the URL class and its builder to handle method parameters more systematically. The introduction of new methods like addMethodParameterIfAbsent, along with modifications in how parameters are processed (e.g., splitting on comma instead of just '.', handling absent keys), indicates functional changes. These additions allow conditional updates based on parameter existence, altering behavior compared to the old approach where all parameters were treated uniformly regardless of method context.",
      "llm_confidence": "high",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-20T00:22:17.086209",
      "diff_size": 12955,
      "diff_lines": 283
    },
    {
      "hash": "08746b9fb29146d821162ab31e88bbaa373db51a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-20T00:22:25.274064",
      "diff_size": 75675,
      "diff_lines": 2295
    },
    {
      "hash": "08848e7956f5fd08525a08498205637b2652f2a7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the ColumnFamilyStore and Memtable classes by replacing the direct return of ReplayPosition with Future<ReplayPosition> in several method signatures. This modification adds asynchronous behavior, as seen in the new use of Futures and ExecutionException handling. Additionally, it changes how the context is used (e.g., calling get() on the future) which alters the control flow and error handling, indicating a functional change rather than pure structural refactoring.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T00:22:34.617386",
      "diff_size": 13540,
      "diff_lines": 261
    },
    {
      "hash": "088edabb31a90cd607f3c6a3123effce5703c817",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-20T00:22:44.927060",
      "diff_size": 4912116,
      "diff_lines": 100265
    },
    {
      "hash": "08b34657604bf9c0bb9a6eaa2971904e89564a77",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method signature change from 'closeTimeLine' to 'shutDownTimeLine' in TimeLineController, which alters the behavior by changing the name and potentially implying different functionality. Additionally, it changes the initial value of eventsDBStale from false to true without explanation, affecting the state management. These modifications indicate functional changes beyond pure structural refactoring.",
      "llm_confidence": "medium",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T00:22:53.184690",
      "diff_size": 9067,
      "diff_lines": 182
    },
    {
      "hash": "08bb1df76fd73c788d7411ca6f31c18d73774d0b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new parameter 'destination' in the call method, replacing the hardcoded string. Additionally, it adds a new method setSipRemotePort and updates properties with related changes. These modifications change how parameters are handled and introduce new functionality for configuring remote ports.",
      "llm_confidence": "high",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-20T00:22:59.086371",
      "diff_size": 9310,
      "diff_lines": 184
    },
    {
      "hash": "08cc853fa8e8e447268ecde3c18f4f980508c11f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'LockedVertexModel' with methods that wrap existing layouts (mxFastOrganicLayout, mxCircleLayout, mxHierarchicalLayout) by using the LockedVertexModel to check for locked vertices. This changes the behavior of these layout classes because they now inherit conditional logic from the wrapper regarding vertex locking. Additionally, new conditional checks are added in setVertexLocation and other methods that affect how vertices are positioned based on their locked status.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T00:23:08.830638",
      "diff_size": 15287,
      "diff_lines": 379
    },
    {
      "hash": "08cd31de6e829a5a592e65e36ba92c99a48c12da",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method signature change from 'evaluateGuards' to 'evaluateGuards' with additional parameter, and modifies the logic flow by adding new conditional statements. Specifically, in MixinsRulesetsSolver.java, the method 'resolveCalledBody' is renamed to 'resolveCalledBody' but its parameters are changed significantly, altering how it handles scope and guard values. This includes changes to return types (Couple instead of BodyCompilationData) and modifications that affect behavior by introducing new operations like saving arguments or updating scopes differently.",
      "llm_confidence": "medium",
      "project_name": "less4j",
      "analysis_timestamp": "2025-08-20T00:23:17.080964",
      "diff_size": 16229,
      "diff_lines": 333
    },
    {
      "hash": "08d100176d1b616f28e3c4ee8468fa5c4e418f40",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-20T00:23:25.174339",
      "diff_size": 284649,
      "diff_lines": 6598
    },
    {
      "hash": "08d6ee36f9418a1aa95263b601c9d74544223346",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-20T00:23:55.611396",
      "diff_size": 1780437,
      "diff_lines": 34095
    },
    {
      "hash": "091e63849680bed203d1d80ccdf56e8857b866b8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the allowed parameter types for preference change listeners, expanding support to include numeric types (Integer, Float, Long) and their primitives. This requires parsing string values into these numbers during code generation, altering the behavior of how new values are handled compared to previous handling which only supported String or Boolean. Additionally, method signatures were updated in multiple files to reflect this broader type support, indicating a functional change rather than pure structural refactoring.",
      "llm_confidence": "high",
      "project_name": "androidannotations",
      "analysis_timestamp": "2025-08-20T00:34:19.322986",
      "diff_size": 7516,
      "diff_lines": 106
    },
    {
      "hash": "09214d252b99a0885292d0fc46bed3ff1b702b94",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new parameter 'mShadowInfluence' and modifies the shader logic to incorporate this influence value. Additionally, it adds a uniform for light direction and uses it in conditional calculations, altering the behavior of shadow rendering.",
      "llm_confidence": "high",
      "project_name": "Rajawali",
      "analysis_timestamp": "2025-08-20T00:34:28.481508",
      "diff_size": 15214,
      "diff_lines": 341
    },
    {
      "hash": "0922e258a4963a1e199c23f6c7556d6bfb031a85",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-20T00:34:41.700795",
      "diff_size": 92381,
      "diff_lines": 2356
    },
    {
      "hash": "092dcd74eba77dbd5336ef2d3e66736c390ed50a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The change replaces an ArrayList with a HashSet and adds a new element to the set before returning it. This introduces a functional difference because HashSet does not guarantee order, whereas ArrayList did in the original code (though not explicitly used for ordering here). Additionally, the return value is now a Set containing one extra ChunkPos object compared to the previous list which only contained chunk positions from nested loops.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T00:34:49.298255",
      "diff_size": 1065,
      "diff_lines": 24
    },
    {
      "hash": "0932ed670c66ca2f8c5dc1450b85590738b773c9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T00:35:00.213109",
      "diff_size": 1057694,
      "diff_lines": 24275
    },
    {
      "hash": "0938a31b6dddaa86dc1f8b7249a43f63f72a7583",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-20T00:35:12.716300",
      "diff_size": 113434,
      "diff_lines": 2473
    },
    {
      "hash": "095a776e9f4e2de42517531c971122b608f847bc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "PixelController",
      "analysis_timestamp": "2025-08-20T00:36:29.874561",
      "diff_size": 695505,
      "diff_lines": 15638
    },
    {
      "hash": "0967426cdde87eadbc0c8ce4b71a7104ffa75596",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a refactoring of the GUI button system, replacing GuiSpriteButton with GuiButtonDrawable. This change includes modifications to method signatures and internal structures, such as renaming classes and changing how buttons are instantiated and configured (e.g., using IGuiElement instead of direct buttonList additions). Additionally, there is evidence of behavioral changes through the introduction of new conditional logic in the handleButtonClick method and adjustments in other GUI components like StandardSpriteButtons. The replacement of deprecated elements with new ones indicates a functional shift to support JSON-based configurations, which alters how buttons are managed and potentially their interactions.",
      "llm_confidence": "medium",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T00:36:39.982642",
      "diff_size": 17949,
      "diff_lines": 310
    },
    {
      "hash": "09741b02863b138846f3747a19dc40a3518b9aa0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new FileManager class and modifies the FileDialog to use it, adding functionality for file browsing. This includes changes to method signatures (e.g., build now takes additional parameters), introduction of conditional logic in onActivityResult, and modifications that affect behavior by allowing interaction with external file managers. The diff shows significant structural changes combined with functional additions.",
      "llm_confidence": "high",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-20T00:36:46.945122",
      "diff_size": 21626,
      "diff_lines": 501
    },
    {
      "hash": "09748e08b06a35701523cf3457ceacae190fb334",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T00:37:52.471975",
      "diff_size": 172513,
      "diff_lines": 4566
    },
    {
      "hash": "0979b765ff0159436b6169cdeacbceb6db39be09",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-20T00:38:42.527560",
      "diff_size": 573509,
      "diff_lines": 13032
    },
    {
      "hash": "099b0d6a0d129c5e1988246b6450411417e6c424",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in the diff include a replacement of BlockUtil.breakBlockAndGetDrops with tile.getWorldBC().destroyBlock(false) and modifications to block breaking logic. Specifically, in SnapshotBuilder.java, the break task uses destroyBlock instead of breakBlockAndGetDrops, which alters how drops are handled (removed). In TileQuarry.java, the code now directly calls destroyBlock when drillPos is null, bypassing drop collection. Additionally, BlockUtil.breakBlockAndGetDrops was replaced with a more complex method that includes filtering and extraction logic changes. These alterations change behavior by affecting item drop handling.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T00:40:08.653604",
      "diff_size": 6548,
      "diff_lines": 140
    },
    {
      "hash": "099bb1ce5950cf9986b5e93d44bcbe5291a814c3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Spout",
      "analysis_timestamp": "2025-08-20T00:40:17.626924",
      "diff_size": 158264,
      "diff_lines": 4292
    },
    {
      "hash": "099cd16accd059c0272559d04ecd5ea2efd066b8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-20T00:40:36.204422",
      "diff_size": 89690,
      "diff_lines": 1814
    },
    {
      "hash": "09a14fba7a9536fbed913bb34574d9cbf343e9ac",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-20T00:41:24.588275",
      "diff_size": 56174,
      "diff_lines": 1556
    },
    {
      "hash": "09b282d1fdd7d6d62542137003011d144c0227be",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T00:41:41.464673",
      "diff_size": 773616,
      "diff_lines": 15602
    },
    {
      "hash": "09b4f448e2f9a7b4eeda8040bd8bb1893441aa57",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit includes multiple changes that introduce functional modifications. In ColumnFamilyStore.java, the method call to freeze is changed from oldMemtable.freeze() to mt.freeze(), and a condition checks if memtable is frozen before adding it to the list of stores for concurrency control (CASSANDRA-3547). This alters the behavior by ensuring indexes are also frozen. In HintedHandOffManager.java, there's an addition of conditional logic around checking hint store emptiness. Additionally, in AntiEntropyService.java, a new method 'terminate' is added and existing code structure changed to handle job termination differently. These changes include behavioral modifications like altered concurrency control and exception handling patterns.",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T00:41:50.756731",
      "diff_size": 11076,
      "diff_lines": 246
    },
    {
      "hash": "09b7d5e14e1de743ec74bc9f1da307b0118488ff",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-20T00:42:00.757152",
      "diff_size": 62110,
      "diff_lines": 1427
    },
    {
      "hash": "09bd2ca251da7c44ed4c2c355cbd168b5eba8819",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include updates to dependency versions and modifications in the DoxiaMojo class that change how site descriptors are handled based on locale, as well as adjustments in the ScpSiteDeployMojo class for file handling. These alterations affect functionality beyond simple structural reorganization.",
      "llm_confidence": "high",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-20T00:42:08.952459",
      "diff_size": 7085,
      "diff_lines": 163
    },
    {
      "hash": "09c0f5dfc236be3ae1e88e67833073943fae1991",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces multiple changes that alter the behavior of existing methods. In Case.java, the catch block for GeneralSecurityException is replaced with a try-catch around an existing method call, and new logging and exception handling are added. Similarly, in ServicesMonitor.java, additional try-catch blocks handle exceptions differently. The TextConverter class now throws IllegalArgumentException instead of GeneralSecurityException, which changes its behavior by requiring different error messages to be passed. UserPreferences methods also change their thrown exceptions from GeneralSecurityException/IOException to just IllegalArgumentException. These modifications indicate functional changes rather than pure structural ones.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T00:42:19.015749",
      "diff_size": 18608,
      "diff_lines": 327
    },
    {
      "hash": "09ef745ae1df582ec00766c44e018b5230bdb6be",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit changes method signatures and logic from 'getRequiredPermissionLevel' to 'getMinimumPermissionLevel', indicating a functional change. The RootCommand now implements the new interface method, while SubCommand's implementation remains unchanged but uses the same field name (permLevel.permLevel). CommandHelpers also changed its condition check from child.getRequiredPermissionLevel() to child.getMinimumPermissionLevel(), altering the behavior of permission checks.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T00:42:27.072805",
      "diff_size": 3395,
      "diff_lines": 73
    },
    {
      "hash": "09fc45feb9e3d7816dd19dd6eda0dfda92b61a10",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-20T00:42:46.157429",
      "diff_size": 38462,
      "diff_lines": 1067
    },
    {
      "hash": "0a03819acf6ab87f356d07626189d26d3ec4fa35",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T00:43:48.316975",
      "diff_size": 79126,
      "diff_lines": 1665
    },
    {
      "hash": "0a330744c5b6f3b1a49e8988ccf1f6ac748340f5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "YCSB",
      "analysis_timestamp": "2025-08-20T00:48:40.974838",
      "diff_size": 281848,
      "diff_lines": 7397
    },
    {
      "hash": "0a4db4771a67895fc3c17555e5901bba8975df20",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve renaming interfaces and classes to use the standard Java Swing TreeNode instead of JMeterTreeNode. This is a pure refactor as it replaces internal implementation-specific types with more generic ones without altering functionality, only changing names for better abstraction and adherence to Java standards.",
      "llm_confidence": "high",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-20T00:48:49.086998",
      "diff_size": 8821,
      "diff_lines": 218
    },
    {
      "hash": "0a4e646283ab794b7d518ff48d821c610cf7a65d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in method naming from setTtl to setTTL, which is more than just a simple rename. Additionally, it adds new conditional logic and exception handling checks (e.g., checking if type is VertexLabelVertex or EdgeLabelVertex). There are also modifications to the behavior of setting TTL values for different types, including PropertyKeyVertex, indicating functional changes rather than pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-20T00:48:58.769248",
      "diff_size": 16553,
      "diff_lines": 388
    },
    {
      "hash": "0a5d3fe9888fd5327a8b68c3bd0da58c70e0d5a9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit changes the class from extending javax.swing.JPanel to extending JPanel, which is a different base class. This change alters the functionality because JPanel and org.sleuthkit.autopsy.coreutils.JPanel (if it exists) might have different behaviors or capabilities. Additionally, there are modifications in exception handling and logging references, indicating functional adjustments.",
      "llm_confidence": "medium",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T00:49:06.929959",
      "diff_size": 10010,
      "diff_lines": 234
    },
    {
      "hash": "0a5e2204ce74390bfbeb3fa3d74914cf47a13258",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T00:49:17.282256",
      "diff_size": 362506,
      "diff_lines": 7373
    },
    {
      "hash": "0a81fd30a03d46f7f6ece89824a16428adc08f80",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The diff includes changes that alter the behavior of existing methods and introduce new functionality. In ReportTable.java, the interface method signature changed from getChartElements() to a more standard approach with no clear structural reason beyond functional impact. Similarly, in AbstractReportGui.java, configureTestElement was modified by adding TestElement parameter handling which affects how charts are configured. The renaming of variables (e.g., checkItems to yItems) and restructuring in TableGui.java hide functional changes like the addition of new menu items for BarChartGui and LineGraphGui. These additions indicate expanded capabilities beyond simple structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-20T00:52:01.430100",
      "diff_size": 15118,
      "diff_lines": 346
    },
    {
      "hash": "0a88016ae14b6653b20a8caab5ee7c9d836a511f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jongo",
      "analysis_timestamp": "2025-08-20T00:52:06.299673",
      "diff_size": 22401,
      "diff_lines": 623
    },
    {
      "hash": "0a880a7eecadf803f8ab91b1b487c167d91c36f0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "javers",
      "analysis_timestamp": "2025-08-20T00:52:18.756219",
      "diff_size": 30443,
      "diff_lines": 655
    },
    {
      "hash": "0a88284e24beda7bb611ce030502fb521b6b5567",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T00:52:43.863340",
      "diff_size": 101980,
      "diff_lines": 2808
    },
    {
      "hash": "0a9137f7358dae1bbec312905890ad75d0cb35bb",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Android-CircleDialog",
      "analysis_timestamp": "2025-08-20T00:54:00.735207",
      "diff_size": 152383,
      "diff_lines": 3765
    },
    {
      "hash": "0aa7c87774931cef4b8d3b1f805b0d228a69bd4b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the dependency version from 1.7 to 1.7.1, which is a functional update. Additionally, there are changes to command line arguments (RESOLVE_DEPENDENCIES_ARGUMENT renamed to REFRESH_DEPENDENCIES_ARGUMENT) and modifications in exception handling logic within the GrailsScriptRunner class. These alterations indicate new functionality or behavior changes beyond pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "grails-core",
      "analysis_timestamp": "2025-08-20T00:55:26.478776",
      "diff_size": 7765,
      "diff_lines": 137
    },
    {
      "hash": "0abd6f776544bbf1cf8dfda25e14a5132c6c3d06",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-20T00:55:36.553566",
      "diff_size": 54810,
      "diff_lines": 1106
    },
    {
      "hash": "0ada0f0c73a8d2b04ad8d81cdbfe7d62a7a0477f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Rajawali",
      "analysis_timestamp": "2025-08-20T00:55:54.722554",
      "diff_size": 68702,
      "diff_lines": 1589
    },
    {
      "hash": "0ae7d4ddd2c565773260d69e68d36f8558cdc3f4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method rename from 'adjustSortAndFlags' to 'adjustQueryForFlagsAndSort', which changes the method signature and name. Additionally, it updates preference keys by changing their string literals from English abbreviations to more descriptive ones (e.g., 'tla_flags' to 'sort_flags'). This change in naming and structure indicates a functional shift as the new names imply different purposes or parameters. The code movement also includes adding calls to retrieve sort flags and sort value, which were previously handled internally within the method.",
      "llm_confidence": "high",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-20T00:56:02.851751",
      "diff_size": 3705,
      "diff_lines": 67
    },
    {
      "hash": "0af86e924aaa4557d0ef8e690c0373f435c949da",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-20T00:56:14.893150",
      "diff_size": 263104,
      "diff_lines": 6872
    },
    {
      "hash": "0afff62cb1e2ed355f29f7a6544ff03b705cffb4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-20T00:56:32.380120",
      "diff_size": 333695,
      "diff_lines": 8201
    },
    {
      "hash": "0b78831ffa9c9e21fec611b962e198e31cf21f3d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a functional change by renaming 'shapes' to 'annotations' in the Page class and updating related methods. This refactoring alters method signatures (getAnnotations() instead of getShapes()) and changes return values, indicating behavioral modifications. Additionally, it adds new logic for deleting annotations based on an ID parameter and updates the clear method accordingly.",
      "llm_confidence": "high",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-20T01:10:49.069636",
      "diff_size": 3934,
      "diff_lines": 121
    },
    {
      "hash": "0b9b70aa459cf712a98d769bcd895e09ef060d01",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "openpnp",
      "analysis_timestamp": "2025-08-20T01:10:57.119215",
      "diff_size": 487155,
      "diff_lines": 9343
    },
    {
      "hash": "0ba2c1df9bf6614f4e17c8a30f3036429ded9ade",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the diff involve renaming test methods from 'test_plus_PeriodProvider' to 'test_plus_PeriodProvider_simple', and similarly for minus and get methods. The method signatures remain identical, with no change in parameters or return types. The logic within these methods is unchanged; they still perform the same operations (plus/minus with PeriodProvider, getYear/getHourOfDay etc.) and assertions are preserved. There are no new conditional statements, loops, exception handling changes, or algorithm modifications introduced. Only the method names have been altered for clarity without affecting functionality.",
      "llm_confidence": "high",
      "project_name": "threetenbp",
      "analysis_timestamp": "2025-08-20T01:11:05.585892",
      "diff_size": 2411,
      "diff_lines": 44
    },
    {
      "hash": "0ba5cf12b9e1b7558ccf0c3a8bbd663f028024ce",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T01:12:25.046811",
      "diff_size": 881946,
      "diff_lines": 18609
    },
    {
      "hash": "0ba9ffc6e8a16ae3397eb0f7b4996c6cb4446db4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a while loop in the consumer code (Application.java) which changes the execution flow from a single asynchronous call to repeated calls with delays. This is a functional change as it alters the program's behavior by continuously invoking and waiting for results, rather than just restructuring existing code. Additionally, there are modifications in the XML configuration files that change how services are referenced and metadata is handled, including new parameters and registry addresses which could affect functionality.",
      "llm_confidence": "high",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-20T01:12:33.855026",
      "diff_size": 13093,
      "diff_lines": 205
    },
    {
      "hash": "0baa47fdc29fa6670a8a3560099e231d57a15580",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Rajawali",
      "analysis_timestamp": "2025-08-20T01:13:00.070978",
      "diff_size": 496777,
      "diff_lines": 14974
    },
    {
      "hash": "0bb37a029e21fa17dba485ca9d38bb07ca5a3809",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T01:13:08.235909",
      "diff_size": 349203,
      "diff_lines": 9637
    },
    {
      "hash": "0bb69a45ac7056b080b654e9761cc320e0dfc2e1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method rename from 'showProgressDialog' to 'showDBPopulationProgressDialog' in PromptDialogManager, which is accompanied by changes in the method's purpose and usage. The new method includes additional logic for handling JFX thread confinement and sets up a dialog with specific content based on parameters, indicating functional changes beyond pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T01:14:33.935039",
      "diff_size": 11138,
      "diff_lines": 236
    },
    {
      "hash": "0bbf0862a29587d6ca4ac134ce03b9a390d5c771",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "graylog2-server",
      "analysis_timestamp": "2025-08-20T01:14:51.887610",
      "diff_size": 181856,
      "diff_lines": 4609
    },
    {
      "hash": "0bdbc2904e663f90142919ced411519bb2caeaa0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-20T01:15:21.207248",
      "diff_size": 78165,
      "diff_lines": 1914
    },
    {
      "hash": "0be03279bc7185161db9ed0a625c6ad53f126411",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T01:16:37.793605",
      "diff_size": 460996,
      "diff_lines": 11147
    },
    {
      "hash": "0befbc127d2cc8a91cca2aa833b4e6dc8cc0c63e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-20T01:16:47.078740",
      "diff_size": 21035,
      "diff_lines": 494
    },
    {
      "hash": "0bf11c47abcd35b68130d7a5b0e0dc85fb5e455e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "threetenbp",
      "analysis_timestamp": "2025-08-20T01:16:52.376729",
      "diff_size": 77676,
      "diff_lines": 1928
    },
    {
      "hash": "0bfbffc722592de3a90b3f04256847a2182800b2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include a method signature modification in ScrollbarWidget where 'this.pos' is now set using MathUtils.clamp, which introduces new functionality by ensuring the position stays within bounds. Additionally, TransactorSimple has an injected condition that alters behavior by only marking dirty when certain conditions are met and adding conditional logic around it. StatementParameterItemStackExact adds a null check to prevent potential errors, changing the method's parameter handling. MapWorld changes exception handling from IOException to Exception, which is a behavioral modification as it broadens error catching.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T01:17:00.867355",
      "diff_size": 3022,
      "diff_lines": 76
    },
    {
      "hash": "0c11ccb1f849c2758dcbdc3b5cba5e17ecf2c316",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'DeadLetter' and renames the existing 'IndexFailureWriterInitializer' to 'DeadLetterInitializer'. Additionally, it changes the method signature of IndexFailure.all from (Core, int page) to (Core, int limit, int offset), which alters the behavior by changing parameters. The failureQueue in Indexer is replaced with a deadLetterQueue that holds List<DeadLetter> instead of BulkItemResponse[], indicating a change in structure and functionality. The DeadLetterThread now processes items differently, creating DeadLetter objects for each failure response item before persisting them as PersistedDeadLetter instances. This includes new conditional logic to handle failures individually and changes the way data is stored and retrieved.",
      "llm_confidence": "high",
      "project_name": "graylog2-server",
      "analysis_timestamp": "2025-08-20T01:17:12.012325",
      "diff_size": 17864,
      "diff_lines": 430
    },
    {
      "hash": "0c3e38b782caf22717a3cc52e7b061de68c11263",
      "purity_classification": "FALSE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the diff primarily involve updating dependency versions and adding a developer entry. The method signatures, logic flow, and behavior remain unchanged as no new functionality or modifications to existing behavior are introduced. Only structural updates like version numbers and minor additions without altering execution paths occur.",
      "llm_confidence": "high",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-20T01:17:21.668942",
      "diff_size": 24798,
      "diff_lines": 624
    },
    {
      "hash": "0c444a75e79da8c157813a72d61f2b2f86e187ba",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T01:17:29.389610",
      "diff_size": 59988,
      "diff_lines": 1318
    },
    {
      "hash": "0c6924494f111dd0c8b4ae5ffa50cedcba142259",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-20T01:17:37.181393",
      "diff_size": 382206,
      "diff_lines": 8347
    },
    {
      "hash": "0c6bd7a604864d156d10675ab4360eccecbb9a47",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve replacing string placeholders with direct variable references in configuration and build files, which is a pure structural change. In the Java code, there was no modification to logic or behavior; only minor formatting adjustments were made (adding @SuppressWarnings annotation). The method signatures remain unchanged, and all functional aspects are preserved.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T01:17:45.537322",
      "diff_size": 9436,
      "diff_lines": 225
    },
    {
      "hash": "0c6d3459d7de84d7a17713b3265481768311b396",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-20T01:17:53.044695",
      "diff_size": 71118,
      "diff_lines": 1393
    },
    {
      "hash": "0c71ca2dd47d155621cd45bfc35a87d295a914b2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include modifications to method signatures and log messages, indicating functional adjustments. In IngestImageThread.java, the progress handle creation changed from 'img' to 'image id', which alters the string passed but maintains functionality due to context. However, in the exception logging within done(), the message now includes service name and image details, changing the output slightly for better clarity. Similarly, in IngestManager.java, log messages were updated with more specific information (e.g., 'Starting initial FsContent ingester' vs previous). These changes involve altering method parameters or return values indirectly by modifying strings in logs, which falls under behavioral modifications as they change how exceptions and completions are logged.",
      "llm_confidence": "medium",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T01:18:02.639482",
      "diff_size": 6567,
      "diff_lines": 129
    },
    {
      "hash": "0c7b2664ab95d68c0f8bddcdec165f770b528438",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T01:18:19.693431",
      "diff_size": 978057,
      "diff_lines": 21454
    },
    {
      "hash": "0c7eea225b7c04549e92c8c7729bf0e7a04aa5c7",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-20T01:18:31.692216",
      "diff_size": 32381,
      "diff_lines": 666
    },
    {
      "hash": "0c8696c2ebd52c7f2a92fa7b6b8d5d2005c19d1c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "platform_packages_apps_email",
      "analysis_timestamp": "2025-08-20T01:19:48.325539",
      "diff_size": 84043,
      "diff_lines": 1462
    },
    {
      "hash": "0c9a923fc567b2ee03f37895d422662ed40e54f9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'setupBuilder' replacing the old initialization logic, which includes conditional checks and modifications to state variables. The change from boolean flags to an object implementing IAreaProvider suggests a structural shift with functional implications due to altered data handling and potential impact on network updates. Additionally, there are changes in exception handling patterns (e.g., deleting lasers based on conditions) that cannot be purely attributed to renaming or simple reorganization.",
      "llm_confidence": "medium",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T01:20:20.122446",
      "diff_size": 13127,
      "diff_lines": 459
    },
    {
      "hash": "0cac7cba4881bd9be33a19cb3baa84eb1d59addf",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T01:20:29.995647",
      "diff_size": 313230,
      "diff_lines": 6049
    },
    {
      "hash": "0cad81aeb9ddaf5dad8b2ab9c6ff6955402c9310",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T01:20:45.720946",
      "diff_size": 4005374,
      "diff_lines": 91014
    },
    {
      "hash": "0cae318870385f0f5d9ac4cfc3dd7a7c076290b0",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "grails-core",
      "analysis_timestamp": "2025-08-20T01:22:02.440198",
      "diff_size": 35142,
      "diff_lines": 645
    },
    {
      "hash": "0cfa2b0c9ea625fd836ae4151926d1dc31665f97",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'getAsciiDocOptionsAndAttributes' which refactors the existing logic by extracting configuration and attribute handling into a separate method. This change involves restructuring code but also alters how options are processed, as it now iterates over option keys to set them explicitly. Additionally, there is a modification in default.properties where 'asciidoctor.attributes' and 'asciidoctor.option.safe=0' replace the old single line configuration for 'asciidoctor.options'. These changes represent functional adjustments by modifying how attributes and safe options are handled during parsing.",
      "llm_confidence": "medium",
      "project_name": "jbake",
      "analysis_timestamp": "2025-08-20T01:31:09.365177",
      "diff_size": 2828,
      "diff_lines": 73
    },
    {
      "hash": "0cfb3f6fa59addfd77e040a1824f9fe0513067ec",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T01:32:12.741667",
      "diff_size": 72963,
      "diff_lines": 1556
    },
    {
      "hash": "0cfd4434575ea136e56de2dfec09c3929b796a96",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-20T01:32:25.498860",
      "diff_size": 28494,
      "diff_lines": 569
    },
    {
      "hash": "0d03311afb88ab65e0e593087ec4cd12300a7225",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new feature for buffering GCM messages on Android devices, including conditional logic and method signature changes. It adds a new class 'MessageBuffer' with specific parameters and usage in the 'DistributedRelay' class, which is not purely structural but functional.",
      "llm_confidence": "high",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-20T01:32:35.108729",
      "diff_size": 16729,
      "diff_lines": 358
    },
    {
      "hash": "0d0610cf1df592382853791ca5f5219b030c5972",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a case-insensitive check for project existence in the rename functionality, which changes the behavior by allowing mixed-case renames to be blocked. This is a functional change as it alters how projects are renamed and checked for existence.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T01:32:43.284148",
      "diff_size": 6306,
      "diff_lines": 148
    },
    {
      "hash": "0d0ad0ab6407fca9ca22b10fb6edb96eaea97992",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the AsyncToSyncInvoker class by modifying the timeout handling to include TimeUnit.MILLISECONDS. This is a functional change because it alters how the get() method waits for results, potentially affecting behavior and error handling.",
      "llm_confidence": "high",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-20T01:32:49.403363",
      "diff_size": 8538,
      "diff_lines": 164
    },
    {
      "hash": "0d1a0de4418c04b468255be4d3cccb48c1e9daf7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "hydra",
      "analysis_timestamp": "2025-08-20T01:33:14.404817",
      "diff_size": 36485,
      "diff_lines": 742
    },
    {
      "hash": "0d1b4bffd1b75ffb9ecc96f90c4de137847de24c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-20T01:33:42.972125",
      "diff_size": 2185742,
      "diff_lines": 58065
    },
    {
      "hash": "0d1c54f534a3821f1d29205e612f4498ba910e77",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change from simple integer counters to AtomicInteger instances, which adds thread-safety features. This is a functional modification because the use of AtomicIntegers alters the behavior by allowing concurrent increments without explicit synchronization, potentially changing how location updates are handled in multi-threaded environments.",
      "llm_confidence": "medium",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-20T01:33:51.451496",
      "diff_size": 3526,
      "diff_lines": 81
    },
    {
      "hash": "0d2cab47c9ac5cafa790c0fda9539ba01bf815b5",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-20T01:34:00.092719",
      "diff_size": 1791564,
      "diff_lines": 39484
    },
    {
      "hash": "0d464cd25ffbb5734f96c3082f9cc35011de3667",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T01:34:17.046059",
      "diff_size": 788528,
      "diff_lines": 17865
    },
    {
      "hash": "0d66e9c6296837d6f473e8e3274d683111aea158",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a significant refactor by renaming classes and methods, but it also includes functional changes. The method signatures in BaseComponent.java and Component.java are changed from onAwake/onSleep to onObserved/onUnObserved, which alters the behavior of these methods. Additionally, the getDatatable() and getTransform() methods now return DatatableComponent or TransformComponent respectively, indicating a change in the interface's contract. The new TransformComponent class implements all the transformation-related logic (position, rotation, scale) that was previously handled by other classes, suggesting that this refactor includes both structural changes and functional modifications to how entity transformations are managed.",
      "llm_confidence": "medium",
      "project_name": "Spout",
      "analysis_timestamp": "2025-08-20T01:34:27.346351",
      "diff_size": 16430,
      "diff_lines": 569
    },
    {
      "hash": "0d776ca84056a3ec97219fd657489f84612dd439",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-20T01:34:37.881634",
      "diff_size": 29356,
      "diff_lines": 767
    },
    {
      "hash": "0d96b6a28a0288862d20edda0de8f2662fdf0ff5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit includes changes that alter the behavior of the code. In SystemScopeService.java, a constant is renamed from RESOURCE_SET_REGISTRATION to UMA_PROTECTION, which likely affects how scopes are checked elsewhere in the system. Additionally, multiple Backbone.js views (ClientFormView, WhiteListFormView, etc.) have their load methods modified to change when and how they fetch data, including conditional logic for client fetching based on presence of clientId or id. These changes involve restructuring with functional impacts due to altered conditions and data handling.",
      "llm_confidence": "medium",
      "project_name": "OpenID-Connect-Java-Spring-Server",
      "analysis_timestamp": "2025-08-20T01:34:48.447339",
      "diff_size": 18032,
      "diff_lines": 421
    },
    {
      "hash": "0d9c2d147261ee1430e67101387a700dec067bbc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-20T01:35:13.275761",
      "diff_size": 1754391,
      "diff_lines": 33518
    },
    {
      "hash": "0d9dcd466f966e151173c2a808a5cd250c864fef",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "graylog2-server",
      "analysis_timestamp": "2025-08-20T01:35:43.416050",
      "diff_size": 173538,
      "diff_lines": 3792
    },
    {
      "hash": "0db0b7403f7a79a6c16b0414f6eeb692e9e17e05",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class BtCommunicator and refactors existing classes to extend it. This includes changing method signatures (e.g., LegoNXTBtCommunicator now extends BtCommunicator, and the run() method is overridden). Additionally, there are changes in behavior: the containsLegoNXTBrick() method was renamed to containsBluetoothBrick(), which suggests a change from checking for NXT bricks specifically to Bluetooth-related bricks. Similarly, isLegoNXTSprite() becomes isBluetoothSprite(). These renames and structural changes imply functional modifications as the code now interacts with Bluetooth communication rather than just Lego NXT.",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T01:35:53.585341",
      "diff_size": 9159,
      "diff_lines": 264
    },
    {
      "hash": "0dbf09cc86a65e9ef6554b785602d2d94db2d12b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jackrabbit-oak",
      "analysis_timestamp": "2025-08-20T01:36:13.617060",
      "diff_size": 69221,
      "diff_lines": 1655
    },
    {
      "hash": "0dd50a6cdc81ec9ff1367238876d476affcf60e2",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T01:36:51.287892",
      "diff_size": 568785,
      "diff_lines": 12529
    },
    {
      "hash": "0dd6d32f1fdcdd5d125e380598a13259ac77af2e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in the diff include modifications to method signatures, addition of new parameters and conditional logic. Specifically, the `getSource` method in BasicSoundPool now takes an additional parameter for priority, which affects its behavior by allowing different priorities when assigning audio sources. This change introduces functional differences as it alters how sound sources are selected based on priority levels. Additionally, the `play` methods across various classes (AudioManager, Character) have been updated to include a priority parameter, changing their functionality and indicating that this commit contains both structural reorganization and functional changes.",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-20T01:37:02.341676",
      "diff_size": 18592,
      "diff_lines": 479
    },
    {
      "hash": "0dd89e51b7ff388ecb550dccab3c90d8dcae882b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new enum 'MissingSourceBehavior' and refactors the behavior of data source handling. The method signatures for DataProducer interfaces are modified to include a Console parameter, which changes how exceptions and logs are handled. This addition allows for configurable missing source behavior (ignore, warn, fail) instead of just a boolean flag, altering the functional behavior by introducing more nuanced error handling.",
      "llm_confidence": "high",
      "project_name": "jdeb",
      "analysis_timestamp": "2025-08-20T01:37:12.665128",
      "diff_size": 26675,
      "diff_lines": 612
    },
    {
      "hash": "0dea65de78684176df63798a675e23e72f2defdc",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T01:37:20.959806",
      "diff_size": 342381,
      "diff_lines": 8371
    },
    {
      "hash": "0dfe851d7410ba9a3959fe66f971d140a032c748",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-20T01:37:57.030463",
      "diff_size": 45205,
      "diff_lines": 981
    },
    {
      "hash": "0dffe3afd7a2fdfb394573aa0d8d06dd90e9fe12",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "platform_packages_apps_email",
      "analysis_timestamp": "2025-08-20T01:39:13.711173",
      "diff_size": 41279,
      "diff_lines": 845
    },
    {
      "hash": "0e24a66f0776c2425fa748a7ec7a367638820d46",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'LexerATNConfig' which extends 'ATNConfig'. This includes changes to method signatures (e.g., constructors now take specific parameters) and modifications in the logic of methods like closure() that now handle 'LexerATNConfig' instead of 'ATNConfig', indicating functional changes. Additionally, there are behavioral modifications such as altering how lexer action indices are captured and handled within these new configurations.",
      "llm_confidence": "high",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-20T01:43:12.138212",
      "diff_size": 8014,
      "diff_lines": 202
    },
    {
      "hash": "0e262b9398778e5e004e6ac54e26b7a5048ab520",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T01:43:19.384986",
      "diff_size": 66055,
      "diff_lines": 1401
    },
    {
      "hash": "0e284787294221982d21c17b27c0a4e1ae0971e7",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T01:43:42.559941",
      "diff_size": 3354061,
      "diff_lines": 76905
    },
    {
      "hash": "0e3294d35ec2d8b446d5dc20c88c082d30d276df",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-20T01:43:51.778831",
      "diff_size": 11866,
      "diff_lines": 362
    },
    {
      "hash": "0e362e9762a8b508e8a022512ad6a2ab38237002",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-20T01:44:02.837456",
      "diff_size": 78572,
      "diff_lines": 1605
    },
    {
      "hash": "0e3a9a55e484707addf32f73d18014df61c8d8f9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T01:44:36.576434",
      "diff_size": 506642,
      "diff_lines": 10398
    },
    {
      "hash": "0ec12b0db8a11a1cf834ed9cb607dd6a4cf8dd61",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "androidannotations",
      "analysis_timestamp": "2025-08-20T01:55:01.208271",
      "diff_size": 21995,
      "diff_lines": 572
    },
    {
      "hash": "0ec82fdd9d5e369f001674c7e5fe38451c354f98",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T01:55:07.546944",
      "diff_size": 19964,
      "diff_lines": 522
    },
    {
      "hash": "0f23f8c498986fe573607cc64d680660b238ec9f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fabric8",
      "analysis_timestamp": "2025-08-20T01:56:22.022247",
      "diff_size": 128150,
      "diff_lines": 2268
    },
    {
      "hash": "0f2b7db942b713315eee796221d3b68776efec0d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-20T01:56:33.652028",
      "diff_size": 17320,
      "diff_lines": 404
    },
    {
      "hash": "0f2d7d0b9540efa3ea3dfe4f8270c3635afdc63c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T01:56:43.571982",
      "diff_size": 1335716,
      "diff_lines": 30665
    },
    {
      "hash": "0f43e44ca3583f3a511d6063457aaaecc420e903",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-20T01:57:20.564676",
      "diff_size": 28312,
      "diff_lines": 623
    },
    {
      "hash": "0f4da4ddf025c54287deb1762f84429ac919f7f1",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jbake",
      "analysis_timestamp": "2025-08-20T01:58:37.364589",
      "diff_size": 277916,
      "diff_lines": 7018
    },
    {
      "hash": "0f4e58569be87a3f1bf963b6b0f6c9b04641b84e",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the diff primarily involve renaming and restructuring without altering functionality. The form file shows a simple change from 'true' to 'false' for one setting, which is likely just a configuration adjustment. In the Java code, there are renames of components (e.g., 'browseVisualizeTabPane' becomes 'browseVisualizeTabPane', but note that this appears unchanged in both versions; however, other elements like 'Font' and 'Dimension' are used interchangeably without functional impact. The GroupLayout replacement for javax.swing.GroupLayout is a standard JavaBeans practice and does not change behavior.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T01:58:52.086394",
      "diff_size": 7973,
      "diff_lines": 138
    },
    {
      "hash": "0f502ef2705bdfeae2afe08f8ed0ec4a7eb8a027",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality for asynchronous reindexing of property indexes, including JMX monitoring capabilities. This involves creating new classes and interfaces (PropertyIndexAsyncReindexMBean and PropertyIndexAsyncReindex) that implement a new mechanism for tracking index status via CompositeData objects. The changes to AsyncIndexUpdate also modify the way it interacts with these components by changing method signatures and adding new conditional logic in the reindexing process.",
      "llm_confidence": "high",
      "project_name": "jackrabbit-oak",
      "analysis_timestamp": "2025-08-20T01:59:02.769937",
      "diff_size": 27351,
      "diff_lines": 589
    },
    {
      "hash": "0f60f5eba5bfff80c34df7db0a42d9a457dbbc35",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-20T01:59:08.582995",
      "diff_size": 427920,
      "diff_lines": 10662
    },
    {
      "hash": "0f672972fe10df997fed6e1ff1d831933717c258",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T01:59:52.462696",
      "diff_size": 83002,
      "diff_lines": 1602
    },
    {
      "hash": "0f6b089d26bc7cd2749da6ef512a88e66dbed44b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a version bump from 7.0.6 to 7.0.8 in build.gradle and updates the changelog accordingly, indicating functional changes. Additionally, multiple pipe classes (PipeFluidsIron, PipeFluidsWood, PipeItemsIron, PipeItemsWood) are modified by changing method signatures from onNeighborChange(ForgeDirection direction) to onNeighborBlockChange(int blockId), which alters behavior due to parameter differences and potential logic changes in the surrounding code.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T02:02:34.836187",
      "diff_size": 5484,
      "diff_lines": 146
    },
    {
      "hash": "0f79427758c58cf9768898115c1da28fd71e3550",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T02:02:53.790044",
      "diff_size": 1187157,
      "diff_lines": 26226
    },
    {
      "hash": "0f87deabb451a0d6bff76d8d597166bf64799dc5",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-20T02:03:15.721371",
      "diff_size": 699100,
      "diff_lines": 20869
    },
    {
      "hash": "0f881bdd545f4ba7f3292b98e9edd7513ef1cb08",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include the addition of new methods and interfaces for calculating bucketed PV01, which is a functional change. The method signatures have been modified to return different types (BucketedCurveSensitivities vs ReferenceAmount<Pair<String, Currency>>), indicating behavioral modifications. Additionally, there are new conditional structures in the test cases that specifically check for these new methods and their results.",
      "llm_confidence": "high",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-20T02:03:24.270075",
      "diff_size": 24614,
      "diff_lines": 499
    },
    {
      "hash": "0f969af9479095f21f482eb6132b6262910b3a5f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-20T02:03:32.539767",
      "diff_size": 11855,
      "diff_lines": 278
    },
    {
      "hash": "0facbe45924e335f27d10d6492581d924c447687",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OpenTripPlanner",
      "analysis_timestamp": "2025-08-20T02:03:44.388999",
      "diff_size": 374431,
      "diff_lines": 7352
    },
    {
      "hash": "0fd325e2102e171d2980bbb8c9b5935e3dffd0d5",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "robotium",
      "analysis_timestamp": "2025-08-20T02:03:51.950184",
      "diff_size": 20277,
      "diff_lines": 614
    },
    {
      "hash": "0fd38a939de69f14e867c26a4053d9856733b735",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-20T02:04:02.965177",
      "diff_size": 309476,
      "diff_lines": 6938
    },
    {
      "hash": "0ff7f9969a3f3315eb2fb7e115d72d37dda05157",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces fixes for specific issues (CASSANDRA-6733) related to handling super columns in SSTables. It adds new methods and modifies existing ones, including 'indexFor', 'comparatorForIndex', and 'isIndexEntryBeforeSliceStart' which change the logic of index comparisons. These changes alter how column names are compared with index blocks when reading from SSTables, particularly for older versions (1.2) that support super columns. This includes modifications to method signatures and return values based on new conditions, indicating functional behavior changes.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T02:04:12.522971",
      "diff_size": 6452,
      "diff_lines": 123
    },
    {
      "hash": "0ff83d6bbfeb6318a726cbab94451c44c1810030",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-20T02:04:20.992282",
      "diff_size": 45247,
      "diff_lines": 1205
    },
    {
      "hash": "0ff999f0b957185aa6cc6f7e095c29016298c2f8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-20T02:04:34.344423",
      "diff_size": 202855,
      "diff_lines": 4947
    },
    {
      "hash": "10300dd2256f2be016f57a8289dbe70d9d1b91e4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'getSize' in AttachmentsHelper.java, which is used to display file size information in the attachment action dialog. This adds functional behavior by including file size details that were not present before, modifying the user experience and introducing conditional logic based on the helper's implementation.",
      "llm_confidence": "high",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-20T02:08:32.181068",
      "diff_size": 4397,
      "diff_lines": 100
    },
    {
      "hash": "105671692789ff42bf1ba58ea0422e2863d1fe7e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The diff shows multiple changes that alter the behavior of the code. In DoxiaMojo.java, there are modifications to method signatures and logic flow. Specifically, the 'getSiteDescriptor' method now scans sub-directories instead of just a given directory, changing its functionality from case-insensitive to case-sensitive duplicate detection (line 1063). Also, the iteration over report plugins has been modified with additional parameters and conditional checks that affect how reports are processed. These changes indicate functional modifications rather than pure structural refactoring.",
      "llm_confidence": "medium",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-20T02:08:38.613967",
      "diff_size": 6962,
      "diff_lines": 178
    },
    {
      "hash": "106405b1fac1604d13724eb3cac1763dfda417f3",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'hasInventoryAtPosition' in TileChute.java, replacing the existing logic with a more streamlined approach using IItemTransactor. This change alters the way inventory checks are performed and includes conditional behavior based on transactor availability. Additionally, the code movement from BCFactoryRecipes.java to BlockChute.java involves restructuring but adds new functionality through the use of EnumFacing and directional handling.",
      "llm_confidence": "medium",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T02:08:47.288179",
      "diff_size": 13451,
      "diff_lines": 312
    },
    {
      "hash": "106ab2393b354201952c40d339cabf242d78e26c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a Logger instance and replaces static logger references with it, which is a structural change. However, there are multiple changes to the method signatures: generateVideoIcon now returns BufferedImage instead of Image, and generateAndSaveIcon uses BufferedImage in its write operation. These modifications alter the return type and internal handling, indicating functional changes beyond pure refactoring.",
      "llm_confidence": "medium",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T02:08:55.342581",
      "diff_size": 8543,
      "diff_lines": 161
    },
    {
      "hash": "1072b3136d14dc6a36cfb52fc23e5f48bd1bae00",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-20T02:09:10.752144",
      "diff_size": 44727,
      "diff_lines": 1043
    },
    {
      "hash": "10777f2cc8d0ab51fd760427a6f11a1d41aee596",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'maybeStopNonlocalSession' in the Tracing class, which handles stopping sessions for non-local nodes. This adds conditional logic based on whether the session is locally owned or not, altering the behavior of tracing by introducing ownership checks and potentially changing how trace sessions are managed across different nodes.",
      "llm_confidence": "medium",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T02:10:35.869561",
      "diff_size": 6385,
      "diff_lines": 150
    },
    {
      "hash": "107d2a648e30009316929f188e7212328d39868c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T02:10:50.865030",
      "diff_size": 257941,
      "diff_lines": 5724
    },
    {
      "hash": "10825f25a10acba8024cd10a469d705a1e5222f2",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-20T02:11:25.880235",
      "diff_size": 269566,
      "diff_lines": 4343
    },
    {
      "hash": "108d48a0d7499fd7cc0e42acf09a081dcc6a5663",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T02:12:42.446744",
      "diff_size": 36354,
      "diff_lines": 792
    },
    {
      "hash": "108f2c4b23aa0fd4fc8343a446a5de46b7ac87dc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces annotations and access control restrictions, which modify the behavior by limiting external use of certain methods. This is a functional change as it alters how the code can be used externally.",
      "llm_confidence": "high",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-20T02:12:49.368620",
      "diff_size": 2354,
      "diff_lines": 57
    },
    {
      "hash": "10bca19ce11fa41840c2b60c3a3c70884719af61",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-20T02:12:59.356741",
      "diff_size": 23880,
      "diff_lines": 486
    },
    {
      "hash": "10d3062fc63acc31a344775b5f31789dc6a0f3f3",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "MinecraftForge",
      "analysis_timestamp": "2025-08-20T02:13:22.242027",
      "diff_size": 56146,
      "diff_lines": 1205
    },
    {
      "hash": "10d561380d20748b5d7e4579d1649d0e9e173a48",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-20T02:13:48.469442",
      "diff_size": 120434,
      "diff_lines": 3043
    },
    {
      "hash": "10debcbd2e39cccd9530f508cd514e6c3debdf63",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-20T02:15:05.345539",
      "diff_size": 443442,
      "diff_lines": 8688
    },
    {
      "hash": "113ba56cd5ced2168926400ee57bcc61b0d2117d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'matchArg' and refactors the existing 'isOption' method, which now calls this new method. Additionally, it modifies the usage of optionPrefixes in several places, including updating the Parameters class default to use DEFAULT_OPTION_PREFIXES without explicit setting. There are changes that affect behavior: the condition for accepting unknown options is altered by removing a direct check and relying on the loop over keys; also, the main parameter exception message was updated from 'Was passed main parameter ...' to one mentioning the arg class.",
      "llm_confidence": "medium",
      "project_name": "jcommander",
      "analysis_timestamp": "2025-08-20T02:17:48.043718",
      "diff_size": 14355,
      "diff_lines": 404
    },
    {
      "hash": "1144acd930ecc3c30456302487a128b64a4c3e29",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in WorldPropertyIsOre.java introduce a new List variable 'toCheck' and modify the logic to handle tile entities, which alters the behavior by potentially including more drops from blocks with tile entities. This constitutes a functional change as it expands the scope of what is checked for ores beyond simple stack creation.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T02:17:55.701539",
      "diff_size": 2346,
      "diff_lines": 57
    },
    {
      "hash": "1147ee3a81e483b26b4b8c5d7cc7e55fcc2baeec",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T02:18:10.304591",
      "diff_size": 118001,
      "diff_lines": 2450
    },
    {
      "hash": "11496039fb18bb45407246602e31740c56d28157",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T02:18:42.910656",
      "diff_size": 2173532,
      "diff_lines": 17919
    },
    {
      "hash": "11571fa092616d4cb75ee68df23709547b68a4fd",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-20T02:18:53.475109",
      "diff_size": 22349,
      "diff_lines": 658
    },
    {
      "hash": "116b8ccd1f35c8477052cb55c343fdb34aa4641d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Rajawali",
      "analysis_timestamp": "2025-08-20T02:19:16.976428",
      "diff_size": 1214547,
      "diff_lines": 30100
    },
    {
      "hash": "1173b0fb0b416e104fa49d4eb123039a4cf1629b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new event classes (RobotEvent) and modifies existing ones, including the addition of conditional logic for cancelable events. In several places, such as EntityRobot and ItemRobot, code now posts these new RobotEvents which can alter behavior by allowing cancellation during interactions or placements. This represents a functional change where previously direct method calls are replaced with event-based system that may affect program flow.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T02:19:26.638052",
      "diff_size": 15633,
      "diff_lines": 396
    },
    {
      "hash": "1182b26ea88577ffb7f9dbad8750a8b1e3c3d5b7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve replacing Writer with OutputStream and modifying the setOutputWriter method to setOutputStream, which alters the interface's behavior. Additionally, new conditional logic is introduced in the Echo plugin for handling ANSI color codes, indicating functional modifications. The ForgePlugin adds a new command 'ansi-test' that was not present before, demonstrating added functionality during restructuring.",
      "llm_confidence": "high",
      "project_name": "core",
      "analysis_timestamp": "2025-08-20T02:19:32.839393",
      "diff_size": 14906,
      "diff_lines": 404
    },
    {
      "hash": "11910c6c9206407c2de60f38566120bddde79eba",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T02:19:58.675188",
      "diff_size": 1619828,
      "diff_lines": 34413
    },
    {
      "hash": "11a51552177a20dac541acc58f02a946f1e6a7f6",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "geoserver",
      "analysis_timestamp": "2025-08-20T02:22:08.307320",
      "diff_size": 30079,
      "diff_lines": 666
    },
    {
      "hash": "11e39f16129c1f1d88e865e3d528bbaac96cf996",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T02:27:23.634029",
      "diff_size": 21720,
      "diff_lines": 596
    },
    {
      "hash": "11f13221b5508c399d45b50a8c197c5bd9c8521d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T02:27:36.975211",
      "diff_size": 79957,
      "diff_lines": 2072
    },
    {
      "hash": "11f26a5ae5af0ebce6e1abc4ae6247d6c3975488",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OpenTripPlanner",
      "analysis_timestamp": "2025-08-20T02:27:46.316344",
      "diff_size": 127347,
      "diff_lines": 2774
    },
    {
      "hash": "11fde4b6d973c30c89debde060a892491e3698e8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functional methods (startIMUCalibration and sendIMUCalibrationAck) in DroneApi, which are not present before. These methods add new functionality for IMU calibration by checking API validity and handling RemoteExceptions differently than the old dpApi calls. In FragmentSetupIMU, the code now uses api.getState() to get drone state instead of calling getDPDrone(), indicating a change in how state is accessed. The Event class updates its constants from EVENT_CALIBRATION_TIMEOUT to EVENT_CALIBRATION_IMU_TIMEOUT and adds a new constant for IMU timeout events. This includes behavioral changes such as adding conditional logic around the calibration process, modifying method signatures (e.g., startIMUCalibration() now exists), and changing how state is checked.",
      "llm_confidence": "high",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-20T02:31:13.403925",
      "diff_size": 5630,
      "diff_lines": 130
    },
    {
      "hash": "121ade24218cfdccbd5dd899952b85843f81e9cb",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OpenTripPlanner",
      "analysis_timestamp": "2025-08-20T02:32:32.689551",
      "diff_size": 362177,
      "diff_lines": 9215
    },
    {
      "hash": "1253fa07d20562ea3aef4d2f4d367d0e80e338d1",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method signature for RpcManager's invokeRemotelyInFuture, adding an extra parameter and changing the response mode logic. This is a functional change as it alters how commands are executed remotely by incorporating additional parameters like timeout and ignoreLeavers, which affect behavior.",
      "llm_confidence": "high",
      "project_name": "infinispan",
      "analysis_timestamp": "2025-08-20T02:39:07.196052",
      "diff_size": 14765,
      "diff_lines": 296
    },
    {
      "hash": "125b4642db63a37c560dec4615ea04662c6e45ef",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T02:39:16.909484",
      "diff_size": 2203570,
      "diff_lines": 50819
    },
    {
      "hash": "1266fec349e76b964b522d11460f1df4adadcb48",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T02:40:33.625008",
      "diff_size": 2551397,
      "diff_lines": 52308
    },
    {
      "hash": "1274e819fe1e4cad4a6da18ab87af80e122e88ce",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces several changes that include method signature modifications, parameter additions, and logic alterations. For instance, in ATNConfigSet.java, the 'addAll' method now takes a Collection<? extends ATNConfig> which is a change from previously accepting an array or list without type constraints. Similarly, Array2DHashSet.java's toString method was updated to handle Object[] differently by using Arrays.asList and then filtering nulls, altering the internal logic for string representation. The tool/pom.xml updates version numbers but this alone doesn't classify as pure refactoring due to other functional changes elsewhere in the diff. There are also multiple instances of adding new methods (like overrides) with no clear structural change justification.",
      "llm_confidence": "medium",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-20T02:40:44.663684",
      "diff_size": 15239,
      "diff_lines": 355
    },
    {
      "hash": "127c02856d297ee9d2584227549b64f48414f6a2",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T02:40:59.424684",
      "diff_size": 186178,
      "diff_lines": 3775
    },
    {
      "hash": "127cfff26bbed97d2ae9cb3b0a65824d130ec78b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T02:41:12.289614",
      "diff_size": 665999,
      "diff_lines": 13636
    },
    {
      "hash": "12b11be88f338e519227143ef16c4dbc917be280",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T02:51:47.790362",
      "diff_size": 1362245,
      "diff_lines": 33647
    },
    {
      "hash": "12b7f63f0cd9fcfe2d0c101ad22b42107a728cb6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-20T02:52:16.775938",
      "diff_size": 3334996,
      "diff_lines": 73476
    },
    {
      "hash": "12c1d41fa5ea8a01a63b7da9e2ceb61fd9bce603",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The diff introduces a new conditional structure and changes the behavior of handling empty indices by adding dummy range entries. Specifically, it replaces an existing try-catch block with additional logging and logic to handle empty indices differently based on whether they are the current deflector target or not. This includes inserting a dummy index range when the index is empty but matches the deflector target, which alters the functional behavior.",
      "llm_confidence": "high",
      "project_name": "graylog2-server",
      "analysis_timestamp": "2025-08-20T02:52:24.653283",
      "diff_size": 2045,
      "diff_lines": 31
    },
    {
      "hash": "12cb51373e6692b66bc782ea4306822fb61d8913",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T02:52:36.362203",
      "diff_size": 319175,
      "diff_lines": 9835
    },
    {
      "hash": "12daee40f2a27e645068c9cb4925377cd08ccebe",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T02:52:49.713372",
      "diff_size": 856012,
      "diff_lines": 19133
    },
    {
      "hash": "12e07dbeb72f1ab2e883b2c316fe1db1a78e85c3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve renaming variables and methods from 'sage' to 'stage', but there are functional modifications. In CanvasDraw, the variable name change affects how coordinates are adjusted in processOnTouch method by using stage instead of sage, which is a different object reference. This introduces potential behavioral differences if the new instance behaves differently or has different state.",
      "llm_confidence": "medium",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T02:52:56.772688",
      "diff_size": 2073,
      "diff_lines": 46
    },
    {
      "hash": "12fca9ad37208454ca379753e168af13f896f2f7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve renaming a configuration parameter from 'message_cache_spool_dir' to 'journalDirectory', which alters the method signature and behavior. In KafkaJournal, the constructor now uses @Named('journalDirectory') instead of @Named('spoolDirectory'), and the LogManager initialization references this new name. Additionally, log messages are updated to reflect the change in directory name, indicating a functional shift from using spool directories to journal directories.",
      "llm_confidence": "high",
      "project_name": "graylog2-server",
      "analysis_timestamp": "2025-08-20T02:53:02.709042",
      "diff_size": 3373,
      "diff_lines": 67
    },
    {
      "hash": "130071246791dd45cc0982b4cc882491339e8b50",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve replacing static log calls with a direct reference to the 'log' variable, which is a simple refactoring for consistency and code cleanliness. There are no functional changes as all logging statements maintain identical behavior and output.",
      "llm_confidence": "high",
      "project_name": "hornetq",
      "analysis_timestamp": "2025-08-20T02:53:08.370817",
      "diff_size": 8480,
      "diff_lines": 192
    },
    {
      "hash": "13085fd5d9a940e7562fbf45ecc4cb8423dba93a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "easy-batch",
      "analysis_timestamp": "2025-08-20T02:53:23.555580",
      "diff_size": 101628,
      "diff_lines": 2448
    },
    {
      "hash": "13148e7969086de5ab02e0068a3aebe57249cdc3",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in the diff include modifications to method signatures, addition of new conditional logic (if (!show) return false), and alterations to behavior by changing how alpha values are set. Specifically, Costume.java introduces a new field 'alphaValueLock' and modifies the draw method condition from checking only 'this.region != null' to also verifying 'this.show'. Additionally, several brick classes now call methods like 'setAlphaValueBy' or directly modify fields (e.g., HideBrick changes 'show' instead of alphaValue). These indicate functional changes beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T02:53:33.165926",
      "diff_size": 6345,
      "diff_lines": 165
    },
    {
      "hash": "13176b6d8b72d508b431bac0bee7c28d9c5ef1ba",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method rename from getPublishedPosts to getPublishedContent in Filter.java, which is accompanied by changes in the variable names and logic. The new method name suggests broader functionality, but more importantly, the sitemap rendering process now uses this renamed method for both pages and posts, indicating that the refactoring extends beyond pure structural change. Additionally, the default.properties file adds a 'template.sitemap.file' property and modifies how sitemap files are handled, including adding a new template file (sitemap.ftl) which requires changes to the code structure.",
      "llm_confidence": "high",
      "project_name": "jbake",
      "analysis_timestamp": "2025-08-20T02:53:39.976984",
      "diff_size": 9572,
      "diff_lines": 218
    },
    {
      "hash": "1317aafa2ff66fea92bfc086cf60c616a0b23bce",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The commit renames the method 'getSigningKeys' to 'getSigningKeyFactory' in Account.java, which is a simple name change without altering functionality. The Key.java file removes an unnecessary call to setRequestAccountSid during initialization, preserving behavior as it was redundant and not affecting logic. Test changes involve removing a test case from KeyTest.java that no longer applies due to the method rename, but this does not introduce new functional behavior or modify existing one. JSON resource files show minor formatting changes without any functional impact.",
      "llm_confidence": "high",
      "project_name": "twilio-java",
      "analysis_timestamp": "2025-08-20T02:53:45.644943",
      "diff_size": 2988,
      "diff_lines": 66
    },
    {
      "hash": "1332cf6a48151d6b7f48681c5e02961b01a5c55c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "androidannotations",
      "analysis_timestamp": "2025-08-20T02:53:54.700287",
      "diff_size": 38666,
      "diff_lines": 865
    },
    {
      "hash": "133acbb5910a47767adb6bcd198d5671fe1af611",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T02:54:24.719670",
      "diff_size": 543753,
      "diff_lines": 12147
    },
    {
      "hash": "13489db0459fbcb785c234de05b18f27b230ce7f",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in this commit primarily involve structural refactoring with minimal functional impact. The new file 'ItemCustomCrop.java' introduces a complete class structure for handling crop items, including an enum definition and method overrides that maintain the same functionality as before. In contrast, the existing 'ItemCustomDye.java' shows parameter name changes from 'par1' to 'meta' in two methods (getIconFromDamage and getUnlocalizedName), which are simple renames without altering behavior or adding new logic. The code movement between these files does not introduce any behavioral modifications; all method signatures, return values, and exception handling remain consistent with their original purposes.",
      "llm_confidence": "high",
      "project_name": "ExtrabiomesXL",
      "analysis_timestamp": "2025-08-20T02:54:34.187634",
      "diff_size": 4829,
      "diff_lines": 154
    },
    {
      "hash": "1348ebcff1fa123c13e8031e1c82bd81ef115bd8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T02:54:42.928609",
      "diff_size": 547348,
      "diff_lines": 12283
    },
    {
      "hash": "134f8471c05724c312085ce5b8eae2aec8cb8a52",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-20T02:54:49.989213",
      "diff_size": 20887,
      "diff_lines": 442
    },
    {
      "hash": "136653a6445677a323a9f98f1f7e45526802cb6b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jna",
      "analysis_timestamp": "2025-08-20T02:55:12.532938",
      "diff_size": 10202643,
      "diff_lines": 295946
    },
    {
      "hash": "136dbd1e6ba4fccbca4c550d2548224bc723bf91",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "uaa",
      "analysis_timestamp": "2025-08-20T02:55:24.705256",
      "diff_size": 124141,
      "diff_lines": 2266
    },
    {
      "hash": "136f93d38c0e877a288664c68fecdf517ec5baa5",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The commit changes method names and adds TODO comments, but the functionality remains unchanged. The new methods 'addContentHash' and existing methods like 'databaseFile()' and 'indexFile()' still operate on a single database path as indicated by their code usage.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T02:55:31.737128",
      "diff_size": 1815,
      "diff_lines": 40
    },
    {
      "hash": "137607b14c004d071e37247eeaf8ec070dfbe873",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-20T02:55:44.056825",
      "diff_size": 109367,
      "diff_lines": 3242
    },
    {
      "hash": "1377a8822b42e067d4bdc7dcbf2bee40ceeba6dd",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the diff primarily involve renaming and adding comments without altering functionality. In Engine.java, a comment is added indicating TODO but no code change occurs. WakeLockOptions.java introduces new enum constants with similar behavior to existing ones, preserving semantics through simple renames (e.g., SCREEN_BRIGHT becomes BRIGHT). ScreenCapture.java changes variable name from pScreenCaptureCallback to pScreencaptureCallback without affecting the logic or inputs/outputs.",
      "llm_confidence": "high",
      "project_name": "AndEngine",
      "analysis_timestamp": "2025-08-20T02:55:52.828635",
      "diff_size": 3492,
      "diff_lines": 58
    },
    {
      "hash": "1381fe4b46138cf17690410458bfe201ccb199fe",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-20T02:56:00.852362",
      "diff_size": 133077,
      "diff_lines": 2905
    },
    {
      "hash": "138569b079b3d17b1020a24463adabecd903b79f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T02:56:25.578977",
      "diff_size": 472027,
      "diff_lines": 9902
    },
    {
      "hash": "1385b5e267e6d27ead3dea3bb16de14433208f42",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the method signature of getPoiAdditionalCollapsableView by adding new parameters and modifying its logic, which alters the behavior. Specifically, it adds conditional handling for different types of POI (additional vs standard) and changes how filters are updated, indicating functional modifications rather than pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-20T02:56:34.351879",
      "diff_size": 9745,
      "diff_lines": 197
    },
    {
      "hash": "138af90fac2b7b2465e8df5f2f8246b248dbe092",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-20T02:56:44.335167",
      "diff_size": 278929,
      "diff_lines": 6039
    },
    {
      "hash": "138fc8c9073f0efd7b334f8aaf48cf36248d8d4f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method 'computeRequired' that adds new functionality for computing required items from entities, which is not present in the old code. This includes handling of JsonRule changes and extraction logic based on entity rules.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T02:56:50.495632",
      "diff_size": 33668,
      "diff_lines": 685
    },
    {
      "hash": "1390561167132148b810131f6d393434eb521e0f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-20T02:57:03.737395",
      "diff_size": 59277,
      "diff_lines": 1354
    },
    {
      "hash": "13910dc40077d5d0dadb541c043047f1b7a37be2",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T02:58:20.451090",
      "diff_size": 2588245,
      "diff_lines": 57136
    },
    {
      "hash": "13abbe0db787b8e6acd3b14b5f7a45e0e58d8cbb",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in the diff include adding new methods to waypoint for getting and setting parameters, which adds functionality by exposing internal fields. Additionally, MissionReader has been modified to set more properties on waypoints (like number, frame, cmd) during parsing, changing how data is read and stored. In MissionWriter, a new method writeHomeLine was added, and the format of writing waypoint lines changed significantly to include param1-4 and autocontinue values directly from the waypoint object, altering the output structure and adding conditional logic implicitly for formatting.",
      "llm_confidence": "high",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-20T03:01:02.613770",
      "diff_size": 4173,
      "diff_lines": 112
    },
    {
      "hash": "13acea548ba3acced884e8a5f0f4a9ccda457803",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T03:01:13.583657",
      "diff_size": 135333,
      "diff_lines": 2246
    },
    {
      "hash": "13ad8aaaeb07bcdb55cf209f55e0d0ffd2d6829d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T03:01:25.951515",
      "diff_size": 44504,
      "diff_lines": 1003
    },
    {
      "hash": "13b6762214bdb99df2846ad5dfa9c63ec7d14048",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T03:02:42.842632",
      "diff_size": 1052377,
      "diff_lines": 23946
    },
    {
      "hash": "13ddecba0e4d7546591b9d93479dc7e58895d2ac",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the logic of the getProperties method by modifying how the group parameter is handled. Previously, it used the group to fetch config files directly and also checked if the group matched the application key for a different retrieval path. Now, it uses the same namespace variable (derived from the key) throughout the code, which changes the behavior because the condition checking for an empty group now refers to 'apolloNamespace' instead of the original logic. This alteration in conditional checks indicates a functional change.",
      "llm_confidence": "high",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-20T03:06:42.245456",
      "diff_size": 3105,
      "diff_lines": 45
    },
    {
      "hash": "13e1035e388a2e1b53d409f46e76c45d56efbd8b",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve updating copyright years and renaming a variable from 'numVisibleChildren' to 'count'. The method signature for updateDisplayName() remains unchanged, only the parameter name is altered. There are no functional changes detected as the logic within the methods stays identical: both conditions (hiding known files and hiding slack files) are preserved with the same conditional checks.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T03:06:47.482225",
      "diff_size": 4185,
      "diff_lines": 90
    },
    {
      "hash": "13eaa8128c1858abc2b068025230532aa5617f95",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change from 'packPy' to 'packPyd', and similarly renames several methods by changing their base names (e.g., extractFromPy -> extractFromPyd, edFromPy -> edFromPyd). This is more than simple renaming as the method signatures now use different parameter types. Additionally, in the of() method for LocalDate, there's a change from using MonthOfYear and its value to directly passing an integer month value, which alters how the date is constructed (now using packPemd with integers instead of objects). These changes indicate functional modifications rather than pure structural ones.",
      "llm_confidence": "high",
      "project_name": "threetenbp",
      "analysis_timestamp": "2025-08-20T03:06:54.020691",
      "diff_size": 8626,
      "diff_lines": 156
    },
    {
      "hash": "13f1a1741c712aca900d4d64cfc36b6e4fe283d9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the variable name from 'userId' to 'sub' across multiple classes, which alters method signatures and return values. This is not purely structural as it changes how user information is accessed (e.g., getSub() instead of getUserId()), potentially affecting behavior where code relies on these methods for different purposes.",
      "llm_confidence": "medium",
      "project_name": "OpenID-Connect-Java-Spring-Server",
      "analysis_timestamp": "2025-08-20T03:06:59.501264",
      "diff_size": 4699,
      "diff_lines": 96
    },
    {
      "hash": "13fe1d602edf81c607ac548a2677203576a5be3a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "restfb",
      "analysis_timestamp": "2025-08-20T03:07:19.937881",
      "diff_size": 25591,
      "diff_lines": 653
    },
    {
      "hash": "14003341e38f9da8df9a9ab719ff8c3fbe19d988",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T03:07:28.612636",
      "diff_size": 171522,
      "diff_lines": 4439
    },
    {
      "hash": "140f14aab55024a6e3134830d599dfc886bd1f1e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T03:08:45.283014",
      "diff_size": 313973,
      "diff_lines": 8317
    },
    {
      "hash": "14372f25151df83788e6fe2144d84ceac2304c39",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'Array2DHashSet' which implements Set<T> and provides hash-based set operations. This is not pure structural refactoring because it adds entirely new functionality (a custom hash set implementation) that wasn't present before, including methods for hashing, equality checking, iteration, and array manipulation. The changes to ATNConfigSet involve replacing a field with a new class instance and modifying the equals and hashCode methods to use this new structure, which alters how configurations are stored and compared.",
      "llm_confidence": "high",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-20T03:11:28.942396",
      "diff_size": 15566,
      "diff_lines": 554
    },
    {
      "hash": "143a5e8b064e442970182cfb349b4f0826683e85",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T03:11:38.833502",
      "diff_size": 229714,
      "diff_lines": 4787
    },
    {
      "hash": "1443a156cc46b54b3c510750068c7da5224dce52",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-20T03:12:40.062904",
      "diff_size": 112228,
      "diff_lines": 2250
    },
    {
      "hash": "144644bbf77a546c45db384e2dbc18e13f65c9ce",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T03:13:57.058560",
      "diff_size": 4843168,
      "diff_lines": 109224
    },
    {
      "hash": "144e0012c131a787e2246cf404d5559759d2e29d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve restructuring with functional modifications. In AdvancedEditPoiFragment.java, the code now checks for a non-null category before setting text, which could prevent potential null pointer exceptions and change behavior by providing a fallback string when category is null. Similarly in EditPoiDialogFragment.java, hint setting requires a non-null category to avoid errors. These conditional changes alter the logic flow compared to pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-20T03:14:06.516095",
      "diff_size": 6139,
      "diff_lines": 147
    },
    {
      "hash": "144fae7da888efdb2ec1fce70d0d821a00489db1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-20T03:15:21.332747",
      "diff_size": 132848,
      "diff_lines": 3480
    },
    {
      "hash": "1452134707e2a143def3c03d1db416b1c8197565",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T03:16:38.118512",
      "diff_size": 2400868,
      "diff_lines": 54810
    },
    {
      "hash": "14d1deb59263bef4c1f134f0ee7b75f6440b3735",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve structural refactoring with minimal functional impact. The commit renames several classes to 'final' and updates their constructors, but the core functionality remains unchanged. For example, AllDataSources.java now uses a final class instead of an abstract one, which is purely structural. Similarly, CommonFilesMetaDataBuilder.java's findCommonFiles method returns a CommonFilesMetaData object rather than a Map, preserving the same behavior without altering inputs or outputs.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T03:29:37.403516",
      "diff_size": 18655,
      "diff_lines": 438
    },
    {
      "hash": "14d3b615bcb97c164f956c15b0f1c8ba0543a1dd",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-20T03:29:49.404185",
      "diff_size": 23657,
      "diff_lines": 513
    },
    {
      "hash": "14d67d81c57d6387c77bd85c57b342d285880835",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T03:29:59.049269",
      "diff_size": 6311385,
      "diff_lines": 136706
    },
    {
      "hash": "14e46e462cfee15cd06419ee81eb6d9571b6805e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T03:30:28.665766",
      "diff_size": 1921201,
      "diff_lines": 39369
    },
    {
      "hash": "14f49ff78ca090cff910d7608cee2e1345d0a432",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T03:31:45.368625",
      "diff_size": 75717,
      "diff_lines": 1200
    },
    {
      "hash": "14fd1f25bbf8e4a7e4fe7f0753d5473a840653a3",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve replacing direct field access with a utility method from TestUtils, which includes additional logging and error handling. This introduces new conditional logic (try/catch blocks) for accessing private fields, modifies the way data is retrieved by using reflection through a helper class, and adds explicit return type casting in test cases. These alterations change the functional behavior of how private field values are accessed during testing.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T03:31:54.097167",
      "diff_size": 7684,
      "diff_lines": 190
    },
    {
      "hash": "152a77aa3c0a2c26ba2d6f7cbec30a9729f6ce32",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in StandardProjectHandler.java involve renaming variables and methods from lowercase to uppercase, which is a pure structural change. The method 'createDroneSprite' was renamed with parameters slightly altered but the logic remains identical as inputs produce same outputs. No new functionality or behavioral modifications were introduced; it's just consistent naming.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T03:31:59.454062",
      "diff_size": 5711,
      "diff_lines": 94
    },
    {
      "hash": "152c1012a755529a664307390946e7d01397eac4",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-20T03:33:18.169150",
      "diff_size": 75020,
      "diff_lines": 1586
    },
    {
      "hash": "1553514f19cbfcd4147df2897ed0a686cc60bd91",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "iri",
      "analysis_timestamp": "2025-08-20T03:34:39.329621",
      "diff_size": 20824,
      "diff_lines": 496
    },
    {
      "hash": "155f524deead57bae4a0996f16c12e283c268a13",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-20T03:35:12.529751",
      "diff_size": 198428,
      "diff_lines": 5057
    },
    {
      "hash": "1564c17714cfadb2317018545391758fa4c0121c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "core",
      "analysis_timestamp": "2025-08-20T03:35:26.473248",
      "diff_size": 47831,
      "diff_lines": 1536
    },
    {
      "hash": "157512a97c29ba450b49987a65fb5ab807e9ee25",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "ExtrabiomesXL",
      "analysis_timestamp": "2025-08-20T03:36:35.442132",
      "diff_size": 11318,
      "diff_lines": 324
    },
    {
      "hash": "157ef47b985149f3733a65930710224421c379a2",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'AnalyzingRubyProxyInjectionBuilder' and modifies existing classes to use it. This includes changes to method signatures (e.g., replacing 'build' with 'analyzeAndInject') and adding new conditional logic for recursive analysis. Additionally, the old 'RubyProxyInjectionBuilder' is deleted, which previously handled injection registry creation differently, indicating a functional shift in behavior.",
      "llm_confidence": "low",
      "project_name": "torquebox",
      "analysis_timestamp": "2025-08-20T03:36:45.107922",
      "diff_size": 30574,
      "diff_lines": 733
    },
    {
      "hash": "1596c5ffc5c0d25b896b26bc1cb474669fb3f306",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T03:36:51.853051",
      "diff_size": 90056,
      "diff_lines": 2699
    },
    {
      "hash": "159ec4776d85da48128098b89594ad7f03cffbf6",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-20T03:38:08.677672",
      "diff_size": 68212,
      "diff_lines": 1419
    },
    {
      "hash": "15c008b1d4e4933b043e0ca90c063e57a9b79750",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T03:40:54.225864",
      "diff_size": 11936,
      "diff_lines": 277
    },
    {
      "hash": "15c2d395fa7962329a1a9af000ac85ad81a867cf",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve renaming and moving the Chunk class to a nested static class within Chunker, with no functional behavior change. The method signatures remain unchanged, and there are no new conditional logic or modifications in return values.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T03:40:59.973414",
      "diff_size": 11685,
      "diff_lines": 288
    },
    {
      "hash": "15ea595e1887b1d83d8eb2aa0f440373e0f61fd8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include the introduction of a new class (GCModelLoaderGroupTracker) that manages multiple GCModelLoaders by tracking their completion events. This involves adding conditional logic in propertyChange method to increment finishedCount and trigger an event when all loaders complete, which alters the functional behavior compared to the old approach where individual reloads were handled separately without such coordination.",
      "llm_confidence": "high",
      "project_name": "GCViewer",
      "analysis_timestamp": "2025-08-20T03:41:08.884273",
      "diff_size": 12876,
      "diff_lines": 331
    },
    {
      "hash": "15f9fcdddd3702774eae512548987d2cf5543543",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-20T03:41:20.701683",
      "diff_size": 254377,
      "diff_lines": 7227
    },
    {
      "hash": "15fd614dcc227cb3c4638102c1ea135a7ec51b7d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit replaces the method 'updateActiveAndInactiveButtons' with a new method 'updateButtonViewOnKeyboard'. This change introduces modifications to the behavior of the undo and redo buttons by adding conditional checks for clickability based on edit history. The original method only updated button backgrounds, while the new one adds logic to set clickable state (using setClickable) which alters functionality beyond simple structural changes.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T03:41:28.560034",
      "diff_size": 4419,
      "diff_lines": 104
    },
    {
      "hash": "161a8a6e76b5984ed636c09e11baeeb3e391aa1e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-20T03:41:35.702922",
      "diff_size": 100196,
      "diff_lines": 2319
    },
    {
      "hash": "1621cd5d43fccad3669eaf50ed770c8cf0fb8ddf",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T03:43:43.949656",
      "diff_size": 261487,
      "diff_lines": 4995
    },
    {
      "hash": "1696985ae318d446b7f746d2ca0eb73464644b81",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new HA feature with the addition of HaBackupRegistrationMessage class and its usage in CoreProtocolManager, PacketDecoder, and HornetQServerImpl. This includes changes to method signatures (e.g., handling HA_BACKUP_REGISTRATION packet type), adding new conditional logic for this message type, modifying return types or exception handling by introducing a new wireformat class, and altering the behavior of the server during backup registration with logging statements that reference new elements.",
      "llm_confidence": "high",
      "project_name": "hornetq",
      "analysis_timestamp": "2025-08-20T03:57:57.136017",
      "diff_size": 15377,
      "diff_lines": 359
    },
    {
      "hash": "16bb89810df5d1b0d8c7262c1f6c426e36866372",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T03:58:09.402136",
      "diff_size": 7172228,
      "diff_lines": 160779
    },
    {
      "hash": "16c30cdc4c79800adea70760d6f4f9d9bcd858d0",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-20T03:58:40.062098",
      "diff_size": 137785,
      "diff_lines": 2829
    },
    {
      "hash": "16d73851665146c763b24c947e7a157fe24e666b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T03:59:56.573011",
      "diff_size": 179473,
      "diff_lines": 4033
    },
    {
      "hash": "16fbc932e65501cdd1cba8b6d411f874a770cfb9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'cancelScheduledFuture' in ExecutorUtil, which is used to cancel ScheduledFutures. This change replaces direct cancellation logic with a utility method call, altering the structure without changing behavior. However, multiple files (RegistryConfig, DubboMonitor, MulticastRegistry, FileExchangeGroup, FileGroup) use this method for cleanup operations, indicating that while the code organization improves by centralizing functionality, it does not introduce new features or change existing ones. The primary changes are structural refactoring using a common utility.",
      "llm_confidence": "medium",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-20T04:02:40.689347",
      "diff_size": 15982,
      "diff_lines": 292
    },
    {
      "hash": "16fbd1436b274a302aaa979ece735fca52071158",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-20T04:03:02.180823",
      "diff_size": 91788,
      "diff_lines": 2718
    },
    {
      "hash": "17189b167c1632587eb8e227371886ff0882ecad",
      "purity_classification": "FALSE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve renaming variables and properties (m2buildDirectory to m2BuildDirectory, 2.1.1 to 2.1.2) which are simple renames preserving semantics. The core functionality of the AbstractSiteRenderingMojo class remains unchanged with no new conditional logic or algorithm modifications introduced.",
      "llm_confidence": "high",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-20T04:03:11.518651",
      "diff_size": 13199,
      "diff_lines": 286
    },
    {
      "hash": "1718f2d34a9fbee457979b17c90f423a54047374",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve renaming and reorganizing code without altering functionality. The commit renames 'WaypointMananger' to 'WaypointManager' in multiple files, including the XML menu file and Java source files. This includes changing class names, method parameters (from 'WaypointMananger' to 'WaypointManager'), and action provider classes from fully qualified paths with a slight change in capitalization. However, these changes are purely structural as they maintain identical logic flow, same inputs produce same outputs, and no new conditional or algorithmic modifications were introduced.",
      "llm_confidence": "high",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-20T04:03:21.831677",
      "diff_size": 7165,
      "diff_lines": 170
    },
    {
      "hash": "1731e2fe84c1da2a6f4b0d1f73b8fd76c88b3acd",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T04:03:31.504795",
      "diff_size": 1289577,
      "diff_lines": 27203
    },
    {
      "hash": "1735dbca1182421dd432eda92e50be5b4cc48486",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces several changes that alter the behavior or structure of the code. Changes include modifying method signatures, adding new endpoints and parameters, which are indicators of functional changes. For example, in SystemScopeService.java, the constant OPENID_SCOPE is changed from Object to String type (line 32). In application-context.xml, multiple security http patterns are updated with dynamic expressions using T() function, changing the access control logic for various endpoints. Additionally, several endpoint classes have their request mappings changed and new constants introduced, such as URL changes in IntrospectionEndpoint.java and RevocationEndpoint.java.",
      "llm_confidence": "medium",
      "project_name": "OpenID-Connect-Java-Spring-Server",
      "analysis_timestamp": "2025-08-20T04:03:42.589661",
      "diff_size": 24846,
      "diff_lines": 497
    },
    {
      "hash": "17462dcbddef591048fcb6cd0dbe693337782493",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T04:04:02.987769",
      "diff_size": 306731,
      "diff_lines": 7569
    },
    {
      "hash": "175c16fd677d2d43cd0c771855a804e220b3191d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T04:05:18.890208",
      "diff_size": 69575,
      "diff_lines": 1774
    },
    {
      "hash": "17ed47d2a20ae011326c6f14b0a36777e1aacdb8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a refactoring that changes the method signature and behavior of receiveBlueprintMeta, which is a behavioral modification. Additionally, it adds new conditional logic in ClassMapping for handling byte arrays and null values, indicating functional changes. The RPC handler now includes dimension ID checks, altering the execution path and adding complexity.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T04:20:59.261251",
      "diff_size": 13630,
      "diff_lines": 404
    },
    {
      "hash": "1800bb2dbdff1ee5b179dcb711c75904c74d3e94",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality by adding multiple costume changes and wait actions for a sprite, which alters the behavior of the ContentManager class. It adds three additional costumes with specific image paths and thumbnails, creating new conditional logic in the form of brick definitions (GO_TO, WAIT) that were not present before. This includes modifications to method parameters and return values through the use of different string constants and variable names for images and thumbnails, changing how sprites are constructed and managed.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T04:21:07.848838",
      "diff_size": 3959,
      "diff_lines": 66
    },
    {
      "hash": "18152c5faa5f3787bbc5a8ce59c68777121b68c8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-20T04:21:18.960220",
      "diff_size": 144261,
      "diff_lines": 4473
    },
    {
      "hash": "181fa250373f4b3e0e6e6530cb93a8c921f9cb1b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-20T04:21:29.185838",
      "diff_size": 136460,
      "diff_lines": 2795
    },
    {
      "hash": "183969700131dfac4ad5991eb62fdfb41867ac33",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T04:22:45.963586",
      "diff_size": 67230,
      "diff_lines": 1322
    },
    {
      "hash": "1847315bb3fce0fbc6f5e57c53f9f7998a4cda58",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-20T04:22:55.974926",
      "diff_size": 16595,
      "diff_lines": 448
    },
    {
      "hash": "186777aac55b1aa95c5c9e9cdaff2b981cf9d5af",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T04:24:15.063423",
      "diff_size": 808363,
      "diff_lines": 16832
    },
    {
      "hash": "187ca51266e0aeef6e19113d524371defca6f42b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-20T04:25:19.547949",
      "diff_size": 37659,
      "diff_lines": 913
    },
    {
      "hash": "1880f4a8c80a0511dab8fc746736fe30e9fb6ef2",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class ObjectMapperFactory and refactors the JacksonProcessor to use it. The method configureMapper in JacksonProcessor is removed, and its functionality is moved to ObjectMapperFactory. Additionally, BsonModule now extends de.undercouch.bson4jackson.BsonModule and adds a createJsonFactory method that configures the JsonFactory similarly to how configureMapper did for ObjectMapper. This refactoring involves structural changes but also includes functional modifications as it consolidates configuration logic into a new class, potentially affecting behavior by centralizing setup.",
      "llm_confidence": "medium",
      "project_name": "jongo",
      "analysis_timestamp": "2025-08-20T04:25:28.832549",
      "diff_size": 7082,
      "diff_lines": 160
    },
    {
      "hash": "1882690b727012cf0e4833d272360038716779ed",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces changes that alter the functional behavior of the code. In AbstractCVTAction.java, the method getSelectedAccounts() is replaced with a direct return statement from a lookupAll call, changing how accounts are retrieved and potentially affecting the system's state management. Additionally, in MessageBrowser.java, there is a change from returning AccountDeviceInstance to AccountDeviceInstanceKey when creating SelectionNode instances, which may impact data handling and consistency. These changes involve modifications beyond simple structural reorganization, indicating functional alterations.",
      "llm_confidence": "medium",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T04:25:38.220250",
      "diff_size": 13428,
      "diff_lines": 281
    },
    {
      "hash": "189f73d008d1e827b91dc8cb1defdaad62c577f1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T04:25:45.945417",
      "diff_size": 206979,
      "diff_lines": 3868
    },
    {
      "hash": "18aef003282a82ff1b1df00b14b514044f5642fe",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T04:25:53.269674",
      "diff_size": 22554,
      "diff_lines": 580
    },
    {
      "hash": "18b9e87686820ebe23aabedc16916a72e750a2fb",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T04:26:02.590665",
      "diff_size": 167437,
      "diff_lines": 3279
    },
    {
      "hash": "18bfeea8fa7d7d272ff44ebf3cb94ad8094a5f8e",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the DoxiaMojo class primarily involve updating dependency versions and adding comments, which are structural improvements. The method signature for execute() remains unchanged despite minor adjustments to parameter handling, indicating no functional alteration.",
      "llm_confidence": "high",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-20T04:26:10.571096",
      "diff_size": 8622,
      "diff_lines": 277
    },
    {
      "hash": "18c49ce382c869659d6077bc95fe82392337b025",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method signature change by adding a boolean parameter to rebuildRepoHelper, which alters its behavior. Additionally, the logic for handling ingest job events and case changes includes new conditional checks (e.g., checking if the timeline window is open) that affect when certain actions are taken, indicating functional modifications.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T04:26:19.856337",
      "diff_size": 15581,
      "diff_lines": 354
    },
    {
      "hash": "18cd3e3205ac3301ebce0b047aa444e50388083b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T04:26:28.956641",
      "diff_size": 942308,
      "diff_lines": 20373
    },
    {
      "hash": "18d881c0866b46ec08a41d576ee9de4a84dc3082",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T04:26:39.176992",
      "diff_size": 57219,
      "diff_lines": 1206
    },
    {
      "hash": "18e2eaf54f6f6f859d3dcff3da12c40cadf7bafa",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-20T04:27:55.582360",
      "diff_size": 30055,
      "diff_lines": 764
    },
    {
      "hash": "193a1adedf11ed37bc1f60fb08c5f149c4003f77",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new functionality by adding a 'MotorActionBrick' class and modifying the existing 'HideBrick' to use a different method. The change in behavior is evident from the addition of conditional logic (Thread.sleep) and modification of exception handling, which are not purely structural.",
      "llm_confidence": "medium",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T04:39:33.715304",
      "diff_size": 14272,
      "diff_lines": 373
    },
    {
      "hash": "1946cfdfdd5501768ed1e60625ad54fa23a7fb0f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The diff includes several changes that introduce functional modifications. In ColumnFamilyStore.java, the method 'invalidateCachedRow' is changed to public with a potential impact on behavior. Additionally, SSTableWriter.java shows significant restructuring including new conditional logic and modified exception handling in the Builder class. The test files also contain additions of new functionality (e.g., new tests for AES counter repair) which are not purely structural.",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T04:39:47.634381",
      "diff_size": 28262,
      "diff_lines": 670
    },
    {
      "hash": "1956e79705f7f1ad48aa30f07dcc431f4d003448",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T04:40:26.817033",
      "diff_size": 59861,
      "diff_lines": 1443
    },
    {
      "hash": "1961af56ec54718729b918ddbae4b141b3501479",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-20T04:40:49.299128",
      "diff_size": 209041,
      "diff_lines": 5934
    },
    {
      "hash": "19938c95d0a8a6321d3d0e583c8a3e22467c21d3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the AlertSender constructor by removing the throws clause, which indicates a potential functional shift. Additionally, it modifies exception handling within sendEmails and other methods, adding new exceptions (TransportConfigurationException, EmailException) that were not present before. This addition of exceptions can alter behavior when error conditions occur. Furthermore, there are changes in how errors are logged and handled, particularly in AlertScannerThread where a try-catch block is introduced to handle exceptions differently. These modifications suggest functional changes rather than pure structural ones.",
      "llm_confidence": "high",
      "project_name": "graylog2-server",
      "analysis_timestamp": "2025-08-20T04:45:00.046853",
      "diff_size": 9285,
      "diff_lines": 174
    },
    {
      "hash": "19942c7ecd9f8847debcb8da53db0d80e93ffeac",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit includes multiple changes that alter the behavior of the code. In pom.xml, the version is updated from 20101101 to 20101126, indicating a functional change in the release number. Similarly, FitNesseVersion.java updates the constructor parameter and default value. The test files (SuiteResponderTest and TestResponderTest) show changes in expected counts: one test expects '2' but now it's changed to '1', another from '3' to '2'. This demonstrates that the commit is not just structural reorganization but includes modifications affecting functionality, specifically by changing expected values which implies a change in what the code does.",
      "llm_confidence": "high",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-20T04:45:08.221689",
      "diff_size": 6026,
      "diff_lines": 136
    },
    {
      "hash": "199d2e6d2a127491ae94aaa722c6def10b43a95e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T04:45:16.646691",
      "diff_size": 48710,
      "diff_lines": 1030
    },
    {
      "hash": "19a34140f29118017b9315a272ef31c2d0e18d63",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in EventProcessingThreadImpl.java and UiEngineImpl.java involve restructuring with functional modifications. In EventProcessingThreadImpl, the variable type changed from int to long without explanation for why this change was necessary, indicating a potential behavior alteration (FLOSS Indicator 2). In UiEngineImpl, the code block that processes events has been restructured by replacing direct iteration with a synchronized loop and error handling within it, then extracting this logic into a new method getResponses. This extraction includes modifications to exception handling and introduces new conditional logic for handling errors separately (FLOSS Indicators 4,6). The introduction of a new method suggests the code was moved but not purely structurally as there are functional changes in how responses are handled.",
      "llm_confidence": "medium",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-20T04:45:26.645542",
      "diff_size": 4616,
      "diff_lines": 133
    },
    {
      "hash": "19b119b997c3bac4377e0dad949bc05d4a25293a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jbake",
      "analysis_timestamp": "2025-08-20T04:45:35.405199",
      "diff_size": 43931,
      "diff_lines": 990
    },
    {
      "hash": "19c5babb97da3642dd8e02c25649e2e192d0f7ad",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-20T04:46:04.938654",
      "diff_size": 1191959,
      "diff_lines": 27134
    },
    {
      "hash": "19cf3fa3af33f79d5b3da62db2066dc478ff2d8b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "infinispan",
      "analysis_timestamp": "2025-08-20T04:47:22.765419",
      "diff_size": 117581,
      "diff_lines": 2584
    },
    {
      "hash": "19db1c2b1957f0509382a039016975147c9ec181",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve replacing direct calls to LogLog methods with getLogger().warn() or similar, which is a structural change. The functionality remains unchanged as the same logging behavior is preserved but through different method invocations (getLogger().error/getLogger().debug). There are no new conditional statements, loops, or other functional logic additions; only variable/method renaming and code reorganization occur.",
      "llm_confidence": "high",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-20T04:47:32.555133",
      "diff_size": 17235,
      "diff_lines": 426
    },
    {
      "hash": "1a28d6119fb5d2e77caae8674540f62a6b9043e1",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "netty",
      "analysis_timestamp": "2025-08-20T04:47:55.638574",
      "diff_size": 155569,
      "diff_lines": 3427
    },
    {
      "hash": "1a3b5dbcb5fbee5066ceaa2467536119893f7e7f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T04:48:08.727145",
      "diff_size": 1459769,
      "diff_lines": 32399
    },
    {
      "hash": "1a5b98ded67c2d096aae77fae4cc3dbfed4f823a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "uaa",
      "analysis_timestamp": "2025-08-20T04:49:22.340008",
      "diff_size": 25169,
      "diff_lines": 564
    },
    {
      "hash": "1a6416cf5f3e5565170bf8d4be1be81f8dd93c7f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-20T04:49:30.616906",
      "diff_size": 21191,
      "diff_lines": 558
    },
    {
      "hash": "1a66206e5ed3086fc52fab57263b4afe4b6ad8d5",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in DefaultFuture.java introduce a new parameter 'timeout' to the received method, altering its signature and behavior. This is evidence of functional change as it now handles timeout differently based on this flag. Additionally, the TimeoutCheckTask class was modified to accept a Long requestID instead of a DefaultFuture instance, which affects how timeouts are managed and could lead to different logic or error handling.",
      "llm_confidence": "high",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-20T04:49:39.276192",
      "diff_size": 7196,
      "diff_lines": 137
    },
    {
      "hash": "1a9ec2f653fedaca9c4bcc02dd2accc61bd38914",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-20T04:49:51.937094",
      "diff_size": 69368,
      "diff_lines": 1599
    },
    {
      "hash": "1aa6e349e6da92bc31f7d4b3d3bd97109e1b3d2e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality by adding an RCON command and associated classes. In Sender.java, the method 'handleRconSetup' is introduced to handle relay node forwarding, which changes the behavior of how messages are processed. Additionally, in RPC.java, a new enum value 'RCON' is added, indicating a change in the set of available commands. The RconController and RconView classes also show modifications that add user interface elements for sending directed NAT peer messages, altering the system's capabilities.",
      "llm_confidence": "high",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-20T04:50:02.021328",
      "diff_size": 14374,
      "diff_lines": 401
    },
    {
      "hash": "1aad1d27ffe2a62da8fe1d6d5a5c7c545e3b46b1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The diff includes the deletion of CheckstyleReportMojo.java, which contained core functionality for generating the Checkstyle report. The remaining changes in CheckstyleReport.java and CheckstyleReportListener.java appear to be structural adjustments (renaming imports, adding comments) but they are part of a larger refactoring that removes an existing implementation class. This indicates functional change as the plugin structure is being reorganized with new parameters and methods.",
      "llm_confidence": "medium",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-20T04:50:10.941477",
      "diff_size": 9753,
      "diff_lines": 304
    },
    {
      "hash": "1aad1dfb78f2008f1fb5d4ec7a14653fb12c5863",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T04:50:19.035840",
      "diff_size": 129967,
      "diff_lines": 2448
    },
    {
      "hash": "1ab7373fecc389a165580d9b74b6a94cb8bc8faf",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "androidannotations",
      "analysis_timestamp": "2025-08-20T04:50:29.137957",
      "diff_size": 11852,
      "diff_lines": 341
    },
    {
      "hash": "1ad8bf67a9c82cbb5ff38e5cf785f9fe2516d009",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T04:50:48.104871",
      "diff_size": 19225464,
      "diff_lines": 425535
    },
    {
      "hash": "1ad91423db1937d685c2dcad005eb2fd12d63fb1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-20T04:51:30.471925",
      "diff_size": 66919,
      "diff_lines": 1674
    },
    {
      "hash": "1adbea5a068287f42f2421e558f4c404c69aea74",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T04:52:47.356262",
      "diff_size": 9848141,
      "diff_lines": 188925
    },
    {
      "hash": "1ae3c0104c91235ed59d578665836a2cdc0fb765",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method signature change in FailedPredicateException by adding an @NotNull annotation to the constructor parameter, which alters behavior. Additionally, it adds new methods (getRuleIndex(), getPredIndex(), etc.) and modifies exception handling logic with a static helper method that changes how messages are formatted.",
      "llm_confidence": "high",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-20T04:55:29.129688",
      "diff_size": 4769,
      "diff_lines": 120
    },
    {
      "hash": "1ae7a7e42bee4747f0c5a6a7094ae17adedb6d56",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "testng",
      "analysis_timestamp": "2025-08-20T04:55:38.629848",
      "diff_size": 36589,
      "diff_lines": 1098
    },
    {
      "hash": "1ae84195116eb346522c59042df8a2156a3f19f0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces changes to the LogRecord class (CASSANDRA-13294) by modifying how absolute paths are constructed and processed. Specifically, it adds a component separator when building the absolute path for sstable files, which alters the behavior of reading existing transaction logs during upgrades from older versions. This change affects functional logic as it changes what is considered part of an SSTable's absolute path, impacting compatibility and potentially leading to different file classifications or checksums.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T04:55:48.300367",
      "diff_size": 12401,
      "diff_lines": 241
    },
    {
      "hash": "1b0666e9de5caea14997a3e638a6209b45c97d60",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-20T04:55:56.211765",
      "diff_size": 94512,
      "diff_lines": 2149
    },
    {
      "hash": "1b0df3897595cf62426e4811670d092b823d3455",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in ColumnFamilyStore.java and SSTableReader.java introduce parallelization for opening sstables at server startup, which alters the functional behavior by changing the execution model. This includes using an executor service with a fixed thread pool size, handling exceptions differently during batch open operations, and modifying how multiple sstable openings are managed asynchronously.",
      "llm_confidence": "high",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T04:56:05.340929",
      "diff_size": 7933,
      "diff_lines": 178
    },
    {
      "hash": "1b4fd18f654ca35bcc3b97b60956cd2a9bb64d1e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T04:56:13.786593",
      "diff_size": 25056,
      "diff_lines": 447
    },
    {
      "hash": "1b55092734f28474eb849a82a54e0feeeff721e8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "basex",
      "analysis_timestamp": "2025-08-20T04:56:22.672057",
      "diff_size": 17203,
      "diff_lines": 373
    },
    {
      "hash": "1b5691ad2a7d734321d0382e71743a85835556b3",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jbake",
      "analysis_timestamp": "2025-08-20T04:56:40.136319",
      "diff_size": 59688,
      "diff_lines": 1283
    },
    {
      "hash": "1b601abd6f56b820519d7ebfa38330384bc05a9b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OpenID-Connect-Java-Spring-Server",
      "analysis_timestamp": "2025-08-20T04:57:05.358318",
      "diff_size": 28509,
      "diff_lines": 595
    },
    {
      "hash": "1b611fb43aeb0dc6d24b13692eb3a8349e212377",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-20T04:58:22.122036",
      "diff_size": 73461,
      "diff_lines": 1640
    },
    {
      "hash": "1b7cdc4328b569333ea60f2c04c3c6940057d130",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new constructor in CodeGenerator.java and modifies the static method targetExists to use it, which changes the way targets are instantiated. Additionally, Target.java gains a new method templatesExist that checks for template existence similarly to an existing method but with different implementation details. These changes involve restructuring code around instantiation logic and adding new conditional behavior (e.g., checking if templates exist) without direct evidence of pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-20T05:02:21.160363",
      "diff_size": 2618,
      "diff_lines": 78
    },
    {
      "hash": "1b8d8f03ecd66dc9fbbbf22155fb50eb2882e56b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new dependency on Hazelcast and implements a completely new authentication mechanism using distributed sessions. This includes adding conditional logic to handle authentication cookies, modifying method parameters (ServletRequest/ServletResponse changed to ServletRequest req/ServleResponse res), changing the internal behavior of doFilter by incorporating complex session management logic with Hazelcast, which alters the execution path significantly.",
      "llm_confidence": "high",
      "project_name": "saiku",
      "analysis_timestamp": "2025-08-20T05:02:26.577442",
      "diff_size": 3736,
      "diff_lines": 110
    },
    {
      "hash": "1b997445f4f44e507c7d2fa5e57df4c65653e2a9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'getCurveDefinitions' in the CurveDefinitionFn interface and its default implementation. This method combines multiple curve definitions into a map, which is a functional change from the previous single curve definition retrieval. Additionally, it modifies the parameter of the createCalculator method to use this new bundle structure, potentially affecting how data is handled and reducing the need for separate lookups (a performance optimization). The addition of conditional logic in the default implementation ensures all curve definitions are successfully retrieved before proceeding, which alters the control flow.",
      "llm_confidence": "high",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-20T05:02:32.796595",
      "diff_size": 7352,
      "diff_lines": 138
    },
    {
      "hash": "1bcbea4389ec31f6582a85c82c2b7b05b10c894f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-20T05:02:43.834343",
      "diff_size": 3074947,
      "diff_lines": 58122
    },
    {
      "hash": "1be05a10070b355ea484cf760b32a34946d056db",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-20T05:03:57.795026",
      "diff_size": 22467,
      "diff_lines": 697
    },
    {
      "hash": "1be3c999d112215a1354ab396cb2fbb94f3d2a0e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-20T05:04:20.416717",
      "diff_size": 1894478,
      "diff_lines": 46300
    },
    {
      "hash": "1bec33604b401edffa5511c086ca0da6fe2ff77c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The diff includes several changes that introduce functional modifications. In AbstractCVTAction.java, the getSelectedAccounts method was changed from returning a Collection to directly returning the result of lookupAll(), which is a structural change but also alters the behavior by removing an intermediate step. Additionally, in CVTEvents.java, imports were removed and added back inconsistently, indicating potential functional changes not just comments. The RebuildWorker class in CommunicationsGraph.java uses a ProgressIndicator instead of a Progress object, changing how progress updates are handled which could affect user experience or error handling. There is also evidence of method signature changes (e.g., from 'ActionEvent e' to 'ActionEvent event') and the introduction of new conditional logic for different events.",
      "llm_confidence": "medium",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T05:04:30.586104",
      "diff_size": 15814,
      "diff_lines": 367
    },
    {
      "hash": "1bf0dfe64a592f21eee7714fda6d091e7b8c5dbc",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "netty",
      "analysis_timestamp": "2025-08-20T05:04:37.816639",
      "diff_size": 37293,
      "diff_lines": 863
    },
    {
      "hash": "1bfc3c21622db494d450f226fd1db9bb710ad273",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-20T05:06:43.005583",
      "diff_size": 28319,
      "diff_lines": 680
    },
    {
      "hash": "1bffc8c2b2986d96ed5f05c6bb7b37a1508c506a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The diff includes changes that alter the method signature and behavior, specifically in getAccessToken. The original method used application/x-www-form-urlencoded content type and a different parameter structure, but now it uses application/json with new headers and a modified way to extract response data (checking for status >=400). Additionally, there are modifications to exception handling by using r.asJson().get(\"meta\").get(\"errorDetail\") instead of the previous method. These changes indicate functional behavior alterations.",
      "llm_confidence": "high",
      "project_name": "play-authenticate",
      "analysis_timestamp": "2025-08-20T05:06:52.252701",
      "diff_size": 8576,
      "diff_lines": 221
    },
    {
      "hash": "1c1e6cb5937cf52b4b08c9918b7882a6f0d20cd9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-20T05:07:10.658363",
      "diff_size": 73140,
      "diff_lines": 1705
    },
    {
      "hash": "1c2ee514ba22d241b88186f860a41d75257e061f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class DoxiaBean and refactors the code to handle internationalization (i18n) by creating separate contexts for different locales. This includes changes in method signatures, addition of conditional logic based on locale handling, and restructuring of existing functionality which alters how documents are rendered and copied resources.",
      "llm_confidence": "medium",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-20T05:07:19.847599",
      "diff_size": 14563,
      "diff_lines": 388
    },
    {
      "hash": "1c3bd34d980ecca62162693588b366cb40606643",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-20T05:07:34.277351",
      "diff_size": 20292,
      "diff_lines": 517
    },
    {
      "hash": "1c46a3e9fcbf8ee7975ba91affeae61418473e33",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T05:07:52.970734",
      "diff_size": 213696,
      "diff_lines": 5119
    },
    {
      "hash": "1c4b431e0ad2d812b3c8b1ead4d9254357fed8b4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T05:08:01.886228",
      "diff_size": 39553,
      "diff_lines": 932
    },
    {
      "hash": "1c58c9f62ddf153803c577cc5c758e303359cdc7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T05:09:19.047394",
      "diff_size": 188803,
      "diff_lines": 4088
    },
    {
      "hash": "1c5c3cbdf3a984d99daccba65118e571580c1598",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-20T05:10:36.355029",
      "diff_size": 62813,
      "diff_lines": 1309
    },
    {
      "hash": "1c6a98f2f841bada927f8234e34c00c805e12741",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-20T05:11:51.357899",
      "diff_size": 22890,
      "diff_lines": 570
    },
    {
      "hash": "1c732ed529dcd6142526bb47b6c8460be141c0ce",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-20T05:12:02.037760",
      "diff_size": 96289,
      "diff_lines": 1745
    },
    {
      "hash": "1c83f5a7337de7651b3c3f76c190aa9da625d8b0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T05:12:42.299400",
      "diff_size": 52392,
      "diff_lines": 1266
    },
    {
      "hash": "1c9d514424bdb5fc6fa77643515d8e7b05e90d63",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new LoggerContext class and refactors the logging system, including changes to method signatures (Logger constructor now takes LoggerContext), addition of conditional logic based on log levels in the isLoggable method, and modifications to return values or exception handling. The formatter's buildLog method was changed from static to instance-based, affecting how logs are formatted and written. These functional changes include new conditional statements for logging level checks and altered behavior in the Logger class by replacing 'isGreaterOrEqual' with a more specific check (now using loggerContext).",
      "llm_confidence": "high",
      "project_name": "androidannotations",
      "analysis_timestamp": "2025-08-20T05:14:10.286453",
      "diff_size": 15603,
      "diff_lines": 404
    },
    {
      "hash": "1cad0b0fe368bc3431c9b6ad081cc21e29cdd49a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "openstack-java-sdk",
      "analysis_timestamp": "2025-08-20T05:14:22.624289",
      "diff_size": 47553,
      "diff_lines": 1529
    },
    {
      "hash": "1cbb05dee4a4bde9551277e182155d512c246e37",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in Hudson.java introduce a new method 'getAllItems()' which is an addition of functionality. This method provides a way to get all items recursively, enhancing the existing capabilities without merely reorganizing code. In ViewDescriptor.java, there's a modification to the doAutoCompleteCopyNewItemFrom method where the logic for traversing item groups and adding auto-completion candidates has been changed by introducing a stack-based approach instead of iterating over top-level items only. This change alters the behavior by enabling deeper recursion based on the prefix match, which is not just a structural reorganization but adds new conditional logic (the while loop) to handle nested structures.",
      "llm_confidence": "high",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-20T05:14:31.319166",
      "diff_size": 2218,
      "diff_lines": 65
    },
    {
      "hash": "1cd41c9f6659b0898a3ed967852d8df86745884f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "twilio-java",
      "analysis_timestamp": "2025-08-20T05:14:40.219098",
      "diff_size": 456816,
      "diff_lines": 12782
    },
    {
      "hash": "1cdb043f08acb026552995a9c233db84dbfbc66a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve reordering parameters in method signatures and altering the logic within methods, which falls under FLOSS refactoring. Specifically, the `retryWithLoadBalancer` and `retrySameServer` methods have their parameter order changed from (URI, ClientCallableProvider, RetryHandler, Object) to (ClientCallableProvider, URI, RetryHandler, Object), affecting how parameters are passed and potentially impacting behavior. Additionally, in `RxUtils.getSingleValueWithRealErrorCause`, the condition now checks for a non-null cause when handling RuntimeExceptions, which modifies exception handling logic compared to before.",
      "llm_confidence": "medium",
      "project_name": "ribbon",
      "analysis_timestamp": "2025-08-20T05:14:51.113252",
      "diff_size": 17870,
      "diff_lines": 256
    },
    {
      "hash": "1cedf0e9a04516c620d49c9202cf84f0f138c627",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality by adding event handling for PLAYER_BED_ENTER and includes logic changes in the existing methods. Specifically, it adds a method to handle bed entering events with permission checks, modifies several conditionals (e.g., changing 'You don\\'t have permission' messages) and updates return values or exception handling.",
      "llm_confidence": "high",
      "project_name": "worldguard",
      "analysis_timestamp": "2025-08-20T05:14:57.357827",
      "diff_size": 12222,
      "diff_lines": 259
    },
    {
      "hash": "1d01046096057e3323a4d3aaeaded6ddb43c1017",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T05:15:23.552790",
      "diff_size": 7438045,
      "diff_lines": 137062
    },
    {
      "hash": "1d077ad9b71e9df44f1dcf4369086189a7e9eaa0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T05:15:40.482002",
      "diff_size": 52878,
      "diff_lines": 1190
    },
    {
      "hash": "1d11beaa6b45c25168f69aa362bec1e6e808a400",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T05:16:45.766102",
      "diff_size": 366141,
      "diff_lines": 9560
    },
    {
      "hash": "1d1e47516250e6619eb5a2d540060ae67fa725f2",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "restfb",
      "analysis_timestamp": "2025-08-20T05:18:02.488536",
      "diff_size": 41006,
      "diff_lines": 1165
    },
    {
      "hash": "1d39f0401bad39ddfb2744e63ded60f5441f37cd",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'handleBrickEnabledState' in BrickAdapter, which modifies the enabled state of bricks dynamically. Additionally, it refactors the handleScriptDelete functionality by moving its implementation to a helper method and updating how scripts are managed upon deletion (e.g., setting current script). These changes alter the behavior of brick handling during drag-and-drop operations and script management, indicating functional modifications beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T05:20:44.336097",
      "diff_size": 4753,
      "diff_lines": 123
    },
    {
      "hash": "1d3e57379d91e4d2cfa7a651a30baed397088a1d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a significant restructuring of the LaunchOptions class by introducing an ArgGroup and nested static class, which changes how options are parsed. This includes modifications to method signatures (e.g., getTemplate now returns initGroup.template) and conditional logic for handling exceptions in Main.java. Additionally, test cases were updated to reflect these changes, indicating functional adjustments rather than pure structural refactoring.",
      "llm_confidence": "high",
      "project_name": "jbake",
      "analysis_timestamp": "2025-08-20T05:20:50.197225",
      "diff_size": 7897,
      "diff_lines": 170
    },
    {
      "hash": "1d44a96284f01d723306426839579e0e4c506c27",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-20T05:20:57.886605",
      "diff_size": 28329,
      "diff_lines": 452
    },
    {
      "hash": "1d5e0301f36b5c0dbd8fa8b5e599d2bb413f1b4e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T05:21:10.259170",
      "diff_size": 21811,
      "diff_lines": 507
    },
    {
      "hash": "1d6052810df9363ed8dee308444b8466be112b5d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T05:21:17.650985",
      "diff_size": 385170,
      "diff_lines": 8269
    },
    {
      "hash": "1d60b42138a832846d49ff7ab4b323b093841d1a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-20T05:21:38.839446",
      "diff_size": 98801,
      "diff_lines": 2183
    },
    {
      "hash": "1d7ea6e7291c0c975ab66aef79e63ae874458848",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit includes changes to method signatures and return values, such as modifying the energy output multiplier in BuildCraftEnergy.java from 2.0f to 1.5f for a specific fuel type, which alters functionality. Additionally, several classes (TileQuarry, ItemDebugger, Version, Transactor) have their chat message components updated from ChatComponentText to ChatComponentTranslation with changes in formatting and localization parameters, indicating functional modifications beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T05:24:23.272088",
      "diff_size": 13024,
      "diff_lines": 280
    },
    {
      "hash": "1d802bae7dc466d4cefdd5200094d38470359581",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T05:24:32.912596",
      "diff_size": 105067,
      "diff_lines": 2424
    },
    {
      "hash": "1d8726eff287908b53590429c61a09f81a589cf9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in StorageHandler.java involve replacing the hardcoded 'catroidRoot' with a constant reference to 'Consts.DEFAULT_ROOT', which alters the behavior by changing how project directories are constructed. This includes modifications to method signatures and return values, as well as new conditional logic for checking existence of directories using constants instead of dynamic paths. The introduction of this constant likely changes the root directory location or handling, affecting functionality without being purely structural.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T05:24:41.059236",
      "diff_size": 10148,
      "diff_lines": 250
    },
    {
      "hash": "1db35dc915f9e7ebcbf80a58cb5463040c8178ed",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve renaming and reorganizing the code structure. The class name 'ListTimeline' was changed to 'ListTimeline' (no change), but there are multiple structural improvements: replacing a binding method with a custom StringBinding, changing cell factory implementations from specific classes to a generic TextEventTableCell that uses a Function for text derivation, and updating comments. However, the functional behavior remains unchanged as all new logic is identical or adapted without altering inputs/outputs.",
      "llm_confidence": "medium",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T05:24:49.909900",
      "diff_size": 12070,
      "diff_lines": 319
    },
    {
      "hash": "1ddbb2d4ee2d383a31dc87831d93e11799466e47",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T05:26:08.981045",
      "diff_size": 44379,
      "diff_lines": 1072
    },
    {
      "hash": "1dec646207c7b530ab8d7fd512cfa5033787eb55",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit changes the method mapping for HTTP requests, particularly altering how PUT and DELETE methods are handled. In Restful2ActionMapper.java, it updates the logic to map different HTTP methods (GET, POST, PUT, DELETE) to specific action methods (index, view, editNew, create, update, remove). This includes modifying the conditions under which each method is set, such as changing from 'isPut' to handling multiple cases. Additionally, in Restful2ActionMapperTest.java, test cases are updated to reflect these changes by replacing PUT requests with POST for certain scenarios (e.g., testPostCreate and testPutUpdate). These modifications change the behavior of how HTTP methods map to actions, indicating a functional change rather than pure structural refactoring.",
      "llm_confidence": "high",
      "project_name": "struts",
      "analysis_timestamp": "2025-08-20T05:26:19.386830",
      "diff_size": 7718,
      "diff_lines": 158
    },
    {
      "hash": "1df512d9bf5d49e2ada6bd1b3fe12931cdd5621f",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-20T05:26:27.530427",
      "diff_size": 38561,
      "diff_lines": 997
    },
    {
      "hash": "1dff33b621182e689d9e8e9161af6cf4ecb2423c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-20T05:26:51.565917",
      "diff_size": 231957,
      "diff_lines": 5407
    },
    {
      "hash": "1e222a45894380b1414078cfb06dc1fb347e8e08",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit includes changes to method signatures and exception handling, indicating functional modifications. Specifically, the 'maintainance' method call was wrapped in a try-catch block with logging, altering its behavior by adding error handling. Additionally, the parameter for startAssimilation changed from TrPeerInfo to TrRemoteConnection, which is a different object type, affecting how the method operates.",
      "llm_confidence": "high",
      "project_name": "tahrir",
      "analysis_timestamp": "2025-08-20T05:29:34.355398",
      "diff_size": 5770,
      "diff_lines": 131
    },
    {
      "hash": "1e24b31cc387e7a023032f8bc46aecac801049bb",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OpenID-Connect-Java-Spring-Server",
      "analysis_timestamp": "2025-08-20T05:29:42.037230",
      "diff_size": 32512,
      "diff_lines": 563
    },
    {
      "hash": "1e2b60821327c158cba1c11d98eea68531178893",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T05:29:59.872081",
      "diff_size": 1118692,
      "diff_lines": 22480
    },
    {
      "hash": "1e2b86cc4191fd934a997c9b6ff97259f37b1269",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit includes changes to the build.gradle file where androidTestCompile dependencies are removed and replaced with testCompile, indicating a change in testing logic. Additionally, there is an introduction of new conditional logic in AppVersionHelper for handling different data types when retrieving preferences, which alters behavior by changing how versions are compared (integer vs string). The method signatures and return values have been modified to use integers instead of strings for version comparison, affecting the functional behavior.",
      "llm_confidence": "medium",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-20T05:30:10.089449",
      "diff_size": 17532,
      "diff_lines": 403
    },
    {
      "hash": "1e3992401c2b21da33266e55996bab2e3b3c6104",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "infinispan",
      "analysis_timestamp": "2025-08-20T05:30:18.647063",
      "diff_size": 31171,
      "diff_lines": 634
    },
    {
      "hash": "1e3a0ebaebec6ad5cb09034ae4cffa1505550825",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T05:30:32.370949",
      "diff_size": 124782,
      "diff_lines": 2518
    },
    {
      "hash": "1e4057383c8d869a4d7885dbcccff5e80c6a96f5",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fabric8",
      "analysis_timestamp": "2025-08-20T05:31:48.534027",
      "diff_size": 101216,
      "diff_lines": 2109
    },
    {
      "hash": "1e5a0e19a90a365096846d67f678498a2aea1bd8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit changes the method signature from 'addColumn(Column column)' to 'addColumn(Cell cell)', which is a structural change. However, this change likely requires corresponding adjustments in callers or within the class to maintain functionality, as the parameter type shift suggests potential impact on how columns are handled internally. Without seeing those additional changes, we cannot confirm pure refactoring but note that such a signature change often implies functional modifications unless explicitly supported by other refactorings.",
      "llm_confidence": "medium",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T05:31:56.044990",
      "diff_size": 625,
      "diff_lines": 13
    },
    {
      "hash": "1e604118e571c79e89e52cccc761c4008b120a09",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "SimpleServer",
      "analysis_timestamp": "2025-08-20T05:32:11.669969",
      "diff_size": 92325,
      "diff_lines": 2839
    },
    {
      "hash": "1e6800bea49698c6d27b0ab05a1ffb15edff634b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'MetadataReportRetry' with its own state and behavior, including scheduling and cancellation logic. This is combined with changes to method signatures (e.g., renaming parameters) and the addition of conditional logic for retry periods. The refactoring includes functional enhancements like tracking failed reports and adjusting retry intervals based on conditions.",
      "llm_confidence": "high",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-20T05:32:20.795998",
      "diff_size": 16510,
      "diff_lines": 333
    },
    {
      "hash": "1e73567cecce8ef6cf5256dbe48e48731f73b5a2",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The commit primarily renames a method from 'getAutocompleterModel' to 'getAutocompleter', which is a simple name change without altering functionality. The new method signature uses the same class type and maintains identical logic, including the null check and instantiation of AutocompleterModel. This falls under pure refactoring as it preserves semantics with no behavioral changes.",
      "llm_confidence": "high",
      "project_name": "struts",
      "analysis_timestamp": "2025-08-20T05:32:28.454358",
      "diff_size": 1423,
      "diff_lines": 25
    },
    {
      "hash": "1e8ceaceddfaab9ee23239ac1ff1cc535cbbf52a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T05:32:38.808949",
      "diff_size": 814756,
      "diff_lines": 19746
    },
    {
      "hash": "1e9032ef7d1b7821327239e4be8ba3c46d241bdc",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a significant change by renaming the static imports and modifying the class structure in LoadFromRelativeFile.java. The method signatures are changed from CompileOutput to StoryFilePath, which is not just a simple rename but an indication of functional intent shift (behavioral modification). Additionally, the variable names in RelativeFileLoadingBehaviour.java now refer to story file paths instead of compile outputs, suggesting that the underlying logic might have been adjusted for clarity or correctness. The introduction of new static methods with clearer documentation indicates a change in how these utilities are perceived and used within the codebase.",
      "llm_confidence": "medium",
      "project_name": "jbehave-core",
      "analysis_timestamp": "2025-08-20T05:32:48.078907",
      "diff_size": 8332,
      "diff_lines": 173
    },
    {
      "hash": "1e978f78c659b689ffc01a8fada2863823957ddb",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jackrabbit-oak",
      "analysis_timestamp": "2025-08-20T05:32:59.447904",
      "diff_size": 60844,
      "diff_lines": 1356
    },
    {
      "hash": "1ea5059fe3976ce8f660b46520859c31bb433fda",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T05:33:29.863841",
      "diff_size": 247204,
      "diff_lines": 5466
    },
    {
      "hash": "1eb5acad388dcb74427e0fc71b9c1f18edaebf2d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-20T05:34:12.574186",
      "diff_size": 32329,
      "diff_lines": 622
    },
    {
      "hash": "1ef00b944ce6d4519779ccec26c70febdfa323a7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The diff shows multiple changes that alter the behavior of the code. The method 'getSiteDescriptor' now takes additional parameters and has a modified comment, indicating functional changes. Also, there are modifications to loop structures (e.g., changing from using an iterator to directly accessing elements) which may affect logic flow. Additionally, some comments have been updated with new functionality descriptions.",
      "llm_confidence": "medium",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-20T05:36:55.929216",
      "diff_size": 6962,
      "diff_lines": 178
    },
    {
      "hash": "1ef860294a0837095d324a9082435bcd60e17491",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T05:37:03.908071",
      "diff_size": 44406,
      "diff_lines": 980
    },
    {
      "hash": "1f01f301fe55f40f81639bfd419ba16e840b1cb2",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes involve renaming a method and its class in the API service. The return statement uses 'IsTransactionConsistentResponse' instead of 'isTransactionConsistentResponse', which is consistent with the renamed DTO class. There are no behavioral modifications, as inputs remain unchanged and outputs maintain the same structure.",
      "llm_confidence": "high",
      "project_name": "iri",
      "analysis_timestamp": "2025-08-20T05:37:11.752833",
      "diff_size": 1695,
      "diff_lines": 35
    },
    {
      "hash": "1f02d3ba06cfc8e44a394664837fb1bbceb38bd9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-20T05:37:20.551934",
      "diff_size": 422708,
      "diff_lines": 9895
    },
    {
      "hash": "1f167aeba21bf19469874148824af628bae10573",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T05:37:37.352860",
      "diff_size": 59526,
      "diff_lines": 1157
    },
    {
      "hash": "1f19d920e1659a317fafba1df084977c7cd18f42",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in the RobotRegistry class involve replacing HashMaps with specialized LongHashMap and EnumMap structures, which alters the way resources and stations are tracked. This includes modifications to method signatures (e.g., using containsItem instead of containsKey) that change behavior by enabling more efficient lookups for long keys. Additionally, there is a restructuring in BuildingSlotMapIterator where Multiset<Integer> is replaced with int[] arrays, affecting how build stages are counted and skipped. These changes introduce new conditional logic and modify data handling methods, indicating functional shifts rather than pure structural refactoring.",
      "llm_confidence": "medium",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T05:37:47.403855",
      "diff_size": 16070,
      "diff_lines": 377
    },
    {
      "hash": "1f1d59d76f49c8d8091d890750a435f7b8d555ff",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-20T05:38:01.348832",
      "diff_size": 39272,
      "diff_lines": 888
    },
    {
      "hash": "1f2bc5eb3f1bc7e7385bd1290668bf39dda48685",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-20T05:38:21.463593",
      "diff_size": 169137,
      "diff_lines": 4500
    },
    {
      "hash": "1f2efea58184ce26e6c94fcc8657c5e4ee11a5aa",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-20T05:38:29.010743",
      "diff_size": 28393,
      "diff_lines": 648
    },
    {
      "hash": "1f46c3c943469cccc448e03ff3f32105a1e50069",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-20T05:39:44.072967",
      "diff_size": 80055,
      "diff_lines": 1575
    },
    {
      "hash": "1f53b3888b7b77f8755647a923806667ea238201",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'PlayerSettingsScreen' and refactors the storage service handling logic. The changes include modifying method signatures, adding conditional behavior based on user state (logged in/out), and updating UI elements with localized text from i18n files. These modifications alter functionality by changing how the storage service status is displayed and what action triggers when clicking the button.",
      "llm_confidence": "high",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-20T05:42:08.800650",
      "diff_size": 11021,
      "diff_lines": 220
    },
    {
      "hash": "1f54f6fd8eff7f4fa35f59cc0e46066e1be90a5e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-20T05:42:17.570987",
      "diff_size": 733296,
      "diff_lines": 24409
    },
    {
      "hash": "1f584ff2443fba0784fdaab6cf7029595563e9ad",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-20T05:43:33.815346",
      "diff_size": 39372,
      "diff_lines": 927
    },
    {
      "hash": "1f69622a346740e4aacd1e117e0d4921d7109c3a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new functionality by adding event handling for PLAYER_BED_ENTER and creating a new method handleAirLeftClick. It also modifies existing methods to include additional conditional logic, such as checking bypass permissions and allowing specific actions in regions. Changes like altering the message content from 'You don't have permission' to more context-specific ones indicate functional modifications.",
      "llm_confidence": "high",
      "project_name": "worldguard",
      "analysis_timestamp": "2025-08-20T05:46:16.628368",
      "diff_size": 12222,
      "diff_lines": 259
    },
    {
      "hash": "1f7628ce7c1b3f820717eaa44df9b182158eb49e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T05:47:34.360795",
      "diff_size": 1410803,
      "diff_lines": 30027
    },
    {
      "hash": "1f8d19029ed92ec28c7ed1b77b499db03abbcf91",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit replaces the condition checking for air blocks and material properties with a direct call to Block's isPassable method, which changes the functional behavior. This indicates that the code now uses a different criterion (whether the block is passable) rather than just checking if it's not blocking movement based on its material type.",
      "llm_confidence": "high",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T05:48:59.057589",
      "diff_size": 1040,
      "diff_lines": 23
    },
    {
      "hash": "1f8df2a6e7370831c1620c44907e6072667146bd",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-20T05:49:12.597602",
      "diff_size": 602299,
      "diff_lines": 16419
    },
    {
      "hash": "1fab7a430c0e7445f2ed5cb191ccb9c7e91ccd11",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "bigbluebutton",
      "analysis_timestamp": "2025-08-20T05:49:20.228225",
      "diff_size": 23286,
      "diff_lines": 487
    },
    {
      "hash": "1fb7205d25cadc109c8dced23ae67f059750d7bf",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-20T05:49:28.074540",
      "diff_size": 28503,
      "diff_lines": 713
    },
    {
      "hash": "1fec4a4281be94f8ef2f9f8a5eaccee56d70e87e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T05:49:52.349166",
      "diff_size": 418190,
      "diff_lines": 9201
    },
    {
      "hash": "1ffcb7aeba6f2f018a15341c2b0082b21c4f76e6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-20T05:50:36.797095",
      "diff_size": 163469,
      "diff_lines": 3672
    },
    {
      "hash": "1fffb3403b5e37c63bb710d628aca5765dbad92b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include the introduction of a new method 'getRelativeNameFrom(ItemGroup)' and its usage in replacing direct calls to getRelativeNameFrom(Item) with context-aware logic. This alters the behavior by using EditDistance.findNearest() on relative names instead of full display names, which is a functional change.",
      "llm_confidence": "high",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-20T05:50:46.337556",
      "diff_size": 4482,
      "diff_lines": 118
    },
    {
      "hash": "20078d8167c7cba388bc96c1d40b0458c240cf35",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-20T05:51:08.921950",
      "diff_size": 2144465,
      "diff_lines": 55222
    },
    {
      "hash": "201b035cfccf3c0292faff3492acd008b5f2dace",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a security refactoring by replacing multiple role-checking methods with a unified RoleChecker interface. This includes changing method signatures from returning Collection<Role> to void, adding new parameters and exception handling (throws SecurityException), which alters the functional behavior for security enforcement.",
      "llm_confidence": "high",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-20T05:53:53.798787",
      "diff_size": 14078,
      "diff_lines": 345
    },
    {
      "hash": "202336eea70dce96086c06dcb496733fe2836f65",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'AccountSpinner' and replaces static method calls in IntentHelper with the same intent actions but different classes. Additionally, it changes the return type of getTagString from ', ' to ' '. This indicates functional changes beyond pure structural reorganization.",
      "llm_confidence": "high",
      "project_name": "PinDroid",
      "analysis_timestamp": "2025-08-20T05:54:00.836853",
      "diff_size": 20125,
      "diff_lines": 516
    },
    {
      "hash": "202383fd9c8deecabf8f1b0084ef64d85527037c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "iri",
      "analysis_timestamp": "2025-08-20T05:54:12.250722",
      "diff_size": 104893,
      "diff_lines": 2202
    },
    {
      "hash": "20340e1842317f2564abd59d15eb2c958892f526",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'checkPostBackAccess' and modifies the static access method to include permission checks. This changes the behavior by introducing security-related logic (checking for ADMINISTER permission) which was not present before, indicating functional change.",
      "llm_confidence": "high",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-20T05:54:20.245146",
      "diff_size": 4276,
      "diff_lines": 84
    },
    {
      "hash": "20347431aee7960846550538c4d48d11225d28d3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-20T05:54:29.244503",
      "diff_size": 11851828,
      "diff_lines": 208998
    },
    {
      "hash": "2046c30adec194fb07bc5dd1c31fc19a64e7895c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-20T05:54:45.061493",
      "diff_size": 625226,
      "diff_lines": 13810
    },
    {
      "hash": "204dec396b77c0d1240de4466d2d1604dab27a42",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-20T05:56:01.560725",
      "diff_size": 62931,
      "diff_lines": 1338
    }
  ]
}