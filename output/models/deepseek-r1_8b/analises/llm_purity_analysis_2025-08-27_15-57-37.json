{
  "session_info": {
    "start_time": "2025-08-27T15:57:17.684886",
    "end_time": "2025-08-27T17:33:53.539346",
    "total_processed": 181,
    "successful_analyses": 150,
    "failed_analyses": 30,
    "skipped_already_analyzed": 3959,
    "processing_errors": 0
  },
  "analyses": [
    {
      "hash": "adb552217aae9a1b2367fcab78b5cd759059ed0a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve restructuring the code by introducing a new base class XMPPOutputMessage and moving functionality from existing classes to it. This includes modifications to method signatures, addition of conditional logic (checking for JSONNull), and changes in how outputs are handled. Specifically, XMPPCompletedMessage and XMPPLoadAverageMessage now extend XMPPOutputMessage instead of implementing XMPPMessage directly, which alters their behavior by using the overridden canHandle method that checks against a topic attribute. Additionally, new methods like getOutPuts and transformOutputs were introduced with different logic for handling output parameters compared to the original code.",
      "llm_confidence": "medium",
      "project_name": "geoserver",
      "analysis_timestamp": "2025-08-27T15:57:37.575222",
      "diff_size": 25993,
      "diff_lines": 499
    },
    {
      "hash": "adc395910b86512eaa91e661124f0a078290e1c1",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "grails-core",
      "analysis_timestamp": "2025-08-27T15:57:44.275354",
      "diff_size": 285758,
      "diff_lines": 6281
    },
    {
      "hash": "ade0caf3e2587141b842bcc278e928d8f25dc07d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T15:58:41.190680",
      "diff_size": 60242,
      "diff_lines": 1369
    },
    {
      "hash": "adea1b31264cb13da3bca556a98a9f026f4fcfef",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-27T15:59:58.012058",
      "diff_size": 56240,
      "diff_lines": 1249
    },
    {
      "hash": "adf11c179cd312c0d5f179c600f4fd218a342abb",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'isSharedPreference' in ValidatorHelper.java, replacing the existing call to 'extendsType'. This change alters the logic flow by introducing conditional checks for shared preferences. Additionally, PrefValidator.java now uses this new method instead of directly calling 'extendsType', which changes the behavior and adds functional complexity. The addition of a new test case 'htmlInjectedNotNull' in ResActivityTest.java indicates that new functionality is being validated, further supporting FLOSS classification.",
      "llm_confidence": "high",
      "project_name": "androidannotations",
      "analysis_timestamp": "2025-08-27T16:00:07.883762",
      "diff_size": 14666,
      "diff_lines": 320
    },
    {
      "hash": "ae03e1bab709bcadcd973899be04e0c06a7df7a9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T16:00:17.183658",
      "diff_size": 4301688,
      "diff_lines": 97755
    },
    {
      "hash": "ae0620296b39b13d979633b9046e79f0766adc32",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T16:00:30.480127",
      "diff_size": 297365,
      "diff_lines": 6046
    },
    {
      "hash": "ae08426924189f21d15219312c706d10ad54d8b4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-27T16:01:47.143985",
      "diff_size": 71513,
      "diff_lines": 1319
    },
    {
      "hash": "ae2106e61b939502435ec9492e6d87ce32b9a95d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T16:06:56.614363",
      "diff_size": 25166,
      "diff_lines": 683
    },
    {
      "hash": "ae21438d9cdf3cba8c0f645e63a5c84437574d01",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a functional change to the `getSimilarUsers` method by adding conditional logic that filters logins starting with the input string. This behavior modification, along with changes in parameter handling and return value filtering, indicates floss refactoring.",
      "llm_confidence": "high",
      "project_name": "tatami",
      "analysis_timestamp": "2025-08-27T16:07:05.322995",
      "diff_size": 8259,
      "diff_lines": 209
    },
    {
      "hash": "ae306c48bc7ddcd7e9ff2f97ce56cfaf578a6306",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'port()' in multiple classes (Service, Spark) and modifies the 'ignite' method to return an integer. Additionally, it changes the type of the 'model' field from Map<String, Object> to Object across several files, which alters the behavior when accessing model data. The test cases also update their assertions to reflect these changes, indicating functional adjustments.",
      "llm_confidence": "low",
      "project_name": "spark",
      "analysis_timestamp": "2025-08-27T16:07:12.112032",
      "diff_size": 11397,
      "diff_lines": 308
    },
    {
      "hash": "ae3163f17564af99985c194b93754a160088f552",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes involve renaming a method from testNativeCostume to nativeAppCostumeTest and updating the condition in SetCostumeBrick. The new name suggests a change in context, but there is no functional alteration as the logic remains identical: it still checks if imageName is not null before setting the thumbnail. In Values.java, RUNNING_AS_NATIVE_APP was changed from a variable without value to one with default false, which is a structural change only.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T16:07:17.603681",
      "diff_size": 3032,
      "diff_lines": 60
    },
    {
      "hash": "ae6b12010fcde935d99bdcf5847ff0637ec066c9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "astrid",
      "analysis_timestamp": "2025-08-27T16:07:34.746039",
      "diff_size": 123429,
      "diff_lines": 2462
    },
    {
      "hash": "ae77c821574dc59c7ac5c1a63bb552ccc731ea3d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T16:07:44.849560",
      "diff_size": 29009,
      "diff_lines": 823
    },
    {
      "hash": "ae80948025ef336117508c731b508506b650c33b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T16:09:01.082386",
      "diff_size": 152705,
      "diff_lines": 3072
    },
    {
      "hash": "ae840d7031b2320d3b88a55a29dd470eee21da4e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit involves a significant refactoring where multiple files are renamed and moved from the 'components' package to the 'pagefinder' package. While this is primarily structural, several changes indicate functional modifications: new imports of fitnesse.components.TraversalListener in PageFinder subclasses (AttributeWikiPageFinder, RegularExpressionWikiPageFinder, SuiteSpecificationMatchFinder, TitleWikiPageFinder, WhereUsedPageFinder) and their tests suggest integration with a TraversalListener component. Additionally, the SearchReplaceResponder now uses pagefinder.PageFinder instead of components.PageFinder, indicating a change in how PageFinder is utilized or expected to behave.",
      "llm_confidence": "medium",
      "project_name": "fitnesse",
      "analysis_timestamp": "2025-08-27T16:10:28.820512",
      "diff_size": 14763,
      "diff_lines": 347
    },
    {
      "hash": "ae857b4911619cc0f6e3fe9ddf06f6410ad1f087",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'setCredentialFromPemFile' and modifies the setup of properties in multiple test classes. In BaseChefClientLiveTest, it changes from setting validatorIdentity and validatorCredential via system properties to using a different property path with '.validator.identity'. Additionally, UpdateAutomaticAttributesOnNodeImplLiveTest now uses CurrentUserProvider for credential handling instead of hardcoded values. These changes involve new conditional logic (checking for test-specific properties) and modifications in how credentials are retrieved and set, altering the functional behavior by introducing dependency injection and changing the source of automatic attribute data.",
      "llm_confidence": "high",
      "project_name": "jclouds",
      "analysis_timestamp": "2025-08-27T16:10:38.158341",
      "diff_size": 7722,
      "diff_lines": 150
    },
    {
      "hash": "ae95c5dfc8c398aa4359a95bf02f02cfcb49f68c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new conditional logic block in the FileAppender class to handle cases where the parent directory does not exist, attempting to create it and then retrying file creation. This changes the behavior by adding error handling for missing directories (bug 9150). Additionally, the test suite is updated with a new test case for FileAppender, indicating functional testing additions.",
      "llm_confidence": "high",
      "project_name": "log4j",
      "analysis_timestamp": "2025-08-27T16:10:43.907520",
      "diff_size": 3893,
      "diff_lines": 110
    },
    {
      "hash": "aea953c598b5870ebeb00af4a2d1f0fff57c73f6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-27T16:11:00.163070",
      "diff_size": 83142,
      "diff_lines": 1930
    },
    {
      "hash": "aeaab2445e3fcc022ee3d1c92eda8a56dd509b5a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T16:11:36.676324",
      "diff_size": 419337,
      "diff_lines": 9554
    },
    {
      "hash": "aeb4b03bf452aca7b7fddc19cca2d398a9678d33",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "MinecraftForge",
      "analysis_timestamp": "2025-08-27T16:12:32.950864",
      "diff_size": 158172,
      "diff_lines": 3517
    },
    {
      "hash": "aec8dcad901ab74eee15da8d405eeced00cb2dd4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change from 'queryOnly' to 'queryType', which alters the method signature and behavior. The new property allows specifying query type (select or update) with default value set to SELECT, whereas previously it was hardcoded as true for queryOnly. This change affects how the code executes queries versus updates, indicating functional modification rather than pure structural refactoring.",
      "llm_confidence": "high",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-27T16:13:57.403911",
      "diff_size": 5763,
      "diff_lines": 126
    },
    {
      "hash": "aec92bff4f0869f5e6ea45101a9e505d3cbba5a0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in InvertedLeaveTask and JoinTask involve restructuring with functional modifications. The introduction of a conditional check for trace status alters the behavior by changing how tracing is handled, including different log messages based on trace configuration. Additionally, DefaultCacheManager shows significant structural changes but includes new logic for concurrent cache access using locks, which adds functionality to handle multiple threads safely and avoids double initialization.",
      "llm_confidence": "high",
      "project_name": "infinispan",
      "analysis_timestamp": "2025-08-27T16:14:06.923331",
      "diff_size": 15453,
      "diff_lines": 328
    },
    {
      "hash": "aecd71a7b2c74249193e2a4fd0df010a6c3e3e37",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T16:14:18.580376",
      "diff_size": 504999,
      "diff_lines": 10990
    },
    {
      "hash": "aee322f0f7a9221e2dd9aae958afbb4773b496e5",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the diff primarily involve renaming variables and methods from 'scriptActivity' to 'scriptTabActivity'. This is a simple rename that preserves semantics, as all method calls remain identical. The logic flow remains unchanged with no new conditional statements or loops added. There are no modifications to return values, exception handling, or algorithm structure.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T16:17:14.051119",
      "diff_size": 3293,
      "diff_lines": 72
    },
    {
      "hash": "aefc95daf3b1b04161e734765d2bd5d12afeb6b0",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Spout",
      "analysis_timestamp": "2025-08-27T16:17:21.362556",
      "diff_size": 89982,
      "diff_lines": 2438
    },
    {
      "hash": "af1d6538f45e3f73985551aee63581b5d1278d5d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-27T16:17:39.119197",
      "diff_size": 1066274,
      "diff_lines": 23802
    },
    {
      "hash": "af1ef9330f4ef7d4f3618d5c4edc8e49b2b4862a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jna",
      "analysis_timestamp": "2025-08-27T16:18:55.824524",
      "diff_size": 417283,
      "diff_lines": 10521
    },
    {
      "hash": "af395b5f70a60a0e8b7aa0e941dad857cf415c59",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve structural reorganization and code movement without altering functionality. In ModeMainMenu.java, the author's name was updated in comments but no functional changes were made to the methods or variables. The IGameMode interface had a comment removed and version added, which is purely structural. Similarly, Terasology.java only changed variable spacing with no impact on behavior. UIInput.java introduced new methods (setRotateAngle) and internal documentation updates without changing logic. UIDisplayContainer.java updated method names for clarity but the function remains identical. The rest of the changes are comments or minor formatting adjustments.",
      "llm_confidence": "high",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T16:20:22.788052",
      "diff_size": 16342,
      "diff_lines": 519
    },
    {
      "hash": "af5e38c6c485d7e5e8b95c59daf4833734612597",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OpenTripPlanner",
      "analysis_timestamp": "2025-08-27T16:20:32.758879",
      "diff_size": 709926,
      "diff_lines": 12511
    },
    {
      "hash": "af61d0720599519828209b3b5f8ef06f61fe7768",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'SerializationException' which is not present in the previous code. This indicates an addition of functionality, specifically handling serialization errors, thus falling under FLOSS refactoring as it includes structural changes with functional additions. Additionally, several existing classes (Attribute, Attributes, Comment, DataNode, Element, Node, TextNode, XmlDeclaration) have their 'toString' methods renamed to 'html', which is a change in method signature affecting behavior by altering the output format and purpose of these methods.",
      "llm_confidence": "high",
      "project_name": "jsoup",
      "analysis_timestamp": "2025-08-27T16:20:42.294996",
      "diff_size": 15714,
      "diff_lines": 455
    },
    {
      "hash": "af6272a7a35c124000ae6076d565f4c35b7ebdd6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "rest-assured",
      "analysis_timestamp": "2025-08-27T16:20:47.202484",
      "diff_size": 21656,
      "diff_lines": 497
    },
    {
      "hash": "af643cb63c0c389bd52415c15bcb5b3e6f2ca7c5",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the diff primarily involve code formatting and minor structural adjustments. In DetailFragment.java, there is a change from 'title.setText(noteTmp.getTitle())' to 'title.setText(noteTmp.getTitle())', which appears to be a typo fix (missing semicolon). The method signature remains unchanged, no new logic or behavior modifications are introduced. Similarly, NavigationDrawerFragment.java updates the return statement with more explicit conditions but maintains the same functionality by combining two cases into one condition and removing redundant code. UpdaterTask.java refactors the version comparison logic to a single expression without altering its behavior. NotesHelper.java changes variable initialization order for better flow, while AssetUtils.java improves resource handling with try-finally block ensuring proper cleanup. StorageHelper.java adds an exception check but does not change functionality. TextHelper.java updates parameter names and removes unused parameters in method calls, preserving the same logic. DateUtilsTest.java has a commented test case which is purely structural.",
      "llm_confidence": "high",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-27T16:20:56.665984",
      "diff_size": 15074,
      "diff_lines": 360
    },
    {
      "hash": "af71a84fc960331bef9d14105eef052e6abff909",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T16:21:05.030540",
      "diff_size": 27357,
      "diff_lines": 587
    },
    {
      "hash": "af832ffcf5df4ec71aadce9bdd40f4d442ec05c4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jackrabbit-oak",
      "analysis_timestamp": "2025-08-27T16:22:11.398216",
      "diff_size": 217429,
      "diff_lines": 4726
    },
    {
      "hash": "af89a9470b5c6262900f65be96ca398257e7e4f6",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T16:23:28.666825",
      "diff_size": 199169,
      "diff_lines": 5940
    },
    {
      "hash": "af906141c1939ffed7e56c22f01883da3e82f68b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T16:23:39.017025",
      "diff_size": 21694,
      "diff_lines": 495
    },
    {
      "hash": "af9dbb5313b0ed3d7d8e685024938edcdefccc10",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T16:23:46.815977",
      "diff_size": 44286,
      "diff_lines": 1168
    },
    {
      "hash": "afa6ec95b5941bd42c0705e1b910fc8f4ae995f5",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T16:23:56.938157",
      "diff_size": 116136,
      "diff_lines": 1937
    },
    {
      "hash": "afaf73c54941fdee8528108808bbed3207ed0179",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T16:25:06.870862",
      "diff_size": 43053,
      "diff_lines": 972
    },
    {
      "hash": "afe660689a0b74d8b39cd39d2c644fb16c8dedfd",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "BuildCraft",
      "analysis_timestamp": "2025-08-27T16:28:58.119397",
      "diff_size": 35468,
      "diff_lines": 831
    },
    {
      "hash": "afeee2b48d7c63e7f1d58f72522a0c7c6b6d1502",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve restructuring the DirectoryTraversal protection methods and adding a new utility method in StringUtils. However, there are functional modifications: The protectAgainstInClassPath and protectAgainstForExternal methods now use a helper function (removeLeadingAndTrailingSlashesFrom) which was added to handle string normalization before checking against configured paths. This introduces a change in behavior by ensuring the path is properly trimmed of leading/trailing slashes. Additionally, StaticFilesConfiguration's log message now includes the exception's message for better context, altering how errors are logged and potentially affecting debugging output.",
      "llm_confidence": "medium",
      "project_name": "spark",
      "analysis_timestamp": "2025-08-27T16:29:07.284716",
      "diff_size": 10416,
      "diff_lines": 249
    },
    {
      "hash": "aff219fdc47b9e8f971a9f039e8a8917e113156c",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T16:30:14.647385",
      "diff_size": 11378,
      "diff_lines": 283
    },
    {
      "hash": "aff60bd329175908c8361356bbed35fcaba15018",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T16:30:24.962919",
      "diff_size": 328440,
      "diff_lines": 7276
    },
    {
      "hash": "b00f1b94f91119e2db609a7d688b103ed90ffcac",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T16:30:33.327055",
      "diff_size": 820155,
      "diff_lines": 18795
    },
    {
      "hash": "b0292fd6e95e6e207108344f35dcc34e59127c8d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T16:31:49.667137",
      "diff_size": 42594,
      "diff_lines": 1070
    },
    {
      "hash": "b035ceec9efdbead6bed5960f745b5b58df5c9b8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces several changes that alter the behavior of existing methods. In ATNConfig.java, the toString method now returns a different string when context is null (\"[]\" instead of \"$\", and handles parents differently). This change in output for specific inputs indicates a functional modification. Similarly, ArrayPredictionContext.java's toString method now includes parent information conditionally, which changes its behavior compared to before. SingletonPredictionContext.java also modifies the toString method by adding an empty string check, altering how it combines state and parent. These structural changes (renaming methods or modifying their implementations) have a clear impact on functionality as they change what is returned under certain conditions.",
      "llm_confidence": "high",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T16:31:59.196227",
      "diff_size": 8376,
      "diff_lines": 197
    },
    {
      "hash": "b040a09c6239a55ed5e781093000a2236f19b2f7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "openpnp",
      "analysis_timestamp": "2025-08-27T16:32:07.252184",
      "diff_size": 36776,
      "diff_lines": 754
    },
    {
      "hash": "b041ffc0523c6b0cd362b46d67f07a14d4eab18e",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "titan",
      "analysis_timestamp": "2025-08-27T16:32:36.808161",
      "diff_size": 66371,
      "diff_lines": 1345
    },
    {
      "hash": "b043d68211052e31dac24ab2f27dde16d356a784",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T16:33:53.980181",
      "diff_size": 35411,
      "diff_lines": 820
    },
    {
      "hash": "b04b0a6e2293f64685ce5b69be0e0977cc552fb7",
      "purity_classification": "FALSE",
      "llm_classification": "PURE",
      "llm_justification": "The commit primarily updates version numbers and adds new features, but the changes to StorageService.java are mostly structural. The method setMode is renamed from String parameter to Mode enum with additional parameters for logging, which preserves functionality as it's a refactor without altering behavior or adding new logic. Similarly, CollationController.java imports a new class (SizeTieredCompactionStrategy) and adds code that conditionally re-writes read results based on compaction thresholds, but this is part of the functional change introduced elsewhere in the commit for CASSANDRA-2503 (defragment rows). The diff shows multiple changes across files including version updates, new release notes, and minor build configuration adjustments. However, upon closer inspection, the core code modifications are structural reorganizations or renames that do not introduce any functional behavior change.",
      "llm_confidence": "medium",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T16:35:22.460309",
      "diff_size": 14727,
      "diff_lines": 317
    },
    {
      "hash": "b0596c33dcc894f0a661cb282c66f2a9a08a388a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T16:35:29.902448",
      "diff_size": 148102,
      "diff_lines": 2786
    },
    {
      "hash": "b0623245b15654fd0f133170b0c2186d772cdcb5",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "infinispan",
      "analysis_timestamp": "2025-08-27T16:35:53.181274",
      "diff_size": 116578,
      "diff_lines": 2146
    },
    {
      "hash": "b07bf2ff2ae2d26af970fb5ce0bdfde06316af0d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'getPage' which replaces the existing logic in two places. This is not just renaming or simple structural change but adds a conditional check for Executions.getCurrent() and casts it to ExecutionCtrl, altering the behavior by potentially changing how pages are retrieved under certain conditions.",
      "llm_confidence": "high",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T16:38:35.181718",
      "diff_size": 1696,
      "diff_lines": 44
    },
    {
      "hash": "b07c3127cce7e1a8b9d4c34e1359539e12f1b4a7",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T16:38:46.571824",
      "diff_size": 696471,
      "diff_lines": 14677
    },
    {
      "hash": "b094d0f72a1f51a8648e7e194ef19dc0a1e22623",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new function 'expLightValue' and replaces multiple instances of pow() with this function, indicating a change in the algorithm for calculating light values. This is evident from the shader code changes where clamp(light + torchlight) becomes expLightValue(light) + torchlight, altering the way lighting is computed. Additionally, there are modifications to method signatures and logic within Java files (GelatinousCube.java, Player.java, PostProcessingRenderer.java), including parameter adjustments and new conditional structures that affect behavior.",
      "llm_confidence": "high",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T16:38:58.526829",
      "diff_size": 14094,
      "diff_lines": 321
    },
    {
      "hash": "b0961144ea26ebdab07f8011495396a62d96cffe",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "twidere",
      "analysis_timestamp": "2025-08-27T16:39:10.202989",
      "diff_size": 147134,
      "diff_lines": 3985
    },
    {
      "hash": "b09e60f72bb2f37235d9e9190c25db36371b3c18",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T16:40:03.985266",
      "diff_size": 381038,
      "diff_lines": 8050
    },
    {
      "hash": "b0a3d023811e0610fee5fbcf2f6071c2db87a20b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "servo",
      "analysis_timestamp": "2025-08-27T16:41:20.642074",
      "diff_size": 41302,
      "diff_lines": 942
    },
    {
      "hash": "b0a459b22158ceda2f4bf6bfedbd05ad2335e55a",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T16:41:27.372046",
      "diff_size": 22859,
      "diff_lines": 661
    },
    {
      "hash": "b0aa70a0b7812860ccfa61c5b016192d718c682e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T16:41:45.483261",
      "diff_size": 32308,
      "diff_lines": 616
    },
    {
      "hash": "b0ad6283cc99fed12d8d3855d8a8bfcd39550124",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T16:41:54.688430",
      "diff_size": 168885,
      "diff_lines": 2883
    },
    {
      "hash": "b0c5f198fcff96feb5937bf0276b97734c2b7016",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new conditional logic and modifies the structure of the FadingActionBarHelper class, which indicates functional changes. Specifically, it adds a ViewTreeObserver listener that updates header height based on layout changes, and adjusts parameters for parallax effects with additional state variables (mLastScrollPosition, mLastDampedScroll). These structural modifications alter the behavior by introducing new logic to handle scroll events and update margins dynamically.",
      "llm_confidence": "low",
      "project_name": "FadingActionBar",
      "analysis_timestamp": "2025-08-27T16:42:04.345899",
      "diff_size": 11981,
      "diff_lines": 279
    },
    {
      "hash": "b0f0ea407a8ab43b31789d66fa4314604c512fbf",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-27T16:42:12.876970",
      "diff_size": 37386,
      "diff_lines": 974
    },
    {
      "hash": "b1062929185690567e4567e0e657b361c5105482",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T16:43:19.591701",
      "diff_size": 1190105,
      "diff_lines": 25484
    },
    {
      "hash": "b115318bbed3fc3c6aa304c6e6d738eccd805d5f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T16:45:52.061783",
      "diff_size": 32432,
      "diff_lines": 876
    },
    {
      "hash": "b11617e0ef3728e7605ad776e15bbfb1b203c0a8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit includes multiple changes that introduce functional modifications. In the build.gradle, a dependency version is updated from 4.0-beta4 to 4.0, which could imply behavior or compatibility changes. In AsyncLoadBalancingClient.java, the logging level changed from error to debug and the method call was modified with an added variable 'newRequest', potentially altering how errors are logged and handled. Additionally, in LoadBalancerContext.java, a log statement's severity was reduced (warn to debug) but no functional change is evident here. However, given the presence of version updates and logging changes that might affect behavior or error handling, along with other structural changes, this commit contains elements beyond pure refactoring.",
      "llm_confidence": "medium",
      "project_name": "ribbon",
      "analysis_timestamp": "2025-08-27T16:46:02.294337",
      "diff_size": 16826,
      "diff_lines": 314
    },
    {
      "hash": "b11fba750c610de5e97acba070cc571cf0a96416",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T16:46:10.826301",
      "diff_size": 342868,
      "diff_lines": 6809
    },
    {
      "hash": "b1393bde6f5cc5b1b35221cee54c9e32ec8c8611",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "restlet-framework-java",
      "analysis_timestamp": "2025-08-27T16:46:30.332365",
      "diff_size": 42997,
      "diff_lines": 897
    },
    {
      "hash": "b13997e7524e2820919d3079748976d4400ef868",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'handleInterruption' in IngestImageThread and adds property change handling logic to the catch blocks. This changes the behavior by introducing event firing for service completion, cancellation, and exceptions. Additionally, IngestManager is modified to include PropertyChangeSupport and define specific events (SERVICE_STARTED_EVT, SERVICE_COMPLETED_EVT, SERVICE_STOPPED_EVT) with corresponding methods. These additions indicate functional changes as they handle state transitions through property change listeners, which was not present before.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T16:46:39.077081",
      "diff_size": 5904,
      "diff_lines": 143
    },
    {
      "hash": "b13a3163b5fdfb17c86783a69c30e04dc5379a11",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces new methods and constructors that change the way media players are created, particularly by adding parameters to existing constructors. This includes modifications to method signatures (newMediaPlayer and newEmbeddedMediaPlayer) which now require a MediaListPlayer parameter, altering their behavior compared to previous versions. Additionally, there is logic extracted from AudioListPlayerComponent into its subclass CallbackMediaPlayerComponent, changing how video buffers are handled with the addition of conditional checks for imagePainter in the constructor. These changes indicate functional modifications rather than pure structural reorganization.",
      "llm_confidence": "low",
      "project_name": "vlcj",
      "analysis_timestamp": "2025-08-27T16:46:49.617496",
      "diff_size": 19516,
      "diff_lines": 418
    },
    {
      "hash": "b1417748bd4951b678c174a08b5ebc39d6ef9d01",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T16:47:01.738265",
      "diff_size": 54125,
      "diff_lines": 1106
    },
    {
      "hash": "b153d45644b1af0e645fcb3cdc1c835949289e41",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T16:47:54.681336",
      "diff_size": 2721732,
      "diff_lines": 62415
    },
    {
      "hash": "b1c47201799dabb123cad5c95be0fae2ac09eb49",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "restlet-framework-java",
      "analysis_timestamp": "2025-08-27T16:54:11.076968",
      "diff_size": 186187,
      "diff_lines": 4231
    },
    {
      "hash": "b1c578d2e4c8d628a56cf5d5f3a799286ccbf8ae",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method renaming from takeScreenShot to takeScreenshot across multiple classes (FluentTestRunnerAdapter, ConfigurationProperties, FluentDriver, SnapshotControl) and updates related documentation. However, the changes include modifications to the logic within the methods, such as adding new parameters for file handling in ImageUtils and changing exception messages. Additionally, there are performance optimizations by restructuring the screenshot persistence code into a separate method (persistScreenshot). These functional changes, including altered error handling and execution paths, classify this commit as FLOSS.",
      "llm_confidence": "medium",
      "project_name": "FluentLenium",
      "analysis_timestamp": "2025-08-27T16:54:21.016418",
      "diff_size": 16941,
      "diff_lines": 368
    },
    {
      "hash": "b1cc8f0bc1b048d7b2738e4d57b9e828adef6aa6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new parameter 'upgrade' to the init method of ConfigurationHandler, which changes its behavior by conditionally loading config version information and modifying settings based on this flag. This indicates a functional change as it alters how configuration is handled during initialization.",
      "llm_confidence": "high",
      "project_name": "ExtrabiomesXL",
      "analysis_timestamp": "2025-08-27T16:54:28.646865",
      "diff_size": 6517,
      "diff_lines": 124
    },
    {
      "hash": "b1db77fe1107c3b73a08dea2836e0c08e1f88922",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new authentication method using username and password, replacing the traditional accountSid and authToken. This change alters the parameters used in client constructors (TwilioClient, LookupsClient, TwilioPricingClient, etc.), which is a behavioral modification as it changes how credentials are handled. Additionally, there are logic changes such as adding validation checks for null passwords and accountsids, and modifying methods to set request account sid with new values.",
      "llm_confidence": "high",
      "project_name": "twilio-java",
      "analysis_timestamp": "2025-08-27T16:54:40.256573",
      "diff_size": 24378,
      "diff_lines": 613
    },
    {
      "hash": "b1f33a4e5ef436f9250d87ed0194c2ab228abb83",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "grails-core",
      "analysis_timestamp": "2025-08-27T16:54:46.088174",
      "diff_size": 35487,
      "diff_lines": 683
    },
    {
      "hash": "b2024a1a4a86e30b72fd3f358007b91f3802d4ea",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T16:56:02.651630",
      "diff_size": 147630,
      "diff_lines": 2954
    },
    {
      "hash": "b20419fbf3dd6d9da412c95f1c7af8c651e40612",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in Apg.java involve renaming variables and methods, but there are also additions of new conditional logic for RSA_SIGN algorithm. This indicates a functional change as the code now handles additional cases (RSA_SIGN) which were not present before.\",",
      "llm_confidence": "medium\",",
      "project_name": "apg",
      "analysis_timestamp": "2025-08-27T16:56:11.361243",
      "diff_size": 3860,
      "diff_lines": 82
    },
    {
      "hash": "b20f72e1051ce4d837232729380aec3283ca4fb2",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "dubbo",
      "analysis_timestamp": "2025-08-27T16:56:18.488755",
      "diff_size": 69146,
      "diff_lines": 1292
    },
    {
      "hash": "b215636236dfc5f36cd1d45e50b93dd5de815ca6",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a significant refactoring pattern by renaming interfaces and their methods from 'ConnectionStateListner' to 'SuperActConnectionStateListner', 'OnSystemArmListener' to 'SuperActOnSystemArmListener', etc., with the addition of new prefixes like 'saNotify'. This change is not merely structural but alters method signatures, which affects behavior. The renaming changes all calls to interface methods from notify*() to saNotify*, and also renames the listener interfaces in several classes (e.g., AltitudeDialog's OnAltitudeChangedListner becomes SuperActOnAltitudeChangedListner). This indicates a behavioral change as the new method names imply different actions ('saNotifyConnected' vs 'notifyConnected') while maintaining similar functionality. The core functionality remains unchanged, but the interface-based composition is altered to use prefixed interfaces (e.g., SuperActConnectionStateListner) which are then implemented by the abstract base classes.\",",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T16:56:28.908412",
      "diff_size": 11018,
      "diff_lines": 271
    },
    {
      "hash": "b2193457613cb76bfc107d038140071c8674905c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a Closeable interface to JedisCluster, adding a close() method that destroys connection pools. This is a functional change as it implements resource cleanup behavior previously absent in the class. Additionally, changes to ZParams weights from int to double indicate potential behavioral modifications due to different numeric types and scaling factors (e.g., 2 vs 2.5). The test cases also show new conditional logic handling exceptions during close operations.",
      "llm_confidence": "medium",
      "project_name": "jedis",
      "analysis_timestamp": "2025-08-27T16:56:38.226762",
      "diff_size": 12022,
      "diff_lines": 344
    },
    {
      "hash": "b22f939c7937223cec3274020b9b8a05c48a2b61",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-27T16:56:54.639868",
      "diff_size": 73882,
      "diff_lines": 1947
    },
    {
      "hash": "b23b348df95f1403af4bd12ee64e172c8989d858",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "threetenbp",
      "analysis_timestamp": "2025-08-27T16:57:15.404446",
      "diff_size": 27136,
      "diff_lines": 553
    },
    {
      "hash": "b2547b5dc6f255fc6bfe4df887daa138f6106ab6",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a functional change by moving the 'manageLoadAndFinish' method from StageActivity to StageDialog, and modifying how it is called. In StageActivity, the onBackPressed() method now directly calls pauseOrContinue(), which was previously part of manageLoadAndFinish(). Additionally, in StageDialog's backToConstruction() method, instead of performing a series of operations including loading the project and finishing the activity, it simply delegates to stageActivity.manageLoadAndFinish(). This change alters the control flow by centralizing certain actions into public methods. The introduction of new conditional logic (e.g., checking for ProjectManager instance) and modification of how state is managed during transitions indicate a functional shift rather than pure structural refactoring.",
      "llm_confidence": "high",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T16:57:24.458820",
      "diff_size": 3992,
      "diff_lines": 87
    },
    {
      "hash": "b255509e961bfa798e209c4656738b2937d2b1c3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T16:57:34.601123",
      "diff_size": 71267,
      "diff_lines": 1925
    },
    {
      "hash": "b256eb1a1ff45f042a5fbe8a9b2b2af9fe6a7a88",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new GUI manager class (GUIManager) and refactors several menu classes to extend UIDisplayWindow instead of UIDisplayRenderer. This includes adding method calls to GUIManager.getInstance().addWindow() in multiple places, which indicates functional changes by altering how windows are managed. Additionally, the change from ArrayList<UIDisplayElement> to using GUIManager's methods for rendering and updating suggests a shift in behavior beyond simple structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T16:57:44.842035",
      "diff_size": 17430,
      "diff_lines": 505
    },
    {
      "hash": "b266103476f703fc735eaf23665e0604cec7725b",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T16:57:52.964692",
      "diff_size": 70330,
      "diff_lines": 1818
    },
    {
      "hash": "b26dbc632fef0a4afa85e5648c796a98e9d0aca2",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jbake",
      "analysis_timestamp": "2025-08-27T16:57:58.521918",
      "diff_size": 30859,
      "diff_lines": 648
    },
    {
      "hash": "b286639eea11b5f6ee709711d00d36aa029bc114",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T17:03:06.700656",
      "diff_size": 237957,
      "diff_lines": 4975
    },
    {
      "hash": "b28694743d56fa8089fba96f81a76ecd3804babb",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change from 'content' to 'file' in several places, which is more than just renaming. This indicates a functional shift as the code now handles AbstractFile objects differently. Additionally, there are changes in conditional logic and method calls that alter how text extraction works for different artifact types (keyword hits vs credit card accounts). The introduction of new conditions and variable names without direct structural justification suggests behavioral modifications.",
      "llm_confidence": "medium",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T17:03:16.875066",
      "diff_size": 11593,
      "diff_lines": 243
    },
    {
      "hash": "b2880b851297d48af6ebb55c9f6c24e7186d5324",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Terasology",
      "analysis_timestamp": "2025-08-27T17:03:27.422171",
      "diff_size": 214620,
      "diff_lines": 4814
    },
    {
      "hash": "b290534f07829404e72692df15f3fd119273c7f8",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T17:03:34.036391",
      "diff_size": 22500,
      "diff_lines": 452
    },
    {
      "hash": "b290b8a47e588bd4005f712e84bf384417f646ed",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'BufferedResponseCallback' and removes the existing one, indicating a structural change. However, it also changes method signatures from using FullResponseCallback to BufferedResponseCallback in multiple files (AsyncLoadBalancingClient.java, ObservableAsyncClient.java, RibbonHttpAsyncClient.java). This is more than just renaming or simple movement; it involves changing the type of callback used, which likely affects how responses are handled. Additionally, there's a change in the import statements and references to the new class, suggesting that this refactor includes functional modifications.",
      "llm_confidence": "medium",
      "project_name": "ribbon",
      "analysis_timestamp": "2025-08-27T17:03:42.768148",
      "diff_size": 7113,
      "diff_lines": 133
    },
    {
      "hash": "b2a027b332a4a9440486e5d5d122df39ca2c5f72",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "openpnp",
      "analysis_timestamp": "2025-08-27T17:03:54.906909",
      "diff_size": 25761,
      "diff_lines": 646
    },
    {
      "hash": "b2a4bb91a776fdba05356d298b9545883f02a4db",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "antlr4",
      "analysis_timestamp": "2025-08-27T17:04:31.606660",
      "diff_size": 33424,
      "diff_lines": 909
    },
    {
      "hash": "b2af45a5a592e434e6fcbd21deece4961b220bfd",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Omni-Notes",
      "analysis_timestamp": "2025-08-27T17:05:48.334055",
      "diff_size": 80386,
      "diff_lines": 1998
    },
    {
      "hash": "b2cfa597545d332c8563f4bd51d48f384e508327",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T17:08:31.240388",
      "diff_size": 20982,
      "diff_lines": 581
    },
    {
      "hash": "b2d8e88217d0532d54cba0cfae8ab6951df66f35",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T17:08:46.782167",
      "diff_size": 8289001,
      "diff_lines": 182910
    },
    {
      "hash": "b2f0b672b76635c1f055730a911358e4ef10ac34",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "zk",
      "analysis_timestamp": "2025-08-27T17:08:54.965878",
      "diff_size": 24481,
      "diff_lines": 658
    },
    {
      "hash": "b2f2e0b100e3e95ac7d329279acf851f2dc51983",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a method signature change in the 'like' method by removing unnecessary parameters, which alters its behavior. Additionally, it adds new conditional logic to handle specific wildcard patterns (e.g., single '*' at end) and modifies exception handling for nodeName queries. The test file also includes new assertions for different query patterns, indicating functional changes.",
      "llm_confidence": "high",
      "project_name": "jackrabbit-oak",
      "analysis_timestamp": "2025-08-27T17:09:03.495655",
      "diff_size": 4527,
      "diff_lines": 73
    },
    {
      "hash": "b2fa42b8fca13e5f44025fb76b270ef8b9733eb8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "facebook-android-sdk",
      "analysis_timestamp": "2025-08-27T17:09:11.571110",
      "diff_size": 131981,
      "diff_lines": 2995
    },
    {
      "hash": "b2fe1d43c9e4026247e432c41195af53e7cf674e",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new method 'newOutput' and 'newEmptyOutput' in CalculatorOutputImpl, which changes the constructor's parameter requirements (now allowing null for result) while preserving functionality. This is a structural change but with behavioral implications due to the addition of conditional logic in comments about error handling. Additionally, it removes several files including AndroidManifest.xml, pom.xml, and service-related classes, indicating a shift from an apklib-based service structure to a different approach (likely direct integration). The removals are not just code movement; they represent changes in how the application is built and managed.",
      "llm_confidence": "low",
      "project_name": "android-calculatorpp",
      "analysis_timestamp": "2025-08-27T17:09:22.410144",
      "diff_size": 19279,
      "diff_lines": 475
    },
    {
      "hash": "b309046848a7227a208bd802d3cccbcb18b591a3",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jmeter",
      "analysis_timestamp": "2025-08-27T17:09:30.787137",
      "diff_size": 28834,
      "diff_lines": 757
    },
    {
      "hash": "b30d76e9d7bdd3b9a97c857e82426ccd56616a7d",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "jolokia",
      "analysis_timestamp": "2025-08-27T17:09:39.633423",
      "diff_size": 66436,
      "diff_lines": 1343
    },
    {
      "hash": "b30f0e703ce80cee82ea8382b8eed98c2be57cd0",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T17:10:56.680770",
      "diff_size": 662873,
      "diff_lines": 18254
    },
    {
      "hash": "b31845c4a7982358a7c5bfd9bcf572fda6c1bfa9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T17:12:14.706609",
      "diff_size": 4730476,
      "diff_lines": 105855
    },
    {
      "hash": "b31ac4779486b15de05057c28c8f768bfc23c65a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'ParameterMetadataMap' and refactors the existing code to use this class instead of directly managing metadata. This includes renaming methods from loadMetaData to loadMetadata, getMetaData to getMetadata, and parseMetaData to parseMetadata (though not all changes are explicit). Additionally, it adds two new classes for handling XML parsing: ParameterMetadataMapReader and a renamed version of the existing map structure. The method signatures change with 'loadMetadata' now using 'Context context' instead of just 'Context', but more importantly, the logic within these methods is altered to use different internal structures (HashMap vs custom class). This constitutes a structural change that alters how metadata is loaded and accessed, indicating functional changes.",
      "llm_confidence": "medium",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T17:12:24.151027",
      "diff_size": 12338,
      "diff_lines": 297
    },
    {
      "hash": "b31e172f13e7aece063e5f385e9cd68b338aabcd",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The commit introduces a new implementation of IntervalSelector by refactoring it from an abstract class to extend BorderPane and adding FXML integration. The core functionality remains unchanged, with the same methods (adjustInterval, formatSpan, parseDateTime) still being abstract hooks. Changes include updating imports and adjusting how the selector is instantiated in TimeLineChart.java, but these are structural improvements without altering behavior.",
      "llm_confidence": "high",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T17:12:34.604299",
      "diff_size": 25225,
      "diff_lines": 620
    },
    {
      "hash": "b334e6793442975a2c313e735b566572c8780206",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new interface IConfiguredReporter and modifies XMLReporter to implement it, changing its behavior by adding the ability to use getConfig() for object-based configurations. This includes handling reporter configuration differently based on type, which alters how configurations are retrieved and potentially impacts functionality.",
      "llm_confidence": "high",
      "project_name": "testng",
      "analysis_timestamp": "2025-08-27T17:12:42.827202",
      "diff_size": 3872,
      "diff_lines": 94
    },
    {
      "hash": "b34608228f0b55e401415b67b8150ca9e00cee7d",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "platform_packages_apps_email",
      "analysis_timestamp": "2025-08-27T17:12:58.895473",
      "diff_size": 251351,
      "diff_lines": 4365
    },
    {
      "hash": "b358b588368e3ffb762a0c2402f5d21e6f24cac9",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T17:13:09.841737",
      "diff_size": 117751,
      "diff_lines": 2497
    },
    {
      "hash": "b35b871d1f50a8a0cf383d443f0d4c9910ad1577",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'ColumnSortInfo' and modifies the sorting logic by using column names instead of identifiers. This changes how sort information is stored and retrieved, affecting behavior. Additionally, it updates references to use ov.getOutline() methods directly, which may alter the state management during load/sort operations.",
      "llm_confidence": "medium",
      "project_name": "autopsy",
      "analysis_timestamp": "2025-08-27T17:13:18.311888",
      "diff_size": 8816,
      "diff_lines": 162
    },
    {
      "hash": "b35d8c7f9847881666d66d53caab7e02e4c7ba5b",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T17:13:26.065030",
      "diff_size": 29430,
      "diff_lines": 750
    },
    {
      "hash": "b3665f7a18702df6382c0f4405b283502c527999",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes primarily involve renaming and refactoring method calls for URL encoding, with no functional alterations. The deprecated annotation is removed from Util.encode(), but the behavior remains unchanged as rawEncode() handles other unsafe characters appropriately. In AbstractItem, View, and User classes, the absolute URL computation now uses Hudson.getInstance().getRootUrl() instead of Stapler's root path combined with URL, which maintains identical logic by leveraging a more reliable method for constructing URLs in non-HTTP contexts.",
      "llm_confidence": "high",
      "project_name": "hudson",
      "analysis_timestamp": "2025-08-27T17:13:35.968748",
      "diff_size": 8068,
      "diff_lines": 163
    },
    {
      "hash": "b36e4d439bbe034828ae3583c53c367089e9ccd8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "GCViewer",
      "analysis_timestamp": "2025-08-27T17:14:54.403978",
      "diff_size": 140043,
      "diff_lines": 3230
    },
    {
      "hash": "b37ebc372eda69547dbe245b7107d23f408732cf",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "hornetq",
      "analysis_timestamp": "2025-08-27T17:16:27.266881",
      "diff_size": 59107,
      "diff_lines": 1478
    },
    {
      "hash": "b3817177b5dc05e8639133df51922039c44c1ff8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change in the Memtable class where 'binary_memtable_throughput_in_mb' is replaced by 'memtable_operations_in_millions' and 'memtable_throughput_in_mb'. Additionally, it updates the memtable_throughput property to be a long value. These changes involve modifying method parameters or return types for functionality related to memory thresholds in Memtable initialization, which falls under FLOSS indicators due to potential behavioral impact on system performance metrics.",
      "llm_confidence": "medium",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T17:16:37.386805",
      "diff_size": 12340,
      "diff_lines": 321
    },
    {
      "hash": "b3842de5cf1fa1b81872effb4585fbc7e1873d59",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T17:17:03.777935",
      "diff_size": 428525,
      "diff_lines": 9288
    },
    {
      "hash": "b38ca2879cf1cbf5de17e1912772b6588eaa7de6",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T17:17:13.914004",
      "diff_size": 193649,
      "diff_lines": 4367
    },
    {
      "hash": "b391600dcece42b77ae73cb6cb48c5ab56849c72",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T17:18:31.067975",
      "diff_size": 81382,
      "diff_lines": 1890
    },
    {
      "hash": "b39bd2058453b1236b1f59784f68321681e53e02",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "graylog2-server",
      "analysis_timestamp": "2025-08-27T17:21:08.122503",
      "diff_size": 19487,
      "diff_lines": 405
    },
    {
      "hash": "b39d984f7bd682c7638415d65dcc4ac9bcb74e5f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T17:21:16.653701",
      "diff_size": 12215656,
      "diff_lines": 278035
    },
    {
      "hash": "b3a2f0ee52aceeb84f336b79389117fe2d2c490f",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "OG-Platform",
      "analysis_timestamp": "2025-08-27T17:21:28.869452",
      "diff_size": 1371523,
      "diff_lines": 20847
    },
    {
      "hash": "b3a929006ac3c875aeeba9b3c8d6c22f903d9572",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new class 'BeanshellSourceTemplate' which extends TileSourceTemplate, replacing the existing 'BeanShellTileSourceTemplate'. This change includes modifications to method signatures and parameters (e.g., constructor now takes tileScript instead of urlToLoad), indicating functional changes. Additionally, there are behavioral differences in how properties are handled: the old code used 'init_script' for BeanShell, while the new uses 'tile_script', suggesting a shift in implementation logic.",
      "llm_confidence": "medium",
      "project_name": "Osmand",
      "analysis_timestamp": "2025-08-27T17:21:38.178354",
      "diff_size": 5227,
      "diff_lines": 120
    },
    {
      "hash": "b3b7a97af27d3ac99efc5f288f99dd16ed760104",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a change from using PgTable to PgRelation in the parseAlterColumn method, which is part of a larger restructuring. This indicates a potential behavioral shift as the code now handles both tables and views uniformly under the new interface. Additionally, the parseView method was renamed or restructured (though not directly shown here) and its functionality aligns with the changes made to handle default values via PgRelation's getColumn method, which may imply broader functional adjustments.",
      "llm_confidence": "medium",
      "project_name": "apgdiff",
      "analysis_timestamp": "2025-08-27T17:21:44.733743",
      "diff_size": 9796,
      "diff_lines": 229
    },
    {
      "hash": "b3c3efb04e7d014459f5d6b0ad9cafa26edf02ff",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "androidannotations",
      "analysis_timestamp": "2025-08-27T17:23:05.038530",
      "diff_size": 716030,
      "diff_lines": 13289
    },
    {
      "hash": "b3cc9e1e992ad98aa70a55d154e554676c41906c",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in the diff primarily involve renaming methods and variables without altering their functionality. In EditorActivity.java, 'removeWaypoint' is renamed to 'removeItem', which now calls a method with the same name change pattern from MissionRender.java. The new method names align with the updated class structure where 'MissionItemRender' is used consistently throughout the codebase for mission items.",
      "llm_confidence": "high",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T17:24:30.328739",
      "diff_size": 2474,
      "diff_lines": 57
    },
    {
      "hash": "b3ceef4f9f0b53014cf1974dd6e4545694008658",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-27T17:24:39.969318",
      "diff_size": 77365,
      "diff_lines": 1772
    },
    {
      "hash": "b3f56e20b2a20a6e7a423c80e6bf94c92e5eb665",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-27T17:24:57.468993",
      "diff_size": 206754,
      "diff_lines": 5238
    },
    {
      "hash": "b40cbc0a67c0109f9ccabcc224e08ff9832ad723",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a new interface 'ExecutionResult' and modifies the method signature of 'executeWithBackupRequests'. The addition of this interface includes methods that change behavior, such as returning a Multimap<URI, Future<S>> which is not present in the original parallelExecute method. Also, there are changes to exception handling and return types, indicating functional modifications.",
      "llm_confidence": "high",
      "project_name": "ribbon",
      "analysis_timestamp": "2025-08-27T17:25:06.928235",
      "diff_size": 19487,
      "diff_lines": 384
    },
    {
      "hash": "b4111ef1a0e91b5409838ae6abd7c7c984e2aaa1",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit involves renaming several variables and methods related to text color preferences from 'fail' to 'failing' prefixes, which changes the method signatures (FLOSS indicator 1). Additionally, there are changes in preference constants and test cases that reference these new names. The logic flow remains similar but with functional adjustments due to the changed naming convention affecting how colors are set and retrieved for text display.",
      "llm_confidence": "medium",
      "project_name": "infinitest",
      "analysis_timestamp": "2025-08-27T17:25:16.310953",
      "diff_size": 9910,
      "diff_lines": 180
    },
    {
      "hash": "b4133f38d5ef5fc50047eb4a31307ac97c5b72ee",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T17:25:29.979657",
      "diff_size": 2473073,
      "diff_lines": 53753
    },
    {
      "hash": "b43239823ee1373ab7de1ae972709ca75db3b4d4",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces a dependency injection change by replacing multiple parameters in the constructor and several methods with fewer, more cohesive ones. This refactoring includes behavioral changes as it alters how dependencies are provided (via init method instead of direct constructor) and likely affects system interactions due to potential differences in initialization logic.",
      "llm_confidence": "medium",
      "project_name": "iri",
      "analysis_timestamp": "2025-08-27T17:26:54.471199",
      "diff_size": 11886,
      "diff_lines": 222
    },
    {
      "hash": "b43446c9e36f74e758aac9ae198e203091968fd9",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The commit introduces several changes that alter the functionality of the TipsManagerTest class. The test methods are renamed and modified to use new patterns, such as 'updateLinearRatingsTestWorks' replacing multiple old tests with a single method containing different assertions. Additionally, there is a change in how cumulative weights are calculated by introducing recursive calls like 'recursiveUpdateRatings'. These changes include modifications to the logic flow (e.g., adding loops and conditionals) and altering method signatures or parameters which fall under FLOSS indicators.",
      "llm_confidence": "high",
      "project_name": "iri",
      "analysis_timestamp": "2025-08-27T17:27:05.850687",
      "diff_size": 24087,
      "diff_lines": 378
    },
    {
      "hash": "b44defde7968f35d87b289125093ad4c7660d382",
      "purity_classification": "NONE",
      "llm_classification": "PURE",
      "llm_justification": "The changes in this diff primarily involve code movement and renaming without altering the functional behavior. The method 'createOverridingProperties' is introduced, but it directly replaces an existing call to createOverridingProperties(), indicating a refactor for better organization or clarity.",
      "llm_confidence": "high",
      "project_name": "maven-plugins",
      "analysis_timestamp": "2025-08-27T17:27:13.427403",
      "diff_size": 1412,
      "diff_lines": 26
    },
    {
      "hash": "b455a0f946fd371d3d618fd01487108142c6a056",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "droidplanner",
      "analysis_timestamp": "2025-08-27T17:28:04.805809",
      "diff_size": 77951,
      "diff_lines": 2059
    },
    {
      "hash": "b4590a5c1ef657ed2338441349633500ec9b3a60",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "poi",
      "analysis_timestamp": "2025-08-27T17:28:25.893373",
      "diff_size": 211244,
      "diff_lines": 3302
    },
    {
      "hash": "b46edb9bf2f44a66bfe9621d5d325777cd50bf11",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "graylog2-server",
      "analysis_timestamp": "2025-08-27T17:29:43.121908",
      "diff_size": 298443,
      "diff_lines": 7108
    },
    {
      "hash": "b4706623fbf284cd46602c821d2ef3dab6fe2c99",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in DefaultSendBehavior.java and Message.java introduce functional modifications. In DefaultSendBehavior, the condition for using RCON changed from message.size() to message.estimateSize(), which alters the behavior by potentially changing when messages are sent via relay or direct methods. Similarly, in Message.java, the size method was renamed to estimateSize and its implementation now includes a constant addition (1000 bytes) for dataMapList and trackerDataList, indicating that it no longer accurately reflects the actual message size but estimates it with added constants. This change affects the logic of determining send behavior as well as any code relying on accurate size calculations.",
      "llm_confidence": "high",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T17:29:52.201935",
      "diff_size": 5528,
      "diff_lines": 169
    },
    {
      "hash": "b475bc69b7e6d08e6d12527578552e67e8c0f88a",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T17:30:04.581819",
      "diff_size": 1424698,
      "diff_lines": 33127
    },
    {
      "hash": "b4764f61646ad56383eb884a6ca6e562b458aa65",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes include multiple modifications that alter functionality. In EchoServer.java, the bind method now includes an awaitUninterruptibly and rethrows exceptions if failed, changing behavior by adding synchronization and error handling. AbstractChannel.java introduces a new variable 'closed' replacing 'closeIfClosed', which affects how channel closure is handled, including conditional closures based on different criteria. DefaultChannelFuture.java changes the rethrowIfFailed method to throw an exception instead of returning when not done, altering its purpose from checking status to enforcing failure handling. NioServerSocketChannel.java updates the interestOps during registration and adds a condition for OP_ACCEPT. These changes involve behavioral modifications such as new conditional logic (e.g., 'if (!connected)') and altered method signatures.",
      "llm_confidence": "high",
      "project_name": "netty",
      "analysis_timestamp": "2025-08-27T17:30:15.441393",
      "diff_size": 8923,
      "diff_lines": 202
    },
    {
      "hash": "b4872d5129e578be7ccaa5c4451d9591f6612498",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in the diff include several modifications that introduce functional behavior. In ViaRoutingWorker.java, the method 'route()' now uses a new RoutingError and RoutingValidationException with specific input fields for error handling, which alters the exception throwing mechanism. Additionally, the predicate method is renamed to withinSlackTest and its logic remains unchanged, but this change in name alongside structural updates indicates a refactor that may have functional implications due to context changes. In RouteViaRequest.java, there are significant additions of new parameters (searchWindow, dateTime, etc.) with corresponding getters/setters, which directly add functionality by allowing more detailed trip constraints. The introduction of these new fields and methods for handling them represents an expansion in capabilities rather than pure structural reorganization.",
      "llm_confidence": "medium",
      "project_name": "OpenTripPlanner",
      "analysis_timestamp": "2025-08-27T17:30:26.254079",
      "diff_size": 15204,
      "diff_lines": 417
    },
    {
      "hash": "b495dd915f936552afc022a99359ab551a80a014",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T17:30:41.221838",
      "diff_size": 840107,
      "diff_lines": 17081
    },
    {
      "hash": "b4a6418d1c3b9b14998e75db82a2dfddc3dd2ea8",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "MinecraftForge",
      "analysis_timestamp": "2025-08-27T17:30:51.545796",
      "diff_size": 94447,
      "diff_lines": 2370
    },
    {
      "hash": "b4b25e10d3c9e732f3ba4f6bc5ff5a13afa4b664",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes in this diff include a significant restructuring of the PocketAuthProvider class, replacing its extends from OAuth2AuthProvider with an interface implementation. This introduces new method signatures and logic for handling authentication parameters, including modifications to how request tokens are obtained (using WS calls instead of simple query strings) and potential behavioral changes due to altered parameter processing.",
      "llm_confidence": "high",
      "project_name": "play-authenticate",
      "analysis_timestamp": "2025-08-27T17:30:59.928545",
      "diff_size": 7270,
      "diff_lines": 188
    },
    {
      "hash": "b4b30cf87cbf3f7957c64f625f0f90d24b43b49c",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "The changes involve adding new metrics and modifying read repair logic, indicating functional modifications. Specifically, the addition of ReadRepairMetrics in AbstractReadExecutor.java and its usage to mark an attempted repair adds monitoring functionality without changing core behavior.",
      "llm_confidence": "medium",
      "project_name": "cassandra",
      "analysis_timestamp": "2025-08-27T17:31:05.525764",
      "diff_size": 4032,
      "diff_lines": 72
    },
    {
      "hash": "b4b39902b9ba066b999cc21f5c239185cfa330db",
      "purity_classification": "FALSE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "Catroid",
      "analysis_timestamp": "2025-08-27T17:32:10.049314",
      "diff_size": 57970,
      "diff_lines": 1311
    },
    {
      "hash": "b4c26dc9db8ddf485b5c378ee9e6a178d05b5711",
      "purity_classification": "NONE",
      "llm_classification": "FLOSS",
      "llm_justification": "Analysis failed - insufficient data",
      "llm_confidence": "low",
      "project_name": "TomP2P",
      "analysis_timestamp": "2025-08-27T17:32:35.512724",
      "diff_size": 55629,
      "diff_lines": 1103
    }
  ]
}