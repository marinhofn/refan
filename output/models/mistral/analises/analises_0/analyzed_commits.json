[
    {
        "repository": "https://github.com/geoserver/geoserver",
        "commit_hash_before": "23ece8c39896c311c7cb93efe84c982599e0c007",
        "commit_hash_current": "c25c5992803eea7447c308dc01c4f7b0480f2eb7",
        "refactoring_type": "pure",
        "justification": "The commit introduces new files for testing and adds a template loader class to the HTMLFeatureInfoOutputFormat class. However, it doesn't seem to alter any existing functionality or behavior. Instead, it appears to be a refactoring aimed at improving test coverage and code structure.",
        "commit_message": "[GEOS-5840] Changing the default style of a layer won't cause truncation of the tile caches for layer groups containing the layer, and, [GEOS-4760] Make GWC tile layers use the GeoServer layer's http caching settings"
    },
    {
        "repository": "https://github.com/serso/android-calculatorpp",
        "commit_hash_before": "0c698a6d3934c003149d3a90e396c6c21434edb3",
        "commit_hash_current": "d0fe0ca012b5f6a7036ae8aaeae0dd20c0aa8f1a",
        "refactoring_type": "pure",
        "justification": "The commit primarily consists of refactoring changes such as renaming variables, methods, and classes without affecting their behavior. Additionally, there are no apparent bug fixes or additions of new features in the provided code diff. The main focus is on organizing and structuring the existing code while maintaining its functionality.",
        "commit_message": "New architecture"
    },
    {
        "repository": "https://github.com/apache/log4j",
        "commit_hash_before": "d3b996cbbb3a726dcadb851ee753648d9c77337a",
        "commit_hash_current": "b8b2d434de426995aa4dd9d563dba3f314d2b05d",
        "refactoring_type": "pure",
        "justification": "The code changes are purely structural, with no evidence of functional or behavioral modifications. The changes include renaming 'category' to 'logger', which does not affect the functionality, and adding a new test case for handling CDATA sections in log messages. This can be considered as a refactoring aimed at improving readability and maintaining code organization, without impacting the overall system functionality.",
        "commit_message": "The commit of 1.2branch with the trunk. Things seem to have went\nrelatively well. Conflicts were quickly resolved. The resulting code\nbuilds and passes all existing tests.\n\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/logging/log4j/trunk@309641 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/log4j",
        "commit_hash_before": "57b5f0f56b11bbcc0e8aa51b32e3a3f5102c43e1",
        "commit_hash_current": "16fbd1436b274a302aaa979ece735fca52071158",
        "refactoring_type": "pure",
        "justification": "The changes in the commit primarily involve adding a new class (SunReflectFilter) and including it in various filters. However, this addition does not seem to alter the existing functionality of the code as it is being added as an optional filter. Existing filters remain unchanged, and there are no evident behavior or output modifications. Therefore, it appears to be a 'pure' refactoring.",
        "commit_message": "Added SunReflectFilter.java which removes stack trace lines containing the pattern\n\n/at sun.reflect/\n\nThis filter has been added to many of our existing test cases in order to\ncompensate the differences between JDK 1.3 and JDK 1.4 allowing them to run\non both platforms indiscriminately.\n\nTest failures that have been occuring since gump moved to JDK 1.4 should not disappear.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/logging/log4j/trunk@309669 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/maven-plugins",
        "commit_hash_before": "96127d30009e95ca1ad1969f88ec3021f45c314d",
        "commit_hash_current": "18bfeea8fa7d7d272ff44ebf3cb94ad8094a5f8e",
        "refactoring_type": "pure",
        "justification": "The commit does not introduce any functional changes or bug fixes, but instead updates the version numbers of several dependencies and modifies some parameters within MavenProject-related classes. These changes focus only on improving code structure and maintainability without affecting behavior or functionality. This qualifies the commit as 'pure' refactoring.",
        "commit_message": "o check if plugin version is defined\no refactor the report execution, it use only the MavenReportConfiguration\no obtain reports list via reportManager.getReports\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk/maven-plugins/maven-site-plugin@165232 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/maven-plugins",
        "commit_hash_before": "18bfeea8fa7d7d272ff44ebf3cb94ad8094a5f8e",
        "commit_hash_current": "80cd6ec4b310f0eb19ad0099b1f18158ce213f8e",
        "refactoring_type": "pure",
        "justification": "In the provided code diff, there are no apparent changes to behavior or functionality. The additions of a new dependency (maven-reporting-api) and minor changes in import statements do not seem to impact the existing functionalities. Additionally, there are no bug fixes or modifications to existing methods' outputs. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "Initial version of site generation with repots.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk/maven-plugins/maven-site-plugin@168031 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/jmeter",
        "commit_hash_before": "507744c5149943fe1ebd19b0c14759c295c01d41",
        "commit_hash_current": "2b7d644d8e3da043e44f85c72b48d8fa7faffd73",
        "refactoring_type": "pure",
        "justification": "The commit introduces new constants (ONETIMESETUP and ONETIMETEARDOWN) in the JUnitTestSamplerGui.java file, but there are no changes to existing methods or behavior. Additionally, in JUnitSampler.java, the changes relate solely to removing comments and modifying the inheritance of the class (removing TestListener), which does not affect functionality. These changes fall under pure refactoring as they only improve code structure without modifying behavior.",
        "commit_message": "changed the implementation for oneTimeSetup and oneTimeTearDown. Since these\ntwo methods should only be called once, it doesn't make sense to call it per class\ninstance. Instead, I've made the GUI include the method so that test plans can\ncreate a thread group to call it once.\npeter\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/jmeter/trunk@325578 13f79535-47bb-0310-9956-ffa450edef68\n\nFormer-commit-id: 77a02c441664905673ac1dee3dcdddef43cc6678"
    },
    {
        "repository": "https://github.com/apache/jmeter",
        "commit_hash_before": "bc241df80b55f4184eee6ba60ccfa33a2c8324b7",
        "commit_hash_current": "36af80b4ffbaea39563c24a12abec1f3ccba9dc8",
        "refactoring_type": "pure",
        "justification": "In this commit, the code refactoring involves replacing a block of code that creates a TestCase instance using reflection with a call to a static method `getClassInstance(className)` in another class `JUnitSampler`. This change simplifies the code by removing instances of `Class.forName`, `Constructor`, and `newInstance`. Additionally, the new method also handles both constructor scenarios (empty and string constructor) as compared to the old approach which only attempted to create an instance using the empty constructor initially. However, this refactoring does not change any behavior or functionality of the code, making it a 'pure' refactoring.",
        "commit_message": "updated the junitsampler so it correctly handles classes that do not declare an\nempty constructor, or declare the empty constructor private. If a class does\neither case, the sampler will log it and attempt to create a new instance with\nstring constructor. if both fail, it isn't a valid JUnit test.\npeter\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/jmeter/trunk@325582 13f79535-47bb-0310-9956-ffa450edef68\n\nFormer-commit-id: fc4bba760eb1163b6d15a2ed1af5706580644319"
    },
    {
        "repository": "https://github.com/apache/struts",
        "commit_hash_before": "92184a6850fdffb6d543bc85e26f058c2fd6a0ea",
        "commit_hash_current": "f111ea4bbb64d37743e408158f326d1e2211d659",
        "refactoring_type": "pure",
        "justification": "The commit appears to contain only structural changes in the code without any functional modifications. For example, some files have been removed (tree-1.txt and tree-2.txt) and a new one added (tabcontainer-1.txt), but none of these alterations seem to affect the behavior or functionality of the Struts application. There are no bug fixes, addition of new features, or changes in method signatures or behavior observed.",
        "commit_message": "WW-1607 Separate dojo-related tags into their own plugin\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/struts2/trunk@514082 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/struts",
        "commit_hash_before": "de09c2ca535757a0b94564a3ecfb4e019d65c7a2",
        "commit_hash_current": "65131d66a5d94cc27fcc82853ed5a6465069a9a3",
        "refactoring_type": "pure",
        "justification": "The commit does not seem to include any changes that would affect the behavior or functionality of the code. The class names, method names, and variable names have been changed, but their function appears to remain unaltered. This is consistent with a pure refactoring.",
        "commit_message": "Move classes to \"dojo\" package so they don't conflict with the ones from core \n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/struts2/trunk@514940 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/mvel/mvel",
        "commit_hash_before": "8d9162641d57a2dc311c1f20096fedb67d7fa717",
        "commit_hash_current": "9a41ef646e7390648f99a14a57e749a39cf38bfa",
        "refactoring_type": "pure",
        "justification": "The commit primarily focuses on simplifying the conditional statement in the code, changing `tkOp2.getOperator() < 12` to `tkOp2.getFields() != -1 && tkOp2.getOperator() < 12`. This change does not affect the behavior or functionality of the code and is considered a pure refactoring.",
        "commit_message": "regression in token generation broken across lines fixed."
    },
    {
        "repository": "https://github.com/mvel/mvel",
        "commit_hash_before": "7dff76656c69c4284093f5abe37569543ddefc4c",
        "commit_hash_current": "d53cd741b230add70cea04f99b5ff296c5210d98",
        "refactoring_type": "pure",
        "justification": "The commit seems to contain only structural changes such as renaming classes, variables and methods, as well as some refactoring of the codebase without affecting its behavior or functionality.",
        "commit_message": "improvements to interpeted mode.  removed inappropriate fallbacks to compiled mode."
    },
    {
        "repository": "https://github.com/zkoss/zk",
        "commit_hash_before": "b9d1c196a2306a27ad488839f44556b7744b2290",
        "commit_hash_current": "411107483dc3e376decacd09d0852b18775fca11",
        "refactoring_type": "pure",
        "justification": "The commit diff contains several changes that involve renaming variables, methods, and files without altering their functionality. For example: the version number in MANIFEST.MF and lang-addon.xml is updated from '3.0.0' to '3.0.1', and the package name for Version.java is changed from 'org.zkoss.zkplus.databind' to 'org.zkoss.zkplus'. Additionally, a new package.html file is added with no changes to existing code that could affect behavior. Therefore, the commit represents a pure refactoring.",
        "commit_message": "git-svn-id: https://svn.potix.com/svn/zk1/branches/3.0@5246 dd50bd9b-9913-0410-b9ba-e07a3075be86"
    },
    {
        "repository": "https://github.com/zkoss/zk",
        "commit_hash_before": "30dd53a1211c2a866f4a623d5c179e50153fa5b1",
        "commit_hash_current": "81ab8a16c3f6f7c56b15e440bc23db19426d1fb0",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new class UiTag, which is a user-defined component tagging feature. However, it does not seem to alter the existing functionality or behavior of the codebase. Instead, the changes are primarily structural, such as adding a new class and methods, but without any apparent change in how the system functions. Therefore, I classify this commit as 'pure' refactoring.",
        "commit_message": "git-svn-id: https://svn.potix.com/svn/zk1/trunk@5353 dd50bd9b-9913-0410-b9ba-e07a3075be86"
    },
    {
        "repository": "https://github.com/apache/poi",
        "commit_hash_before": "df528aa4630441dd675d640e3f57fb8e63df7eaf",
        "commit_hash_current": "e04ac3122e1c32eb1a0b67f680fb6a3ed975ec18",
        "refactoring_type": "pure",
        "justification": "The commit adds new functionality for handling named ranges with special characters in print areas and union area expressions. However, it does not alter the existing behavior or functionality of the codebase. The changes are purely structural and do not affect the outputs of methods.",
        "commit_message": "usermodel support for excel hyperlinks\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@617834 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/poi",
        "commit_hash_before": "407a62f2bc90b7e635b689ee116845ab22f0dc9e",
        "commit_hash_current": "4ab00acc7cf8a56a22153c84ec203707cd413846",
        "refactoring_type": "pure",
        "justification": "The commit adds a new class (HSSFHyperlink) and modifies the existing HSSFWorkbook, but it does not change any behavior or functionality. Instead, it extends the capabilities of the workbook by allowing for the creation and modification of hyperlinks in sheets.",
        "commit_message": "support for excel hypelrinks\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@619310 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/rictic/code_swarm",
        "commit_hash_before": "6a48e14ad76015ccc3644ade6589ca43b7777fd7",
        "commit_hash_current": "ca5eaa0ad39ec30272bf906f93d4958eccf66b28",
        "refactoring_type": "pure",
        "justification": "The commit contains new files and classes, but they all seem to be related to organizing the code structure without altering its behavior. The Event, EventList, and org.codeswarm.repositoryevents package are newly added for better organization of the repository events handling code. There are no changes in method signatures or behavior that would indicate a functional change.",
        "commit_message": "Removed more duplication and eliminated warnings"
    },
    {
        "repository": "https://github.com/rictic/code_swarm",
        "commit_hash_before": "e48c42df2026ad93547ffe6794d1142121fdacdf",
        "commit_hash_current": "ff7751f44b741568397cec6d9dcacd9287cdf54d",
        "refactoring_type": "pure",
        "justification": "In this commit, there are no observable changes to the behavior or functionality of the code. The refactoring seems focused on reorganizing and simplifying conditional logic in various methods without altering their outcomes (e.g., removing unnecessary if-else statements, replacing them with ternary operators). Additionally, there is an introduction of new methods but no changes to their existing counterparts that could affect behavior. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "Removed duplication, updated to use foreach arrays\n\nMay have slightly improved performance for long-lived visualizations,\nneed to do some comparisons."
    },
    {
        "repository": "https://github.com/android/platform_packages_apps_music",
        "commit_hash_before": "272eb78d8836f969f7480454167bdffc6a6f6dd7",
        "commit_hash_current": "2f9a1ce2f3b0ae72d698c240ce8448bc7cfe3a77",
        "refactoring_type": "pure",
        "justification": "The commit includes refactoring of the code base by renaming variables, methods, and classes. The code changes do not alter any functionality or behavior of the original code.",
        "commit_message": "When checking the current playback position against the length\nof the file, make sure the length is valid. Otherwise we can\nend up endlessly (recursively) calling next(), and run out of\nstack."
    },
    {
        "repository": "https://github.com/unclebob/fitnesse",
        "commit_hash_before": "2537efdc30117d4c6ec5030cc5799dcca2f17c46",
        "commit_hash_current": "f650981e5a8d2772997cacf205694c5b78631836",
        "refactoring_type": "pure",
        "justification": "The commit primarily consists of changes to the organization and structure of the codebase, such as renaming variables, methods, extracting functionality into new classes, and simplifying conditional logic. No changes to behavior or functionality were introduced based on the provided diff.",
        "commit_message": "Testrunner now working for testresponder class"
    },
    {
        "repository": "https://github.com/unclebob/fitnesse",
        "commit_hash_before": "f650981e5a8d2772997cacf205694c5b78631836",
        "commit_hash_current": "1674a336df98234452686787876d998d537225f7",
        "refactoring_type": "pure",
        "justification": "The commit does not include any changes to behavior or functionality, instead focusing on code reorganization and simplifying the conditional logic. This suggests that the changes are purely structural in nature.",
        "commit_message": "Refactor complete except for two unit tests"
    },
    {
        "repository": "https://github.com/mikiobraun/jblas",
        "commit_hash_before": "8eb8cf07615091fb860e77686ca0faa28108692d",
        "commit_hash_current": "6dfe32f5459a5aefcb02f24b4a259c97f54f201d",
        "refactoring_type": "pure",
        "justification": "The commit introduces changes that are purely structural in nature. In the Ruby file, the operating system name is standardized to 'Windows' instead of 'Windows XP'. This change does not affect functionality because both versions of the OS name will still produce the same results when used for translating directories and checking for cygpath. The Java file includes a new method unifyOSName that standardizes the operating system name to 'Windows', but it is not called anywhere in the code, so it has no effect on behavior or functionality. Therefore, this commit represents pure refactoring.",
        "commit_message": "If OS name starts with \"Windows\", we'll assume it's simply windows."
    },
    {
        "repository": "https://github.com/apache/log4j",
        "commit_hash_before": "32b84ae896fdace9d97aa4f466a12a5c8d469265",
        "commit_hash_current": "fd406ff946fc106a0053f2b78e789f2352562203",
        "refactoring_type": "pure",
        "justification": "The commit removes the deprecated 'HierarchyEventListener' and adds a new interface called 'LoggerEventListener'. Additionally, it refactors some code by removing unused variables and methods, renaming classes, and simplifying conditional logic. However, there are no changes to behavior or functionality in this commit.",
        "commit_message": "Clean up in the MDC code since log4j 1.3 requires JDK 1.2+.\n\n\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/logging/log4j/trunk@309682 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/log4j",
        "commit_hash_before": "6a738776fa47c86ecbd96a32879848f132045fa1",
        "commit_hash_current": "11489a36920f0f6733750b1b2c63c8dc4657e0ca",
        "refactoring_type": "pure",
        "justification": "The commit primarily consists of renaming variables, methods, and interfaces without affecting their functionality or behavior. This is an example of 'pure' refactoring as it simplifies the code structure while maintaining the same behavior.",
        "commit_message": "- Made code confirms to checkstyle 3.0.\n- Jalopy formatting.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/logging/log4j/trunk@309783 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/log4j",
        "commit_hash_before": "7f19c6dcf75b648cbc6960643b6fc19dc71519ee",
        "commit_hash_current": "6eba9a342d41f7859be257dbabf096ae5c574d7f",
        "refactoring_type": "pure",
        "justification": "The commit appears to be a reorganization of some classes and imports, as well as removing unused imports. These changes do not seem to affect the functionality or behavior of the code, suggesting this is a pure refactoring.",
        "commit_message": "Cosmetic changes only.\n\n- Removed unused imports.\n\n- Replaced  Thread.currentThread().sleep(millis) calls with its\n  cleaner equivalent Thread.sleep(millis)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/logging/log4j/trunk@309806 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/maven-plugins",
        "commit_hash_before": "bf0d901eb0008d200167d79c9963e89123e42318",
        "commit_hash_current": "013a98179a7e0a466c7f44f4c0e22ea3e9806d04",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit primarily involve the addition of new variables, methods, and imports without any apparent modifications to existing functionality. Specifically, a new `basedir` parameter has been added to the DoxiaMojo class, and the getSiteDescriptor() method has been refactored by moving the site descriptor reading logic into a separate method and interpolating properties within it. These changes are purely structural in nature and do not seem to affect the behavior or functionality of the code.",
        "commit_message": "Report generate directly xhtml file\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk/maven-plugins/maven-site-plugin@169076 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/maven-plugins",
        "commit_hash_before": "013a98179a7e0a466c7f44f4c0e22ea3e9806d04",
        "commit_hash_current": "280180a69a2888972797dca9acf76f026dfc9a76",
        "refactoring_type": "pure",
        "justification": "In this commit, the developers have only made structural changes to the code without any behavioral modifications. The new methods generateProjectInfoPage and generateProjectReportsPage have been added for creating specific HTML pages, but they are not altering any existing functionality. Additionally, the code reorganization and addition of these methods do not affect the behavior or outputs of other parts of the program.",
        "commit_message": "o Fix html generation\no Categorize reports in \"Project Info\" and \"Project Reports\"\no Generate overview page for \"Project Info\" and \"Project Reports\" pages\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk/maven-plugins/maven-site-plugin@169372 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/maven-plugins",
        "commit_hash_before": "534116e40843103bdcb748177d02f5dedbb209ca",
        "commit_hash_current": "6340b4569577f8e83b8ac20a6ba94635b8a030da",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new Doxia template file (maven-site.xml) and modifies the existing resources.txt file, but there are no changes to behavior or functionality in the code provided. Instead, it appears that these files have been added to support the creation of Maven site documentation.",
        "commit_message": "Use plexus-site-renderer for generate site with velocity templates.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk/maven-plugins/maven-site-plugin@178887 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/jmeter",
        "commit_hash_before": "d5e879cdb401a79a527568d626258f11042b53b8",
        "commit_hash_current": "9aa66c06f6c86b93322ff498edc19ee0f959f7b8",
        "refactoring_type": "pure",
        "justification": "The commit includes changes to the build.xml file and some Java source files, but there are no functional or behavioral modifications observed in the provided code diff. Instead, it seems that the refactoring focuses on improving code structure by renaming variables (e.g., test dir -> build.test) and simplifying the code base (e.g., removing redundant methods from AbstractTestElement). The addition of a new file ThreadListener.java indicates the introduction of a new class, but its contents are empty, which may suggest further refactoring or future implementations rather than functional changes in this commit.",
        "commit_message": "Implement ThreadListener interface\n(more efficient than scanning all elements)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/jmeter/trunk@325595 13f79535-47bb-0310-9956-ffa450edef68\n\nFormer-commit-id: a2c9aaf2464f04156e2660aeaf3258642dbc4f6f"
    },
    {
        "repository": "https://github.com/apache/jmeter",
        "commit_hash_before": "e9209c46542d21b656f14dff20224814df13581f",
        "commit_hash_current": "bc6225a808d1fb1ab6a49ec95d6852cb801caeed",
        "refactoring_type": "pure",
        "justification": "The commit introduces changes in the code such as renaming variables, methods, and reorganizing code structure without altering their functionality. This indicates that it is a 'pure' refactoring.",
        "commit_message": "Change to use new ThreadListener interface\nMove test code to test tree\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/jmeter/trunk@325597 13f79535-47bb-0310-9956-ffa450edef68\n\nFormer-commit-id: 18ac07eb299f02b5dc2ce2a56ae32261d354168c"
    },
    {
        "repository": "https://github.com/apache/jmeter",
        "commit_hash_before": "c375b06f7886492789ea2458553640792f1faf5f",
        "commit_hash_current": "4ade979d3f106bd3d97f2c9797211c08a5cd53ce",
        "refactoring_type": "pure",
        "justification": "The commit introduces changes to the try-catch block, replacing 'Exception' with 'IOException'. This is a pure refactoring as it does not alter the behavior of the code. It only modifies the exception type while keeping the exception handling logic the same. Additionally, there are also changes in naming conventions such as renaming 'threadFinished()' to 'private void closeSocket()', which is another instance of pure refactoring.",
        "commit_message": "Close socket if an error is encountered\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/jmeter/trunk@325600 13f79535-47bb-0310-9956-ffa450edef68\n\nFormer-commit-id: 8a12abb071b7798d6de8fce8b8c38e35aa726335"
    },
    {
        "repository": "https://github.com/apache/struts",
        "commit_hash_before": "c434cf644ad292b034f56dea8918683be60e7c68",
        "commit_hash_current": "07ac6bd6d942b87e4615aa4fec61a0aa91c7451b",
        "refactoring_type": "pure",
        "justification": "The commit changes the behavior of submit buttons from using 'beforeLoading' and 'afterLoading' event handlers to 'beforeNotifyTopics' and 'afterNotifyTopics'. However, this change does not seem to alter the functionality of the events or their impact on the application. Instead, it appears to be a refactoring to align with a more consistent naming convention within the codebase.",
        "commit_message": "WW-1607 \n* Remove unused files\n* Remove deprecated attributes \"beforeLoading\", \"afterLoading\", \"resultDivId\", \"preInvokeJS\", \"onLoadJS\"\n* Add attributes \"beforeNotifyTopics\", \"afterNotifyTopics\", \"errorNotifyTopics\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/struts2/trunk@519409 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/struts",
        "commit_hash_before": "0cabb1c2f5052e2298a6d19c8c80e039c329ea66",
        "commit_hash_current": "1dec646207c7b530ab8d7fd512cfa5033787eb55",
        "refactoring_type": "pure",
        "justification": "The code changes in the diff primarily consist of renaming a static variable (HTTP_METHOD_PARAM) from private to public, which does not affect the functionality or behavior of the code. There are also no changes that indicate new features, bug fixes, or modifications to existing functionality. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "Improve documentation, add more tests, fix put accepting creations\nWW-1475\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/struts2/trunk@530654 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/struts",
        "commit_hash_before": "1dec646207c7b530ab8d7fd512cfa5033787eb55",
        "commit_hash_current": "bac67c23385119f055715f9e544e5f1659c1f3ae",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new property to the Div, Href, SubmitAjax, and Bind classes that allows them to have a custom highlight color and duration when using Dojo. This change doesn't affect the functionality or behavior of the existing code. Instead, it extends the available options for customization which can be considered as a pure refactoring.",
        "commit_message": "WW-1891 Add highlight effect to \"targets\" for the ajax tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/struts2/trunk@531046 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/mvel/mvel",
        "commit_hash_before": "d53cd741b230add70cea04f99b5ff296c5210d98",
        "commit_hash_current": "29860c18244c4e2f611ce395bf0995349b1dbcaa",
        "refactoring_type": "pure",
        "justification": "The commit contains changes that restructure the codebase by converting several accessor variables to transient variables. However, none of these changes seem to alter the functionality or behavior of the code. This is a pure refactoring aimed at improving the code organization and efficiency.",
        "commit_message": "improved bug checks, serialization improvements."
    },
    {
        "repository": "https://github.com/zkoss/zk",
        "commit_hash_before": "dfa6e53d736f2e99703e6b80d8e041cee6b8c4fc",
        "commit_hash_current": "b95182b1b91be74ea8ce6effcbb90ab4cd0a82d7",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new interface URLEncoder and setsURLEncoder() method, but it doesn't seem to affect the existing behavior or functionality of the Encodes class. Instead, it provides an optional way for users to customize the URL encoding process with their own URLEncoder implementation. The other changes in the commit appear to be organizational and do not alter the original functionality.",
        "commit_message": "Bug 1838852\n\ngit-svn-id: https://svn.potix.com/svn/zk1/trunk@5571 dd50bd9b-9913-0410-b9ba-e07a3075be86"
    },
    {
        "repository": "https://github.com/zkoss/zk",
        "commit_hash_before": "b95182b1b91be74ea8ce6effcbb90ab4cd0a82d7",
        "commit_hash_current": "2a6ec87146397eb704d3a27d3e50d4fb07e9c26a",
        "refactoring_type": "pure",
        "justification": "The code changes do not seem to alter the functionality or behavior of the program. The deletion of multiple files suggests a cleanup or reorganization without modifying the existing features, which aligns with 'pure' refactoring.",
        "commit_message": "Feature 1850585 and 1850584\n\ngit-svn-id: https://svn.potix.com/svn/zk1/trunk@5820 dd50bd9b-9913-0410-b9ba-e07a3075be86"
    },
    {
        "repository": "https://github.com/zkoss/zk",
        "commit_hash_before": "0b4998e5bfda08b95180b1aa790411e6de1117d7",
        "commit_hash_current": "a032317f57ee52627f85c6d5088c3cdefadb6120",
        "refactoring_type": "pure",
        "justification": "The commit mainly contains code reorganization and removal of deprecated methods, which indicates pure refactoring. There are no changes in behavior or functionality.",
        "commit_message": "Div and Label ready\n\ngit-svn-id: https://svn.potix.com/svn/zk1/branches/5.0@9715 dd50bd9b-9913-0410-b9ba-e07a3075be86"
    },
    {
        "repository": "https://github.com/apache/poi",
        "commit_hash_before": "2598100690fe56d623b46352d1da6a267c26f8ed",
        "commit_hash_current": "b0d728e7ac5d86926db7f7c72061b5ff10f93496",
        "refactoring_type": "pure",
        "justification": "The commit includes renaming of variables and methods, extraction of methods without altering functionality, reorganization of code structure while maintaining the same behavior, and simplifying conditional logic without changing the outcomes. No changes to behavior or functionality were introduced.",
        "commit_message": "Fix for bug #44413 from Josh - Fix for circular references in INDEX, OFFSET, VLOOKUP formulas, where a cell is actually allowed to reference itself\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@628029 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/poi",
        "commit_hash_before": "b0d728e7ac5d86926db7f7c72061b5ff10f93496",
        "commit_hash_current": "522face545361739cc5d5104be9f6a8ac72405bf",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new method `confirmCell` that checks the properties of a CellReference object, but it does not change any existing functionality or behavior. The addition of this method only provides better readability and organization of code without affecting the overall output.",
        "commit_message": "Fix from Josh from bug #44417 - Improved handling of references for the need to quote the sheet name for some formulas, but not when fetching a sheet by name\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@628033 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/rictic/code_swarm",
        "commit_hash_before": "57f14e7835571460373a06c95b9bc1a26652bfe5",
        "commit_hash_current": "160ea3141c77819807e7c3efb99b69228b67632d",
        "refactoring_type": "pure",
        "justification": "The commit does not introduce any new functionality or changes in behavior. It primarily focuses on code organization and the addition of utility methods like `getPhysicsEngine(String name)` and `filterLiving(Iterable<T> iter)`. These changes are aimed at improving readability and maintainability, without altering existing functionalities.",
        "commit_message": "folded in some changes from the git repo maintained by rictic.\n\ngit-svn-id: http://codeswarm.googlecode.com/svn/trunk@243 eda9c206-d64f-0410-a2f2-67f3fa0499ed"
    },
    {
        "repository": "https://github.com/rictic/code_swarm",
        "commit_hash_before": "3d2f983d0a4f28da4f12f5b5a2da7e5ea1229c95",
        "commit_hash_current": "d30bb3991b6d5151c225f1a07cf94866d46dd08b",
        "refactoring_type": "pure",
        "justification": "In this commit, there are only structural changes made to the code without any functional modifications. Specifically, variable and method names have been renamed, constants have been added to a class (CodeSwarmConfig), and new methods in CodeSwarmConfig have been used in code_swarm.java for reading configuration values from the config file. These changes help improve the readability and maintainability of the code but do not affect its functionality.",
        "commit_message": "Mass is a part of the config now.\n\ngit-svn-id: http://codeswarm.googlecode.com/svn/trunk@224 eda9c206-d64f-0410-a2f2-67f3fa0499ed"
    },
    {
        "repository": "https://github.com/rictic/code_swarm",
        "commit_hash_before": "edec8705c33f062c0f264b730e7015488ffb893d",
        "commit_hash_current": "3c0cf2230a116cca737313f16e744534017b47e7",
        "refactoring_type": "pure",
        "justification": "The commit changed the access modifier of the `randomLocation()` method from private to public in `PhysicsEngine.java`. This change does not affect the behavior or functionality of the code, as it only modifies the accessibility of the method. Additionally, other parts of the code do not show any functional changes, bug fixes, or addition of new features. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "More proof of concept - add some forces between Person Nodes. This now roughly approximates the old Orderly engine, without the jitter of the persons.\n\nIt would be cool to adjust the forces between people depending on how much the stuff they were editing had in common."
    },
    {
        "repository": "https://github.com/unclebob/fitnesse",
        "commit_hash_before": "a30b623e45cd7045f8b671ddeffe57580592e263",
        "commit_hash_current": "614f5c88ec9c67831cda11fa9a54f4c1acb0d30f",
        "refactoring_type": "pure",
        "justification": "The commit introduces changes that simplify the code structure and naming conventions without affecting functionality or behavior. The method names, variable names, and import statements have been updated, but there are no changes in the implementation logic or outputs. This is an example of a 'pure' refactoring.",
        "commit_message": "Added stop button to tests and suites and fixed problems with refactor"
    },
    {
        "repository": "https://github.com/unclebob/fitnesse",
        "commit_hash_before": "8849891af7f9e4dfef80f946a960b8e48274a35d",
        "commit_hash_current": "80cad9071e2b13cd2d7d5437bb8f11fef214a1ae",
        "refactoring_type": "pure",
        "justification": "The commit does not seem to introduce any new functionality or change the existing behavior of the code. The changes include refactoring the class structure and adding a new dependency for JSON library, but these changes do not appear to alter the program's functionality.",
        "commit_message": "Ordered Query Table"
    },
    {
        "repository": "https://github.com/unclebob/fitnesse",
        "commit_hash_before": "80cad9071e2b13cd2d7d5437bb8f11fef214a1ae",
        "commit_hash_current": "04ead9a56520d24008f1cd1a3057d75fb44411ae",
        "refactoring_type": "pure",
        "justification": "The code diff shows that the changes made are primarily renaming variables and methods, as well as reorganizing the code structure without affecting its behavior. This is considered a 'pure' refactoring.",
        "commit_message": "Moved property search form to regular search page."
    },
    {
        "repository": "https://github.com/kohsuke/hudson",
        "commit_hash_before": "b25351cccec73b15ad876f67ab003b3c153aed9e",
        "commit_hash_current": "b3665f7a18702df6382c0f4405b283502c527999",
        "refactoring_type": "pure",
        "justification": "The commit does not include any changes to behavior or functionality. The code refactoring is limited to renaming variables, methods, and changing comments without modifying their original purpose. For example, the 'encode' method's deprecated annotation has been removed, but its implementation remains the same. Additionally, some variable and method names have been changed for improved readability, which is a characteristic of pure refactoring.",
        "commit_message": "Merged revisions 18002,18026-18027,18029-18030,18036,18040-18042,18068,18070,18093-18094 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/rc\n\n........\n  r18002 | kohsuke | 2009-05-12 12:14:24 -0700 (Tue, 12 May 2009) | 1 line\n  \n  merging the RC branch\n........\n  r18026 | kohsuke | 2009-05-12 21:31:09 -0700 (Tue, 12 May 2009) | 1 line\n  \n  if \"e\" is <textarea> there won't be any @type\n........\n  r18027 | kohsuke | 2009-05-12 21:36:25 -0700 (Tue, 12 May 2009) | 1 line\n  \n  If distributed build isn't enabled, slave selection drop-down shouldn't be displayed in the job config.\n........\n  r18029 | kohsuke | 2009-05-12 22:00:03 -0700 (Tue, 12 May 2009) | 1 line\n  \n  documenting why we set system props\n........\n  r18030 | kohsuke | 2009-05-12 22:51:55 -0700 (Tue, 12 May 2009) | 1 line\n  \n  This just ends up passing the -B option twice.\n........\n  r18036 | kohsuke | 2009-05-12 23:17:30 -0700 (Tue, 12 May 2009) | 7 lines\n  \n  [FIXED HUDSON-2373] Modified to work with Maven 2.1. Sorry for a long delay, folks. This change will be in 1.305.\n  \n  We basically need an ability to feed different components.xml depending on Maven's version (which will be read by DefaultComponentDiscoverer in Plexus.) The implementation in this fix is hacky, and based on placing one more jar in front of the classpath when run on Maven 2.1, while maven-interceptor still contains the default components.xml for 2.0.x.\n  \n  Ideally 2.0.x components.xml should move to its own jar and so that we can switch between them, as opposed to pass in extra jar only when it's Maven 2.1.\n  \n  We'll see how Maven 3.0 works with this regard.\n........\n  r18040 | kohsuke | 2009-05-13 10:31:59 -0700 (Wed, 13 May 2009) | 1 line\n  \n  improved error handling\n........\n  r18041 | kohsuke | 2009-05-13 10:34:14 -0700 (Wed, 13 May 2009) | 1 line\n  \n  Long lines in console output are now wrapped in most browsers.\n........\n  r18042 | kohsuke | 2009-05-13 11:02:52 -0700 (Wed, 13 May 2009) | 1 line\n  \n  documenting what it does.\n........\n  r18068 | kohsuke | 2009-05-13 15:15:24 -0700 (Wed, 13 May 2009) | 1 line\n  \n  [FIXED HUDSON-3653] Fixed in 1.305\n........\n  r18070 | kohsuke | 2009-05-13 15:28:04 -0700 (Wed, 13 May 2009) | 1 line\n  \n  creating a new RC branch\n........\n  r18093 | kohsuke | 2009-05-14 10:05:16 -0700 (Thu, 14 May 2009) | 1 line\n  \n  [HUDSON-3684] In 1.305 I improved error diagnostics to show why the loading of Winp failed, so please try that and report back the new error message you get.\n........\n  r18094 | kohsuke | 2009-05-14 10:28:33 -0700 (Thu, 14 May 2009) | 1 line\n  \n  fixed a typo as pointed out by Jesse, so that this change can make it into 1.305.\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@18097 71c3de6d-444a-0410-be80-ed276b4c234a"
    },
    {
        "repository": "https://github.com/kohsuke/hudson",
        "commit_hash_before": "6bb84002610049554e549dcbac7454b98dbbe160",
        "commit_hash_current": "49ace47432e473b8f5febb6cc00f177be5854ffb",
        "refactoring_type": "pure",
        "justification": "The commit introduces a change to the Ant installation and verification process, but it does not alter the behavior or functionality of the existing code. Instead, it simplifies the verification by comparing beans directly and adds a new test for adding an Ant installation via UI, which only serves to test the new mechanism for managing Ant installations. Overall, this commit focuses on refactoring the code structure without affecting the original functionality.",
        "commit_message": "Added automatic tool installation for Ant.\n\n- Most of the installer logic is made reusable in DownloadFromUrlInstaller.\n- ToolDescriptor can now contribute global.jelly to the system configuration page.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@18260 71c3de6d-444a-0410-be80-ed276b4c234a"
    },
    {
        "repository": "https://github.com/kohsuke/hudson",
        "commit_hash_before": "5d87c3812c71490b632186461141e817e2cc897a",
        "commit_hash_current": "7d8b650c4b706bbb45a1c6f9aa4a8b8596a35de5",
        "refactoring_type": "pure",
        "justification": "The commit introduces changes to the code structure and variable names, but there are no indications of functional or behavioral changes in the provided diff. The changes seem to be focused on improving readability and organization, which is typical of 'pure' refactoring.",
        "commit_message": "HtmlUnit added a substantial amount of dependencies (5MB or so), plus its dependency to NekoHTML, which in turn depends on Xerces, makes deployment problematic on JBoss.\n\nIntegrated a reimplementation of JDK auto installer which doesn't use HtmlUnit.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/branches/rc@18603 71c3de6d-444a-0410-be80-ed276b4c234a"
    },
    {
        "repository": "https://github.com/yuske/twitter4j",
        "commit_hash_before": "e6e56d15a5cc65ab446183f14eb025f72ecef1e2",
        "commit_hash_current": "400d30b8185a59f07810c97ada6cf3a3e10506ea",
        "refactoring_type": "pure",
        "justification": "The code changes in the commit only involve renaming variables, methods, and classes without changing their behavior or functionality. There are no bug fixes or new features added in this refactoring.",
        "commit_message": "TFJ-58 aggregate codes that read system properties\n\ngit-svn-id: http://yusuke.homeip.net/svn/twitter4j/trunk@299 117b7e0d-5933-0410-9d29-ab41bb01d86b"
    },
    {
        "repository": "https://github.com/yusuke/twitter4j",
        "commit_hash_before": "5cd034b74cb1d76d10c5815c081b35f0d102a347",
        "commit_hash_current": "9b23ba9096b720f282cdb1a93d28f0cd0f5717f8",
        "refactoring_type": "pure",
        "justification": "The commit changes the dependency from using 'ConfigurationFactory' to 'ConfigurationContext', but it does not appear to change any functional behavior of the code. This is a pure refactoring, as it simplifies the imports and usage without affecting the program's functionality.",
        "commit_message": "TFJ-231\nPropertyConfiguration was modifying System properties.\nIntroduced ConfigurationFactory interface (ConfigurationContext is the class which previously called ConfigurationFactory).\n\ngit-svn-id: http://yusuke.homeip.net/svn/twitter4j/trunk@507 117b7e0d-5933-0410-9d29-ab41bb01d86b"
    },
    {
        "repository": "https://github.com/yusuke/twitter4j",
        "commit_hash_before": "8fb225a96e2ab0247a412e3dfec29ace135bc3db",
        "commit_hash_current": "ca924e3054abc4a091eb60ffb94f8505832cc077",
        "refactoring_type": "pure",
        "justification": "The code changes in the commit involve creation of new files and classes for TwitpicImageUpload and YFrogOAuthImageUpload, but they don't seem to alter existing functionality or add any new features. Instead, they provide alternative examples for uploading images to Twitter using different methods (Basic Auth vs OAuth). This indicates a 'pure' refactoring.",
        "commit_message": "TFJ-334 separating UserStream from StatusStream"
    },
    {
        "repository": "https://github.com/yusuke/twitter4j",
        "commit_hash_before": "a93530314fe8068a2704aa2052ad0d651148352a",
        "commit_hash_current": "6b829007fd74601bfd9cb36e9e6817bd4e9b7d80",
        "refactoring_type": "pure",
        "justification": "The changes in this commit only involve renaming classes and moving class definitions between files, without affecting the behavior or functionality of the code. The new TwitpicOAuthImageUpload class is added, but it doesn't seem to contain any changes that would affect the existing code.",
        "commit_message": "Twitpic OAuth image upload"
    },
    {
        "repository": "https://github.com/yusuke/twitter4j",
        "commit_hash_before": "b2beba0db729e69830ed69d3370b8ffb78564aa1",
        "commit_hash_current": "23b8ad3dfaac57c7708ec96905df8345b7130b35",
        "refactoring_type": "pure",
        "justification": "The commit adds a new OAuth-based Twitpic image uploader, but it does not alter the existing behavior of the codebase. The existing classes and methods remain unchanged. This can be considered as a pure refactoring because it only introduces a new feature while keeping the original functionality intact.",
        "commit_message": "1. support ImageUpload.upload(File media, String message) and upload(String mediaFileName, InputStream mediaBody, String message);\n2. add support for OAuthEcho tweetphoto upload.\n3. treat http 2xx codes as success code (HttpClientImpl.java)\n4. support User.isFollowing"
    },
    {
        "repository": "https://github.com/ervandew/eclim",
        "commit_hash_before": "6d58e348c9299863c0047729e17991df8bd115e5",
        "commit_hash_current": "3c3b80b65d9472f0a235c14bbe9e38f7e11cd7b8",
        "refactoring_type": "pure",
        "justification": "The commit changes the path separator in the command for reading a class from an archive file, but it does not seem to affect the behavior or functionality of the code. The change is purely structural.",
        "commit_message": "creating core plugin and support for plugin reloading"
    },
    {
        "repository": "https://github.com/ervandew/eclim",
        "commit_hash_before": "039a6469d66c6b413fb558b115bf141c291cd2a0",
        "commit_hash_current": "0065d40a4ee9d8c499699cf6696f1a2ac7a393f4",
        "refactoring_type": "pure",
        "justification": "The commit mainly involves renaming variables, reorganizing the code structure, and modifying import statements without changing the behavior or functionality of the code. This is an example of pure refactoring as it simplifies the code and improves readability.",
        "commit_message": "creating core plugin and support for plugin reloading"
    },
    {
        "repository": "https://github.com/ervandew/eclim",
        "commit_hash_before": "0065d40a4ee9d8c499699cf6696f1a2ac7a393f4",
        "commit_hash_current": "f2b9c707030890a058652e4d6b42b3dbbf6756d7",
        "refactoring_type": "pure",
        "justification": "The commit introduces new files and directories for the Ruby language support in eclim, but it does not change any existing functionality or behavior. The code changes are strictly structural, adding new classes, functions, and commands related to the Ruby language. No changes were made that could affect the program's output or functionality.",
        "commit_message": "added dltk and dltkruby plugins\n\n- ruby support via dltkruby\n- created shared dltk eclim plugin\n- refactored pdt, moved non-pdt specific code to dltk plugin to be\n  shared by dltkruby\n- moved vim side search code to eclim/lang and updated c and php search\n  to utilize it"
    },
    {
        "repository": "https://github.com/ervandew/eclim",
        "commit_hash_before": "769d9c9ca4b00efdf5a433f91b050589a1df89ce",
        "commit_hash_current": "48ba416a8a582079d6caf4bc11ec0305fcf0467d",
        "refactoring_type": "pure",
        "justification": "The commit introduces new variables and functions, but there are no changes to existing functionality or behavior. The addition of these elements is purely structural in nature and does not affect the output or operation of the code.",
        "commit_message": "convert maven dependency search to use json response"
    },
    {
        "repository": "https://github.com/ervandew/eclim",
        "commit_hash_before": "48ba416a8a582079d6caf4bc11ec0305fcf0467d",
        "commit_hash_current": "d3ddcafc7c2f1e3184de420e548923378e8d70c1",
        "refactoring_type": "pure",
        "justification": "The changes in the commit mainly consist of refactoring and reorganizing code structure without altering functionality. For example, functions are renamed, methods are added or removed without affecting their behavior, and there are no visible bug fixes or changes to existing functionality. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "convert jdt commands to use json responses"
    },
    {
        "repository": "https://github.com/gephi/gephi",
        "commit_hash_before": "454d61d166d7a619b50c1861bd24b7411e8cc030",
        "commit_hash_current": "9a2328db6ec4407fb2aaa1bc25314416f4aef745",
        "refactoring_type": "pure",
        "justification": "The commit adds a new file 'private.xml' to the project, but it does not seem to contain any functional code or changes. Instead, it appears to be a configuration file for NetBeans IDE. Additionally, no existing files were modified or deleted, indicating that this is purely structural in nature and does not affect the functionality of the code.",
        "commit_message": "GraphCustomizer implementation.\nPropertySheet editing the GraphCustomizer added to the PreviewSettingsTopComponent."
    },
    {
        "repository": "https://github.com/gephi/gephi",
        "commit_hash_before": "3508db34900fdbbe0f38efe18748b279b616c2fa",
        "commit_hash_current": "a4a7bc6aac4b61aca5c03eca890a69d89c827552",
        "refactoring_type": "pure",
        "justification": "The commit introduces new property editors for various types of colorizers, but it does not change the behavior or functionality of the existing code. The changes are purely structural and serve to improve the organization and maintainability of the code.",
        "commit_message": "Added colorizer property editors."
    },
    {
        "repository": "https://github.com/gephi/gephi",
        "commit_hash_before": "a4a7bc6aac4b61aca5c03eca890a69d89c827552",
        "commit_hash_current": "640d8ef456aeed2ebd9cc464bb5f555dd0fbd86d",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new class `PreviewController` and modifies the existing Graph API to accept this controller as an argument when setting the graph. However, no behavioral changes are observed in the code, indicating that it's a pure refactoring aimed at separating concerns.",
        "commit_message": "Added preview of a predefined test graph containing only nodes.\nWarning: color property editors are buggy."
    },
    {
        "repository": "https://github.com/gephi/gephi",
        "commit_hash_before": "1035dd6e255dddfc68ac954c88bb295b79aa84e0",
        "commit_hash_current": "943e6b242e2258d7a06da2a61382df3d193af2aa",
        "refactoring_type": "pure",
        "justification": "In the provided code diff, there are no observable changes in behavior or functionality. The most noticeable change is the removal of `EdgeChildColorizer` and `EdgeColorizer` imports, which were replaced by `GenericColorizer`. However, since these classes are part of the same package (org.gephi.preview.api.color.colorizer), it seems likely that they have similar functionality. Additionally, there's a change in the way the PreviewController instance is obtained, but this doesn't appear to affect the behavior as both methods for obtaining the instance provide access to the same controller object. Lastly, there's no addition of new features or bug fixes visible in the code diff, making this commit a candidate for 'pure' refactoring.",
        "commit_message": "[Preview UI] Used PreviewController singleton."
    },
    {
        "repository": "https://github.com/gephi/gephi",
        "commit_hash_before": "943e6b242e2258d7a06da2a61382df3d193af2aa",
        "commit_hash_current": "2ca2d612888a542da66c256c8a76ac47419b2aa4",
        "refactoring_type": "pure",
        "justification": "The code changes in the commit appear to be purely organizational, without any significant modifications to behavior or functionality. Changes include restructuring of the class and some minor tweaks to variable and method names. The addition of a new method 'refresh()' does not seem to have any impact on existing methods or behavior. Therefore, this refactoring can be classified as 'pure'.",
        "commit_message": "[Preview UI] Used PreviewController singleton in the preview applet.\n[Preview UI] Documented the preview applet."
    },
    {
        "repository": "https://github.com/talklittle/reddit-is-fun",
        "commit_hash_before": "4ea254c793429c07a42c3c466722aa373ac893e3",
        "commit_hash_current": "b8d9379e1858b12153397b7dfe344c59c92aebaa",
        "refactoring_type": "pure",
        "justification": "In this commit, there are no changes to the functionality or behavior of the code. The modifications primarily involve reorganization, such as moving some logic into separate methods and updating imports. Additionally, a new import (android.provider.Browser) is added without any apparent impact on existing functionality. These changes are considered 'pure' refactoring since they do not introduce new features or affect existing behavior.",
        "commit_message": "[Browser] intent.putExtra(Browser.EXTRA_APPLICATION_ID to reuse windows"
    },
    {
        "repository": "https://github.com/talklittle/reddit-is-fun",
        "commit_hash_before": "b8d9379e1858b12153397b7dfe344c59c92aebaa",
        "commit_hash_current": "8aafe2fe677e2df414daef00927c25700c8b8563",
        "refactoring_type": "pure",
        "justification": "The commit mainly introduces a new utility method Common.launchBrowser() for launching web browsers which is used in multiple places instead of using Intent.ACTION_VIEW directly and Browser extras. This refactoring does not seem to change the functionality or behavior of the code.",
        "commit_message": "[Refactor] Common.launchBrowser(String url, Activity act)"
    },
    {
        "repository": "https://github.com/talklittle/reddit-is-fun",
        "commit_hash_before": "ce5f6afee15dd7178c9e3cc6cd9d124965f00124",
        "commit_hash_current": "2bf07f7c611669926eb87ebdf97e110619c53d59",
        "refactoring_type": "pure",
        "justification": "The commit adds a new function 'showNumComments' but it does not change the behavior or functionality of the existing code. It only adds a simple conditional statement to display different comment counts based on whether the number is 1 or more than 1, without modifying any existing functions.",
        "commit_message": "refactor: Common.checkResponseErrors and checkIDResponse"
    },
    {
        "repository": "https://github.com/talklittle/reddit-is-fun",
        "commit_hash_before": "f2b653ac94ec1dde930d5af68d3d75fce51ce711",
        "commit_hash_current": "373719e01ed6d411a5e4a843e3cb384e93b8d869",
        "refactoring_type": "pure",
        "justification": "The changes in the commit involve restructuring of the code without altering its functionality. Specifically, the variable 'mUrls' is changed from a public field to a private final field, which may have been done for better encapsulation or adherence to best practices, but does not affect the behavior of the program.",
        "commit_message": "cache: cache is working for threads and comments\n\nTODO: call CacheInfo.invalidateCached*() when posting new data"
    },
    {
        "repository": "https://github.com/talklittle/reddit-is-fun",
        "commit_hash_before": "8d3bce47748225119e84712fa7c0f23e00cf6bc9",
        "commit_hash_current": "6017270b534d66ac880ffea375638f5d760f2dd2",
        "refactoring_type": "pure",
        "justification": "The commit appears to focus primarily on structural changes within the codebase, such as renaming variables and methods, reorganizing classes, and simplifying conditional logic without changing their behavior. There are no apparent changes to functionality or bug fixes in this commit.",
        "commit_message": "cache: add cache for PickSubredditActivity"
    },
    {
        "repository": "https://github.com/android/platform_packages_apps_calendar",
        "commit_hash_before": "96baba85affe924d0b29be2d0ec0b913896a1946",
        "commit_hash_current": "fc5e058c28e08efeb4fd280742044cca58773271",
        "refactoring_type": "pure",
        "justification": "The commit primarily involves refactoring the code by moving certain logic from multiple places into separate methods or functions (e.g., binding group and child views, initializing isSelected and isSynced arrays). These changes do not seem to affect the functionality or behavior of the application.",
        "commit_message": "b/2313182 Cleaned up launch activity with better multi-account handling.\n\nLaunch activity now just checks for the existence of any account, and if not found\nbounces users to the account settings activity where they can add a calendar\nsupported account. If a non-calendar supported account is found it will let users\nenter Calendar but they will be unable to create any events."
    },
    {
        "repository": "https://github.com/android/platform_packages_apps_calendar",
        "commit_hash_before": "16d119af4234cba88a54990fdef9a125f6d377db",
        "commit_hash_current": "ff6be831fc682374be6b78c13ecf5daca81f86d9",
        "refactoring_type": "pure",
        "justification": "The commit does not introduce any new functionality or change the behavior of existing code. It primarily involves renaming variables and extracting code to separate functions. These changes do not affect the overall functionality, so they can be classified as pure refactoring.",
        "commit_message": "b/2494603 Improve UI to disambiguate calendars with the same name\n\nAdded checks for calendars with duplicated names and if found will now\ninclude the owner e-mail with the display name. Also did some minor\nlayout changes for German ( b/2516982 ). And started a tests class for\nUtils.\n\nChange-Id: I567c6552a8c17b2c7e73d23312ac60f5dc85a1ec"
    },
    {
        "repository": "https://github.com/android/platform_packages_apps_calendar",
        "commit_hash_before": "83f7ce18540aa5b8ed2402d178d35520cd725dea",
        "commit_hash_current": "88c483a0189cbe7132330cb1b563f07326f3bcf9",
        "refactoring_type": "pure",
        "justification": "The commit contains only structural changes without altering the functionality or behavior of the code. This includes renaming variables, methods, and classes as well as organizing the code structure while maintaining the same behavior.",
        "commit_message": "Changes to DeleteEventHelper to make it async\n\nThis changes DeleteEventHelper to be able to use a CalendarEventModel\nwhen doing deletes and to use all asynchronous calls for creating\ndeletes/inserts/queries.\n\nChange-Id: I83fbf1ec0e58ddfc7913b18bf20737bf60c04c47"
    },
    {
        "repository": "https://github.com/android/platform_packages_apps_calendar",
        "commit_hash_before": "88c483a0189cbe7132330cb1b563f07326f3bcf9",
        "commit_hash_current": "1251cb05edd5283545bc27652f5c0aaa3d1095a1",
        "refactoring_type": "pure",
        "justification": "All the changes in the commits appear to be purely structural, refactoring the code for better organization and readability without changing the functionality. For example, the removal of unused imports, moving some variables and methods to separate files, and renaming a few classes or methods.",
        "commit_message": "Refactor DeleteEventHelper to allow null activities if exitWhenDone is false.\n\nChange-Id: I000d009934f2f2cdefd35db47b5bb7526d7cec23"
    },
    {
        "repository": "https://github.com/android/platform_packages_apps_calendar",
        "commit_hash_before": "bed0275111ecc6c4a3a638f90a9bac13bee594f4",
        "commit_hash_current": "79f228124de7d98146ca526d743436f6419e2365",
        "refactoring_type": "pure",
        "justification": "The commit introduces test annotations for smoke tests, and small/medium tests. Additionally, it modifies the code to use newer test annotations from the support library. These changes do not appear to affect the functionality or behavior of the code, indicating a 'pure' refactoring.",
        "commit_message": "Moves EditEvent into a fragment\n\nChange-Id: Ifcf4683ff8122102d4b8917aacb7a7d5df5751ae"
    },
    {
        "repository": "https://github.com/jberkel/sms-backup-plus",
        "commit_hash_before": "8aea21d9b456a54ae79e7b51eff3b8583afef36d",
        "commit_hash_current": "d397d056caa37c67558e78b1bae20e67ff09aeec",
        "refactoring_type": "pure",
        "justification": "The commit introduces no changes to the behavior or functionality of the code. It merely modifies variable and method names, extracts methods, reorganizes imports, and removes some unused imports. These changes are purely structural in nature and do not affect the operation of the SmsSyncService class.",
        "commit_message": "restore works +  new ui"
    },
    {
        "repository": "https://github.com/qos-ch/slf4j",
        "commit_hash_before": "3c0ab3466b6fa6e915974c72558d64c570734700",
        "commit_hash_current": "fd74fb61746d10021f4e33b0c3cd1543a89ffc0c",
        "refactoring_type": "pure",
        "justification": "The commit does not include any changes to behavior or functionality as it only involves adding a new attribute `argArray` to the `FormattingTuple` class, extracting the method `trimmedCopy`, and modifying the constructor of `FormattingTuple`. These changes are strictly for improving code structure and readability, making it a pure refactoring.",
        "commit_message": "minor changes"
    },
    {
        "repository": "https://github.com/thialfihar/apg",
        "commit_hash_before": "0f0f02776d0ad014225c7cbcf3056532fa69b17f",
        "commit_hash_current": "09741b02863b138846f3747a19dc40a3518b9aa0",
        "refactoring_type": "pure",
        "justification": "The commit primarily consists of refactoring the code for handling file picker in SecretKeyListActivity, SecretKeyKeyRingActivity, and PublicKeyListActivity classes by using FileDialog class. The changes do not seem to affect functionality or behavior, as they are focused on simplifying conditional logic and improving code structure while maintaining the same behavior.",
        "commit_message": "use OI File Manager intents to handle open/save file selection"
    },
    {
        "repository": "https://github.com/thialfihar/apg",
        "commit_hash_before": "09741b02863b138846f3747a19dc40a3518b9aa0",
        "commit_hash_current": "d5c5a2c43b3ffda4183cf8d57eb585613ed4906e",
        "refactoring_type": "pure",
        "justification": "The commit changes the base class of the activity from Activity to BaseActivity, and it doesn't seem to alter any behavior or functionality. It appears to be a refactoring effort to unify the codebase or improve organization without affecting the app's functionalities.",
        "commit_message": "major restructuring, moving dialog, message, menu, option menu, task, type IDs into Id in a similar structure as the generated R, also introducing a BaseActivity class that almost all activities derive from, which generates some common dialogs, handles the progress update, thread management, and thread communication\n\nalso adding first draft of encrypt file activity, not very functional yet"
    },
    {
        "repository": "https://github.com/thialfihar/apg",
        "commit_hash_before": "d5c5a2c43b3ffda4183cf8d57eb585613ed4906e",
        "commit_hash_current": "26cf672d67219ea81c920ef96f6c0756682a7635",
        "refactoring_type": "pure",
        "justification": "The commit adds a new dialog for file encryption, but the existing functionality remains unchanged. The code reorganization and addition of new constants do not affect the behavior or outputs of the methods.",
        "commit_message": "set svn:ignore for bin directory and .project/.classpath\n\nasymmetric file encryption working, some more cleanup, introduced an application directory to encrypt to by default"
    },
    {
        "repository": "https://github.com/thialfihar/apg",
        "commit_hash_before": "26cf672d67219ea81c920ef96f6c0756682a7635",
        "commit_hash_current": "0e14dcb290d5b3c7acae1da5a64e611e293c7f06",
        "refactoring_type": "pure",
        "justification": "The code changes primarily consist of renaming variables, methods, and classes without altering their behavior. Additionally, there is some extraction of methods, reorganization of code structure, and simplification of conditional logic. There are no indications of changes to behavior or functionality, bug fixes, or the addition of new features.",
        "commit_message": "layout adjustments, force portrait layout for EncryptFileActivity for now, (En|De)cryptFileActivity can now handle symmetric algorithms"
    },
    {
        "repository": "https://github.com/thialfihar/apg",
        "commit_hash_before": "0e14dcb290d5b3c7acae1da5a64e611e293c7f06",
        "commit_hash_current": "2c093b3e0de564df52f08b525ffd042763a4fce8",
        "refactoring_type": "pure",
        "justification": "In this commit, the only visible changes are renaming of Button IDs and their corresponding strings in two xml files (main.xml) and one string resource file (strings.xml). Additionally, a minor change was made to a message displayed by an AlertDialog in AskForSecretKeyPassPhrase.java. However, these changes do not alter the functionality or behavior of the code. The commit does not introduce any new features, bug fixes, or functional modifications. Therefore, it can be classified as 'pure' refactoring.",
        "commit_message": "clean up for release, AsciiArmour was a Button instead of CheckBox... fixed"
    },
    {
        "repository": "https://github.com/infinispan/infinispan",
        "commit_hash_before": "ea010245bfbd74ccce7cbc88beb23e8d6b9da55b",
        "commit_hash_current": "40e43369e9b3211f452dc2dec734681f1dd1d2d8",
        "refactoring_type": "pure",
        "justification": "The commit mainly focuses on upgrading the version of Infinispan to 5.0.0-SNAPSHOT across multiple server modules (rest, websocket, and hotrod). Additionally, it modifies the properties file for the WebSocketServer to accept Properties instead of individual parameters. These changes are purely structural without any alteration in behavior or functionality.",
        "commit_message": "Trunk is now the baseline for 5.0.0"
    },
    {
        "repository": "https://github.com/infinispan/infinispan",
        "commit_hash_before": "7437c1fd6cfcf686cf5c662446489a220fb547ea",
        "commit_hash_current": "19cf3fa3af33f79d5b3da62db2066dc478ff2d8b",
        "refactoring_type": "pure",
        "justification": "The commit removes a single_jar.xml assembly configuration file, which seems to be used for creating an all-in-one zip of the project's modules. This refactoring doesn't appear to change any functionality or behavior as it merely modifies the build process.",
        "commit_message": "[ISPN-528] (replace(K key, V value, long lifespan, TimeUnit unit) does not extend lifespan)"
    },
    {
        "repository": "https://github.com/infinispan/infinispan",
        "commit_hash_before": "19cf3fa3af33f79d5b3da62db2066dc478ff2d8b",
        "commit_hash_current": "84887ef8ee1be1c5fdca31dff23b0c1556f6c57a",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new flag 'ping-on-startup' in the core configuration file, but it doesn't seem to affect any existing functionality. Instead, it appears to be a new feature that enables pinging during startup. The other changes are mostly restructuring and simplifying conditional logic without changing the outcomes, which indicates this commit is primarily a 'pure' refactoring.",
        "commit_message": "migrated 2013 to trunk"
    },
    {
        "repository": "https://github.com/infinispan/infinispan",
        "commit_hash_before": "84887ef8ee1be1c5fdca31dff23b0c1556f6c57a",
        "commit_hash_current": "c36125998697c64cdbf87dd69f73349f3068ff10",
        "refactoring_type": "pure",
        "justification": "The commit moves Python sample scripts for memcached testing from the main resources directory to the test resources directory. This change is purely structural and does not affect behavior or functionality, hence it's classified as a pure refactoring.",
        "commit_message": "1.  Make Util.getInstance() NOT throw an exception except ConfigurationException, and provide alternative, Strict methods\n2.  Update usages of this method accordingly.\n3.  Marshaller, AbstractMarshaller and StreamMarshaller refactoring\n4.  Removed VHelper and SerializationMarshaller from hotrod-client\n5.  Removed InputStreamAdapter and OutputStreamAdapter from hotrod-client\n6.  Removed InternalCacheEntryMarshaller from remotecachestore"
    },
    {
        "repository": "https://github.com/infinispan/infinispan",
        "commit_hash_before": "bd9812bc772844659a5fc95e1b1a2e34b9fe1852",
        "commit_hash_current": "14992ab39c89d2a80799d817f1e769cacd8978e4",
        "refactoring_type": "pure",
        "justification": "The commit focuses on changing variable and method names, moving from 'Cache<CacheKey, Object>' to just 'Cache', and updating dependencies. These changes do not seem to affect the functionality or behavior of the code.",
        "commit_message": "migrated 2186 to trunk"
    },
    {
        "repository": "https://github.com/clojure/clojure",
        "commit_hash_before": "4db0b1f9c37fc0581bc54f13c8dfbe66f8bf02dc",
        "commit_hash_current": "c8ce4638779e91ba0792549e3dbded2393662a00",
        "refactoring_type": "pure",
        "justification": "The commit mainly contains refactorings such as renaming variables, methods, and structuring the code. There are no changes to behavior or functionality in the provided diff.",
        "commit_message": "add hashCode/equals to BigInt, refine number =, new method equal checks for matching category before equivalence, move array and hashMap to equiv for keys"
    },
    {
        "repository": "https://github.com/clojure/clojure",
        "commit_hash_before": "a08eac88766fa5eca96d7daf66addc00b70fd1bc",
        "commit_hash_current": "ac484ba40cc1d94d42ce59e9df92b13e98ed0b6e",
        "refactoring_type": "pure",
        "justification": "The commit primarily seems to focus on code organization and formatting changes, such as adding a new library dependency for the 'clojure.core.match' namespace. These types of changes do not appear to alter the functionality or behavior of the code. Additionally, there are no apparent bug fixes, added features, or modifications to existing functionality.",
        "commit_message": "fix record equality with other maps, = includes type, .equals doesn't. see #418"
    },
    {
        "repository": "https://github.com/jbehave/jbehave-core",
        "commit_hash_before": "96b382ab4c858c95cbe65efa14b5a627428c14b6",
        "commit_hash_current": "1e9032ef7d1b7821327239e4be8ba3c46d241bdc",
        "refactoring_type": "pure",
        "justification": "The Git diff shows that the changes were made to the import statements and method calls related to loading the story content. However, there are no functional changes or bug fixes in the code. Instead, the methods for loading story content have been updated to use new methods from LoadFromRelativeFile class. These changes focus on improving the code structure, readability, or maintainability by using consistent and more descriptive method names (mavenModuleStoryFilePath, intellijProjectTestStoryFilePath), which makes it a pure refactoring.",
        "commit_message": "added javadoc, renamed"
    },
    {
        "repository": "https://github.com/jbehave/jbehave-core",
        "commit_hash_before": "1e9032ef7d1b7821327239e4be8ba3c46d241bdc",
        "commit_hash_current": "21c1ac6461f7e5974cc4714d3d1cd24db9f2319f",
        "refactoring_type": "pure",
        "justification": "The code changes in the provided commit do not result in any modifications to the behavior or functionality of the code. Instead, it introduces a new method 'codeLocationFromClass' which simplifies the construction of the LoadFromRelativeFile object by removing the need for multiple parameters when using classes as input. This method call is added both in RelativeFileLoadingBehaviour and LoadFromRelativeFile classes, indicating that this refactoring focuses only on improving code structure, readability, or maintainability.",
        "commit_message": "more javadoc, use static method to make path"
    },
    {
        "repository": "https://github.com/jbehave/jbehave-core",
        "commit_hash_before": "d1607695da884af683514a3c468491182478a0f2",
        "commit_hash_current": "b6dd08b97fbbd4d67d4c451e268673f1b78baab3",
        "refactoring_type": "pure",
        "justification": "The commit modifies the JarFileScanner constructor to accept a List of strings instead of a single string for both 'includes' and 'excludes'. However, it does not change any behavior or functionality of the class. The bug fix regarding I/O errors in the `scan()` method is not related to the refactoring and is considered a separate non-structural change.",
        "commit_message": "JBEHAVE-870:  Allow for null include/exclude patterns"
    },
    {
        "repository": "https://github.com/jbehave/jbehave-core",
        "commit_hash_before": "a081df7da58b6e4666a11e568a1ab1c65c869516",
        "commit_hash_current": "653eedece033f6d0dcb472b0e2bda87465589b9e",
        "refactoring_type": "pure",
        "justification": "The commit changes the way jarPath is passed to the constructor of JarFileScanner, replacing a static method call with an explicit list. Additionally, the method localPathFormat() has been renamed to patternMatches() and refactored to accept two arguments (path and pattern). However, these changes do not seem to alter the behavior or functionality of the code, as they only concern the structure and parameters used in the class. Therefore, this is classified as a 'pure' refactoring.",
        "commit_message": "JBEHAVE-870:  Allow for null include/exclude patterns"
    },
    {
        "repository": "https://github.com/grails/grails-core",
        "commit_hash_before": "c8075e41d8a2962b0c3f786b7685eb0123a374ef",
        "commit_hash_current": "a43b509f14e04129b086cf612fd893cdf81fa0fd",
        "refactoring_type": "pure",
        "justification": "The commit appears to only involve the refactoring of imports and code formatting, without any changes in behavior or functionality. Specifically, there are changes related to importing classes, changing line breaks, and updating whitespace. This indicates a 'pure' refactoring.",
        "commit_message": "cleanup"
    },
    {
        "repository": "https://github.com/grails/grails-core",
        "commit_hash_before": "fc1091ac58af33123e6440ad0d58b8007e33f038",
        "commit_hash_current": "a91710ef75b407baad3c31b7297c8e42eedca7f3",
        "refactoring_type": "pure",
        "justification": "The commit focuses on modifying the behavior of the ResponseCodeUrlMappingTests and UrlMappingsHolderTests tests to use an un-cached holder for testing and setting the urlCreatorMaxWeightedCacheCapacity to 0. These changes are purely structural, as they do not affect the functionality or behavior of the codebase outside of the test environment.",
        "commit_message": "Adds caching layer to UrlCreator. (GRAILS-6680 related performance optimization)"
    },
    {
        "repository": "https://github.com/graals/grails-core",
        "commit_hash_before": "2782af3a08ce027d22e5eaa3f1d1323139316401",
        "commit_hash_current": "50a416768b0a7efe99ed0a4d9f13c353d67b413c",
        "refactoring_type": "pure",
        "justification": "The commit includes renaming of classes and methods, extracting methods without altering functionality, and simplifying conditional logic without changing the outcomes. No changes to behavior or functionality are apparent.",
        "commit_message": "Simplify registering dependencies and plugins by providing one method that takes care of registration details instead of having to call multiple."
    },
    {
        "repository": "https://github.com/grails/grails-core",
        "commit_hash_before": "f2fec144941acc280d517e3f53ff084703c95473",
        "commit_hash_current": "aa5c0b0c445535e1a7ca50bcf83d654bfebe852b",
        "refactoring_type": "pure",
        "justification": "The changes in the commit seem to be primarily focused on code structure and organization, such as moving the logic for handling controllers into a plugin's dynamic methods. The behavior of the application remains unchanged. There are no new features or bug fixes that indicate functional changes.",
        "commit_message": "don't crash file watcher on compilation error, remove dependency on GrailsResourceHolder from GrailsAwareInjectionOperation"
    },
    {
        "repository": "https://github.com/grails/grails-core",
        "commit_hash_before": "8b6830451d011002f6db431ad4092aa297f97b88",
        "commit_hash_current": "dc906ac7825300f8a652d1634d4b1ed94c79d6ab",
        "refactoring_type": "pure",
        "justification": "The commit includes changes to imports, class names, and method parameters without altering functionality. This indicates a structural reorganization of the codebase with no impact on behavior or outputs.",
        "commit_message": "Improvements to agent-based reloading with the introduction of a GrailsProjectWatcher class that encapsulates the file watching logic for plugins and triggers events when files change. This handles both static resources (message bundles, css etc.) and groovy/java source files leaving the agent with the job of handling class reloads"
    },
    {
        "repository": "https://github.com/nimbusproject/nimbus",
        "commit_hash_before": "ea5ca0271bf74b87133938a759840d59a7996618",
        "commit_hash_current": "bd648a66a3c36d0c8c5c4eb1f75d8d8a5738052f",
        "refactoring_type": "pure",
        "justification": "The code changes seem to focus on adding the 'active' flag to several classes and methods related to resource pool management. This change doesn't appear to alter the functionality or behavior of the existing code, but simply adds an additional property that can be set or retrieved. Therefore, it can be classified as a pure refactoring.",
        "commit_message": "Added notion of active vs inactive VMM nodes.\n\nInactive nodes will not start any new VMs, but they can be running VMs that were started while the node was active.\n\nThis facilitates \"draining\" a VMM without forcibly killing any VMs."
    },
    {
        "repository": "https://github.com/nimbusproject/nimbus",
        "commit_hash_before": "28840fa13db9b47825d8158fdf205857a9cef873",
        "commit_hash_current": "230024214d29f8c02e200dfb0e33bcd1c092ca07",
        "refactoring_type": "pure",
        "justification": "The commit primarily consists of renaming classes and methods, as well as some code reorganization without any apparent changes to behavior or functionality. For example, the ResourcepoolUtil class was renamed to RMResourcePoolUtil, and the method getResourcePoolEntryImproved was replaced with a new method getResourcePoolEntry. Additionally, some unused imports were removed. These changes are considered 'pure' refactoring as they do not alter the code's functionality.",
        "commit_message": "Added nimbus-admin node update support"
    },
    {
        "repository": "https://github.com/nimbusproject/nimbus",
        "commit_hash_before": "8a43132f4b16705a526d42c189d063c004599852",
        "commit_hash_current": "a94bcf6497dc3d1be13458bca56d9909302139c1",
        "refactoring_type": "pure",
        "justification": "The commit added a main method and the division operation in the main method, but the rest of the changes appear to be purely structural: renaming variables, methods, and classes without changing their behavior, extracting methods, reorganizing code structure while maintaining the same behavior, and simplifying conditional logic. There are no changes that could affect behavior or functionality.",
        "commit_message": "-Integration SIManager x PersistenceAdapter\n-SIManager Logging\n-Added new attributes to SIRequest"
    },
    {
        "repository": "https://github.com/nimbusproject/nimbus",
        "commit_hash_before": "a94bcf6497dc3d1be13458bca56d9909302139c1",
        "commit_hash_current": "9e19f2c35f063bffce326aed485e5370b3e9532e",
        "refactoring_type": "pure",
        "justification": "The changes in the commit consist mainly of restructuring and refactoring without any significant functional changes. The code is cleaned up, renamed variables, methods, and classes have been introduced or adjusted, but it does not appear to alter the functionality of the code.",
        "commit_message": "fixed tests and preparedstatement bug"
    },
    {
        "repository": "https://github.com/nimbusproject/nimbus",
        "commit_hash_before": "58154fef02fd83585f200aff2a3e26463b2e33e0",
        "commit_hash_current": "ed443fc5eb2ed63c9fb15abc81c404d4ec6fff04",
        "refactoring_type": "pure",
        "justification": "The commit consists of structural changes, such as renaming variables and extracting methods, without altering the functionality or behavior of the code. There are no additions of new features or bug fixes.",
        "commit_message": "Refactored Creation(DefaultCreation) to leave the instatiantion of the CreateResult object to the DelegatingManager (separation of concerns),\nso internal modules can use the Creation module without the need to parse the CreateResult (RM API) object, but have access to\nInstanceResource objects instead."
    },
    {
        "repository": "https://github.com/Catrobat/Catroid",
        "commit_hash_before": "f4503368f03fba5ab8b62b384f3f1aeaf53d3774",
        "commit_hash_current": "daf8c5b87d4987fe64b8989895c91d3527fd3efa",
        "refactoring_type": "pure",
        "justification": "The commit adds a new test file for the ContentManager class in Catroid. This does not seem to change any behavior or functionality of the existing code, but instead extends the testing capabilities of the application. Therefore, it can be classified as 'pure' refactoring.",
        "commit_message": "Task 16 Deploy"
    },
    {
        "repository": "https://github.com/Catrobat/Catroid",
        "commit_hash_before": "107816660353d404ad27d92f7190fdcace7bdd78",
        "commit_hash_current": "d65b50ad680c8b3a5032311af65e8c563b79b21e",
        "refactoring_type": "pure",
        "justification": "In this commit, the code has been restructured and refactored for better readability and maintainability. The changes primarily involve renaming variables, moving code, and simplifying conditionals without changing their logic. For example, the 'clear()' method is added in ContentManager.java, and the testSet() method is called after it, replacing the commented-out testSet() line. Additionally, a new BrickWait class has been created in the stage package. This class does not change any behavior or functionality of existing code, but rather serves as an observable that waits for a specified amount of time (as defined by the 'mWaitTime' variable) before notifying its observers. These changes fall under the category of 'pure' refactoring since they only improve the source code structure without modifying the behavior or features.",
        "commit_message": "task 11: added new observable BrickWait, waiting works now!"
    },
    {
        "repository": "https://github.com/Catrobat/Catroid",
        "commit_hash_before": "b25db7eb2028c72c1b0ee87eb42906ab190b1242",
        "commit_hash_current": "8791fc410f3dd351f9e341e6994e158ed6f614dd",
        "refactoring_type": "pure",
        "justification": "The changes in this commit are primarily focused on renaming variables and methods, extracting a method, and reorganizing code structure. There are no indications of new functionality, bug fixes, or behavior changes. Thus, it can be classified as 'pure' refactoring.",
        "commit_message": "done some TODOs"
    },
    {
        "repository": "https://github.com/Catrobat/Catroid",
        "commit_hash_before": "8791fc410f3dd351f9e341e6994e158ed6f614dd",
        "commit_hash_current": "00bc7fcd0df7f13cfa0df8985889240dfd3728fe",
        "refactoring_type": "pure",
        "justification": "The code changes appear to focus on modifying the visibility of certain UI elements (TextViews, EditTexts, and a Spinner) within various layouts in the user interface. This does not seem to alter the functionality or behavior of the app, but rather improves its presentation. As there are no indications of new features being added or existing bugs being fixed, this refactoring can be classified as 'pure'.",
        "commit_message": "fixed some bugs"
    },
    {
        "repository": "https://github.com/Catrobat/Catroid",
        "commit_hash_before": "b25db7eb2028c72c1b0ee87eb42906ab190b1242",
        "commit_hash_current": "00bc7fcd0df7f13cfa0df8985889240dfd3728fe",
        "refactoring_type": "pure",
        "justification": "The commit changes the variable names of several classes and methods, but none of these changes appear to affect functionality. This is a pure refactoring as it simplifies the code structure without altering behavior.",
        "commit_message": "fixed some bugs"
    },
    {
        "repository": "https://github.com/todoroo/astrid",
        "commit_hash_before": "d9241288b6283d6519ab1f7a4b0f0665bbf5714a",
        "commit_hash_current": "6784b38cb14df1de0c2f16a9b459f5e5fa89c159",
        "refactoring_type": "pure",
        "justification": "The commit primarily consists of the addition of resources for a new built-in timers plugin. The code changes do not alter the functionality or behavior of the existing features, they only add new features related to the alarm component of the timer plugin.",
        "commit_message": "Styled up producteev login activity. Next need to hook up to actual api calls"
    },
    {
        "repository": "https://github.com/todoroo/astrid",
        "commit_hash_before": "6784b38cb14df1de0c2f16a9b459f5e5fa89c159",
        "commit_hash_current": "cb7afcea2ce093eb837708017de111671c1f2339",
        "refactoring_type": "pure",
        "justification": "In the provided diff, there are no changes to behavior or functionality. The code has been reorganized and new methods have been added (usersSignUp in ProducteevInvoker.java) but they do not seem to affect the existing functionality. Additionally, there are no bug fixes or changes to method signatures that might suggest 'floss' refactoring.",
        "commit_message": "Got Producteev Login activity and signup working fully."
    },
    {
        "repository": "https://github.com/todoroo/astrid",
        "commit_hash_before": "8697f99cab17eeaa27fa3afef435725a8e762c34",
        "commit_hash_current": "0ced4fc3d9d94a5602ab2586938660db4fb0499c",
        "refactoring_type": "pure",
        "justification": "The commit primarily focuses on reorganizing code structure and renaming variables without changing the behavior or functionality of the widget. The sorting logic for tasks has been adjusted based on user preferences, but this is a functional change required to maintain the app's intended behavior rather than a refactoring effort. Thus, it can be classified as 'pure' refactoring.",
        "commit_message": "New sort selection activity now works, updates the task list as you'd expect."
    },
    {
        "repository": "https://github.com/todoroo/astrid",
        "commit_hash_before": "0ced4fc3d9d94a5602ab2586938660db4fb0499c",
        "commit_hash_current": "0ae7d4ddd2c565773260d69e68d36f8558cdc3f4",
        "refactoring_type": "pure",
        "justification": "In this commit, the code changes primarily consist of renaming variables and methods (such as adjustSortAndFlags -> adjustQueryForFlagsAndSort, PREF_SORT_FLAGS -> sortFlags, PREF_SORT_SORT -> sortSort). These changes do not appear to affect the behavior or functionality of the code. Additionally, there are no apparent bug fixes or additions of new features in the provided code diff.",
        "commit_message": "Fixed bug where neither widget nor task list would respect default settings"
    },
    {
        "repository": "https://github.com/todoroo/astrid",
        "commit_hash_before": "0ced4fc3d9d94a5602ab2586938660db4fb0499c",
        "commit_hash_current": "0ae7d4ddd2c565773260d69e68d36f8558cdc3f4",
        "refactoring_type": "pure",
        "justification": "In the provided code diff, there are no changes to behavior or functionality. The refactoring consists of renaming variables (PREF_SORT_FLAGS and PREF_SORT_SORT), a method name change from 'adjustSortAndFlags' to 'adjustQueryForFlagsAndSort', and minor modifications in some methods' names and parameter order without altering their functionality. These changes are purely structural, focusing on improving code readability and maintainability, which indicates that this commit represents a 'pure' refactoring.",
        "commit_message": "Fixed bug where neither widget nor task list would respect default settings"
    },
    {
        "repository": "https://github.com/cbeust/testng",
        "commit_hash_before": "e5bb0c6a57ea6a74c53f3e7ecd428c1523d4e5c9",
        "commit_hash_current": "f3ba8fb2363626ec1bc5c9641b2a507fe923d5d1",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit primarily focus on refactoring the project's internal structure, specifically for YAML support. There are no apparent modifications to behavior or functionality, only structural alterations such as adding and removing methods, reorganizing classes, and changing some variable types. This suggests that the changes are mainly 'pure' refactorings.",
        "commit_message": "YAML work"
    },
    {
        "repository": "https://github.com/cbeust/testng",
        "commit_hash_before": "f3ba8fb2363626ec1bc5c9641b2a507fe923d5d1",
        "commit_hash_current": "0ff15e6dff5ff4dc25656a75b4e4dad61633562c",
        "refactoring_type": "pure",
        "justification": "The commit appears to primarily consist of refactoring with no apparent changes to behavior or functionality. Changes include renaming variables, methods, and classes, as well as moving some test cases into packages and reorganizing the test suite structure. No new features were added or bugs fixed during this process.",
        "commit_message": "Simple yaml support"
    },
    {
        "repository": "https://github.com/cbeust/testng",
        "commit_hash_before": "c423a8d5b193fb9fa676cdb9071e5187683068ea",
        "commit_hash_current": "1ae7a7e42bee4747f0c5a6a7094ae17adedb6d56",
        "refactoring_type": "pure",
        "justification": "The code changes in the diff appear to mainly consist of restructuring and renaming of classes, methods, and packages without any apparent alterations in functionality or behavior. This includes moving some classes from one package to another, changing variable names, and renaming test cases. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "Working on code generation"
    },
    {
        "repository": "https://github.com/cbeust/testng",
        "commit_hash_before": "6c4f6756cf0bc5ae42cb8528a6de3183750c69d3",
        "commit_hash_current": "3b413ea073747aa23f8cdac88c13f0dcb6a0cb79",
        "refactoring_type": "pure",
        "justification": "The commit contains mainly structural changes such as the addition of new tests, new groups, and renaming/restructuring some classes and test cases. There is no evidence of behavior or functionality changes in the provided diff.",
        "commit_message": "YAML work"
    },
    {
        "repository": "https://github.com/cbeust/testng",
        "commit_hash_before": "6c6e3e49e66626ffb93397cd9d7dfb8029f9e6ac",
        "commit_hash_current": "cafec37c1c5651465143b6a1911bdad73cd8d6bd",
        "refactoring_type": "pure",
        "justification": "The commit appears to mainly consist of reorganizing existing tests into various categories such as 'BeforeGroups-AfterGroups', 'Hookable', and 'Asserts'. There are no changes that suggest a behavior or functionality change, making it a case of pure refactoring.",
        "commit_message": "Working on code generation"
    },
    {
        "repository": "https://github.com/forge/core",
        "commit_hash_before": "9faf729fd1c412eb3bd171d781e39d9568a2102e",
        "commit_hash_current": "37dec4e7d6159c96647cce5caf690b51a42d2004",
        "refactoring_type": "pure",
        "justification": "The commit appears to be a reorganization of code, with no changes in behavior or functionality. New classes and methods were added (CommandLibraryExtensionTest, MockNamedPlugin), but they do not seem to alter the original functionality. Instead, it appears these additions are used for testing purposes.",
        "commit_message": "added unit tests for CLExtension"
    },
    {
        "repository": "https://github.com/forge/core",
        "commit_hash_before": "4a8c6bf30508d8d233b735fe185ec88d3f18d7fe",
        "commit_hash_current": "96e0bdbb582b11fa689800273c62cf5ea5833235",
        "refactoring_type": "pure",
        "justification": "The code changes in the commit only consist of refactorings without any functional modifications. The addition of the 'GeneralUtils.OutputAttributes' class and related methods for managing output attributes do not alter the behavior of the existing functions. Furthermore, the modification of the 'printOutColumns' method to accept and use an instance of 'GeneralUtils.OutputAttributes' does not change its functionality or outcomes. Therefore, this refactoring is classified as 'pure'.",
        "commit_message": "implement color support"
    },
    {
        "repository": "https://github.com/forge/core",
        "commit_hash_before": "cf7ad11feab1afcd5087747b8d6997f791d8a290",
        "commit_hash_current": "87e92d7ae8c3675154286360c294c7048256e9f6",
        "refactoring_type": "pure",
        "justification": "The commit introduces no new functionality or changes to existing behavior. Instead, it reorganizes the code by adding and modifying imports, moving a class from one package to another, and changing some method names without affecting their functionality.",
        "commit_message": "more work on the shell parser"
    },
    {
        "repository": "https://github.com/forge/core",
        "commit_hash_before": "516e5c9cc89a29d79a57859260e5991dac60623e",
        "commit_hash_current": "d19bd8dcfd3d9bb4da3c8fb3dafcc0ceff869f97",
        "refactoring_type": "pure",
        "justification": "The commit does not appear to have made any changes that would affect the functionality or behavior of the code. The changes seem to be primarily organizational, such as adding XML parsing for maven metadata and refactoring some method calls. There are no signs of new features, bug fixes, or changes in output or behavior.",
        "commit_message": "more work on getting plugin installation working."
    },
    {
        "repository": "https://github.com/forge/core",
        "commit_hash_before": "516e5c9cc89a29d79a57859260e5991dac60623e",
        "commit_hash_current": "d19bd8dcfd3d9bb4da3c8fb3dafcc0ceff869f97",
        "refactoring_type": "pure",
        "justification": "The changes in the commit primarily involve renaming variables, methods, and restructuring code without any apparent functional changes. This indicates that it is a pure refactoring.",
        "commit_message": "more work on getting plugin installation working."
    },
    {
        "repository": "https://github.com/xetorthio/jedis",
        "commit_hash_before": "a614f1ff3ea6d634e173ad117c75c135532cd0cb",
        "commit_hash_current": "f9e7887e02b86ce893fde73dfec1ec5daabb7ba3",
        "refactoring_type": "pure",
        "justification": "The commit introduces changes to the imports and usage of InputStreams, but it doesn't seem to alter any functionalities or behavior. Instead, it appears to be a refactoring effort aimed at standardizing on RedisInputStream for input streams, which is consistent across all instances in the codebase.",
        "commit_message": "more optimizations on write side"
    },
    {
        "repository": "https://github.com/xetorthio/jedis",
        "commit_hash_before": "377c266dc1e7678b6a91d8dc9c41ab20115b947b",
        "commit_hash_current": "85ce39ca3e251cf79904088f6f0ecf3c91432070",
        "refactoring_type": "pure",
        "justification": "The commit introduces new helper classes ZParams and RedisOutputStream that encapsulate functionality, but the existing methods' behaviors remain unchanged. No new features have been added or existing bugs have been fixed. The refactoring aims to improve code organization and readability.",
        "commit_message": "BinaryClient is born"
    },
    {
        "repository": "https://github.com/xetorthio/jedis",
        "commit_hash_before": "85ce39ca3e251cf79904088f6f0ecf3c91432070",
        "commit_hash_current": "37a39152984e1b9a6b2c053d7730ae05c38c6f3b",
        "refactoring_type": "pure",
        "justification": "The commit includes code reorganization, renaming variables, and moving import statements to the top of the file. However, there are no changes that affect behavior or functionality, as all methods still perform their original tasks with the same inputs and outputs.",
        "commit_message": "BinaryJedis is born, Jedis inherits from it"
    },
    {
        "repository": "https://github.com/xetorthio/jedis",
        "commit_hash_before": "37a39152984e1b9a6b2c053d7730ae05c38c6f3b",
        "commit_hash_current": "ead39394a11e75d1f26989b2477d40c62404b60f",
        "refactoring_type": "pure",
        "justification": "The changes in the commit involve renaming variables, methods, and constants as well as extracting a method without affecting the functionality of the code. This is considered 'pure' refactoring.",
        "commit_message": "Fix some broken U tests (there are stille broken tests, working on it)"
    },
    {
        "repository": "https://github.com/xetorthio/jedis",
        "commit_hash_before": "75e52b9a26055476ff584e0e6836d9ccdd46cdc6",
        "commit_hash_current": "129e358c9dd8b35888708747d31dd31ca6cf7493",
        "refactoring_type": "pure",
        "justification": "The commit adds new classes and methods but they do not seem to change the behavior or functionality of the existing code. Instead, it appears that these changes are intended to expand the library's features by implementing more operations such as lpush, rpush, sadd, zadd, zrem for both string and binary data types.",
        "commit_message": "Now methods accepting infinit and exclusions are supported as String and byte[] overloads"
    },
    {
        "repository": "https://github.com/jclouds/jclouds",
        "commit_hash_before": "a9d425489f21ddb54acc7506fef993d1ad2f97eb",
        "commit_hash_current": "5154ab2ee8f4ecdf8aa68a6b6355145c514a3db4",
        "refactoring_type": "pure",
        "justification": "The changes in the commit only involve renaming variables, adding a new method, and updating some existing methods to accept additional parameters. The code doesn't seem to introduce any new functionality or change existing behavior, making it a pure refactoring.",
        "commit_message": "Refactored create client to be the jclouds way"
    },
    {
        "repository": "https://github.com/jclouds/jclouds",
        "commit_hash_before": "5154ab2ee8f4ecdf8aa68a6b6355145c514a3db4",
        "commit_hash_current": "73c5ff84d986bd489284be5c755c90dc9a413c54",
        "refactoring_type": "pure",
        "justification": "The commit modifies the Chef configuration files (chef-client, /etc/chef/first-boot.json, and private keys), but it does not appear to change any functionality or behavior. Instead, it seems to refactor and add new private key for running chef-client command with a different set of options.",
        "commit_message": "upgraded to 1.5.0-SNAPSHOT"
    },
    {
        "repository": "https://github.com/jclouds/jclouds",
        "commit_hash_before": "250722e9dfe70437235ea329a28f3602c2483a7b",
        "commit_hash_current": "ae857b4911619cc0f6e3fe9ddf06f6410ad1f087",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit consist of renaming variables and moving some logic around without changing the behavior or functionality. The variable 'validatorIdentity' and 'validatorCredential' are now set differently, but the end result (i.e., the values assigned to these variables) does not change - only the method used to obtain them differs. Additionally, the 'setIfTestSystemPropertyPresent' function is replaced with a new function 'setCredentialFromPemFile'. However, this refactoring does not impact the functionality as it still performs the same task: setting credentials if they are not already set. The code also includes some minor reorganization of conditional logic but maintains the same behavior. Since there are no functional changes or bug fixes, this commit can be classified as 'pure' refactoring.",
        "commit_message": "Initial live test fixes:\n\n* Disabled parallel integration test execution to avoid concurrent\n  creation of the same node.\n* Fixed @Credential binding to bind the contents of the PEM file instead\n  of the path.\n* Fixed validation identity and credential property loading.\n* TestOhaiModule did not use the overriden provider method. Changed\n  strategy live tests to check against the current user as set by the\n  CurrentUserProvider."
    },
    {
        "repository": "https://github.com/jclouds/jclouds",
        "commit_hash_before": "ae857b4911619cc0f6e3fe9ddf06f6410ad1f087",
        "commit_hash_current": "b88516fedc09bf21f514265457ffb44165e6202b",
        "refactoring_type": "pure",
        "justification": "The commit introduces new dependencies and configurations for specific API versions, but the code changes themselves do not appear to modify functionality or behavior. Instead, they seem to focus on improving modularity and organization by adding annotations related to API versioning.",
        "commit_message": "Added support for Chef 0.10\n\nIn Chef Server 0.10 the way the cookbooks are returned has changed. For\nthis reason, a couple of domain classes have been added to support this\nnew model.\n\nAlso added a @Provider in the ChefParserModule that will inject the\nappropriate parser depending on the jclouds.api-version property set on\nthe context. This way the ChefAsyncClient method signatures remain\nunchanged and the parser used to parse the cookbooks will be choosen at\nruntime depending on the version used to create the context."
    },
    {
        "repository": "https://github.com/jclouds/jclouds",
        "commit_hash_before": "05481efd715414529eba8bf6bb392fe18d063e5a",
        "commit_hash_current": "20912c9ad4d13c23e08715a944fb4cf8103ee4e1",
        "refactoring_type": "pure",
        "justification": "The commit introduces type token support for ChefContext within various tests, but the changes do not affect the behavior or functionality of the code. The modifications only serve to simplify and modernize the code structure.",
        "commit_message": "Enabled base Chef api tests in Private Chef\n\n* Refactored BaseChefClientLiveTest to allow the use of different\n  context types such as PrivateChefContext, etc.\n* Added delegate methods to PrivateChef*Clients to access the\n  Chef*Clients.\n* Removed the hardcoded Chef Server version in tests and read it from\n the system properties."
    },
    {
        "repository": "https://github.com/NXT/LEGO-MINDSTORMS-MINDdroid",
        "commit_hash_before": "f1e409bafb17eddf096e90840770c52c85228a69",
        "commit_hash_current": "f1562b290d4d9475de46c2c22e2f477d93083213",
        "refactoring_type": "pure",
        "justification": "The commit primarily contains renaming of packages and classes, which is a form of pure refactoring as it doesn't change the functionality or behavior of the code. There are no changes to method signatures, addition of new features, or bug fixes.",
        "commit_message": "changed package name for backport to com.lego.minddroid.backport"
    },
    {
        "repository": "https://github.com/apache/cassandra",
        "commit_hash_before": "f6deb516ae2009232a94d27a595c8eed367f1aaa",
        "commit_hash_current": "4a3436e4658cf63d9e7c5fb6381f09da084d181e",
        "refactoring_type": "pure",
        "justification": "The commit introduces no new functionality or changes to the existing behavior. Instead, it appears to be reorganizing and refactoring code for better maintainability and readability, such as adding a new class (ReplicationSink) and modifying some classes (StorageProxyTest and NotificationSink). Additionally, there are changes in method names, variable names, and indentation, but these do not seem to affect the functionality.",
        "commit_message": "make avro exception factory methods public\n\nPatch by eevans\n\ngit-svn-id: https://svn.apache.org/repos/asf/cassandra/trunk@1034533 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/cassandra",
        "commit_hash_before": "4a3436e4658cf63d9e7c5fb6381f09da084d181e",
        "commit_hash_current": "2c4ac98c9ffa8ea52da801830c7cdb745ddc28f0",
        "refactoring_type": "pure",
        "justification": "The code changes only rename a few variables and functions, and add new tests for some of the existing functions. These changes do not appear to alter the functionality or behavior of the code, as they are mostly renaming and reorganizing the existing structure.",
        "commit_message": "Adds support for columns that act as incr/decr counters. Patch primarily by Kelvin Kakugawa with select parts from Chris Goffinet, Sylvain Lebresne, Rob Coli, Johan Oskarsson, Adam Samet, Jaakko Laine and more. Review by Jonathan Ellis and Sylvain Lebresne. CASSANDRA-1072.\n\ngit-svn-id: https://svn.apache.org/repos/asf/cassandra/trunk@1051679 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/cassandra",
        "commit_hash_before": "2e27927111b6152ed960119e90ceb2a57053cb6d",
        "commit_hash_current": "3dc8066547de9c31be09cba912ddbb3262fd4870",
        "refactoring_type": "pure",
        "justification": "The commit mainly consists of renaming variables, methods, and classes in multiple files without changing their behavior or functionality. This is considered a pure refactoring since it does not affect the system's behavior.",
        "commit_message": "updateColumnFamily uses reload, remove unneccesary structures, fix bugs. patch by gdusbabek, reviewe by jbellis. CASSANDRA-1715\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cassandra/trunk@1036894 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/cassandra",
        "commit_hash_before": "5ea3dc3f61010ccf8591bc52460a7ba419978eaa",
        "commit_hash_current": "2c4ac98c9ffa8ea52da801830c7cdb745ddc28f0",
        "refactoring_type": "pure",
        "justification": "The commit contains only changes to class names, method names, and variable names without any modifications to the functionality or behavior of the code. This is a typical example of 'pure' refactoring.",
        "commit_message": "Adds support for columns that act as incr/decr counters. Patch primarily by Kelvin Kakugawa with select parts from Chris Goffinet, Sylvain Lebresne, Rob Coli, Johan Oskarsson, Adam Samet, Jaakko Laine and more. Review by Jonathan Ellis and Sylvain Lebresne. CASSANDRA-1072.\n\ngit-svn-id: https://svn.apache.org/repos/asf/cassandra/trunk@1051679 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/cassandra",
        "commit_hash_before": "2c4ac98c9ffa8ea52da801830c7cdb745ddc28f0",
        "commit_hash_current": "8110c63b16563e930504afaad800fb7b84b69410",
        "refactoring_type": "pure",
        "justification": "The commit does not seem to introduce any changes in behavior or functionality. It only updates the codebase by changing token scale, which is a configuration variable and doesn't affect the algorithm or structure of the Merkle Tree implementation. Additionally, there are no bug fixes, new features, or changes in method signatures observed.",
        "commit_message": "merge from 0.7\n\ngit-svn-id: https://svn.apache.org/repos/asf/cassandra/trunk@1053933 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/OSBI/saiku",
        "commit_hash_before": "ce158ab5557da05a372f99a07caffaeb74c2fca7",
        "commit_hash_current": "6990dca6a286acbb19bf2b3b1f351b0d076f6e74",
        "refactoring_type": "pure",
        "justification": "The commit refactors the project structure by renaming service classes and tests, moving to a separate test package, and creating a new web.xml file for the web application configuration. However, there are no changes in behavior or functionality as the code changes are strictly related to organization and naming conventions.",
        "commit_message": "webapp refactoring"
    },
    {
        "repository": "https://github.com/OSBI/saiku",
        "commit_hash_before": "509175e4781edb45d3ae4405d80e82cc678d5ae4",
        "commit_hash_current": "6e6051c6dc225376cd918de1e99ac3a313fb2685",
        "refactoring_type": "pure",
        "justification": "The commit does not seem to change any behavior or functionality, but instead restructures the code and adds some new classes (LevelRestPojo, MemberRestPojo) for better organization. It also modifies the existing convert methods to work with the new classes, but these changes do not affect the existing behavior.",
        "commit_message": "finish object refactoring"
    },
    {
        "repository": "https://github.com/OSBI/saiku",
        "commit_hash_before": "75beef05ccf7cc57293701c376032eca1274d854",
        "commit_hash_current": "35d3759cbc88c745b1ad054c4ab00276f780883c",
        "refactoring_type": "pure",
        "justification": "The changes in the commit add new files for Spring Beans configuration and InfoResource class to expose platform information, but there are no modifications made to existing functionalities. Therefore, it is classified as 'pure' refactoring.",
        "commit_message": "tests"
    },
    {
        "repository": "https://github.com/OSBI/saiku",
        "commit_hash_before": "a2f1633ab1d81a6a7932caf975e8916e26ad8a94",
        "commit_hash_current": "9dcd16b005ae65e7ec9ac654ff5f74a15e16ff8b",
        "refactoring_type": "pure",
        "justification": "The commit adds a new servlet for image conversion and configures it in the web.xml file, but there are no changes to existing functionality or behavior. Instead, this seems to be an extension of the application's capabilities by adding support for converting SVG images.",
        "commit_message": "refactor test suite for service"
    },
    {
        "repository": "https://github.com/OSBI/saiku",
        "commit_hash_before": "9dcd16b005ae65e7ec9ac654ff5f74a15e16ff8b",
        "commit_hash_current": "81747d3e7aee473075959803cf26a91a931dfdd5",
        "refactoring_type": "pure",
        "justification": "The commit only involves modifications in the properties files, which do not impact the functionality or behavior of the codebase. These changes only serve to alter the values of keys and their respective values.",
        "commit_message": "more refactoring during initial UI integration"
    },
    {
        "repository": "https://github.com/novoda/SQLiteProvider",
        "commit_hash_before": "8de02520191320057848fbd91a2a35ca1670b9aa",
        "commit_hash_current": "c45003ba6115c4f37e3c342231d811e7e5b20181",
        "refactoring_type": "pure",
        "justification": "The commit appears to have mainly structural changes with no functional changes. The modifications include renaming variables, adding new methods, and reorganizing code while maintaining the same behavior. No changes were made to the existing functionality or bugs.",
        "commit_message": "-Added test for insert\n-Added parent in query"
    },
    {
        "repository": "https://github.com/novoda/SQLiteProvider",
        "commit_hash_before": "c45003ba6115c4f37e3c342231d811e7e5b20181",
        "commit_hash_current": "89a883eb1b93662fdb3b811c71692e1f475fd1da",
        "refactoring_type": "pure",
        "justification": "The commit mainly involves code reorganization, renaming variables and methods, and simplifying conditional logic without changing the behavior of existing functions. This indicates that it is a 'pure' refactoring.",
        "commit_message": "Changed the naming arounf the URIUtils tests."
    },
    {
        "repository": "https://github.com/novoda/SQLiteProvider",
        "commit_hash_before": "97b0a5af7534e8c3b781e1c0a7fdb1eebaffe64a",
        "commit_hash_current": "46019ca2cca83fd005f6c24ba0e85e2cd3e77655",
        "refactoring_type": "pure",
        "justification": "The commit primarily focuses on refactoring the codebase, renaming variables and classes, simplifying conditional logic without changing the outcomes, and reorganizing the structure of the code. There are no visible changes in behavior or functionality.",
        "commit_message": "-Added test for insert\n-Added parent in query"
    },
    {
        "repository": "https://github.com/novoda/SQLiteProvider",
        "commit_hash_before": "46019ca2cca83fd005f6c24ba0e85e2cd3e77655",
        "commit_hash_current": "a057f0a2b11b4ea1fe452a1a25f0c17c26895b13",
        "refactoring_type": "pure",
        "justification": "The code changes in the commit appear to only restructure and simplify some methods without affecting their functionality. There are no apparent additions or modifications of features or behavior. Changes include renaming variables, moving methods, and removing unnecessary parameters.",
        "commit_message": "Changed the naming arounf the URIUtils tests."
    },
    {
        "repository": "https://github.com/novoda/SQLiteProvider",
        "commit_hash_before": "81b229052cfe12b27cb6d90db92f3b07975ba7a6",
        "commit_hash_current": "44aee8fb13381ee4f100ff55982f50c5e85e1ffd",
        "refactoring_type": "pure",
        "justification": "The commit only contains changes in the structure and naming of classes, methods, and variables without altering functionality or adding new features. This includes renaming ShadowContentUris class and its method, extracting insert method, and minor adjustments in SQLiteProvider and UriUtils classes.",
        "commit_message": "-Added test for insert\n-Added parent in query"
    },
    {
        "repository": "https://github.com/davidrea/Deacon",
        "commit_hash_before": "6363f25a80e608281fa898597d7fca289d871393",
        "commit_hash_current": "90c54d7094a4a1f2d7b018deaa9d28d62c451fb3",
        "refactoring_type": "pure",
        "justification": "The commit introduces new methods in DeaconObservable and DeaconObserver classes, but it doesn't seem to change the behavior or functionality of existing code. Instead, the refactored methods are providing additional functionality for event handling such as registration, unregistration, error notifications, reconnect events, and disconnect events with error objects. These changes are aimed at improving the structure and maintainability of the code, hence classifying this commit as 'pure' refactoring.",
        "commit_message": "added doc comments to DeaconObservable; fixed the DeaconObserver.onDisconnect method signature to include a DeaconError as a parameter, which was left out from an earlier commit"
    },
    {
        "repository": "https://github.com/nicolasgramlich/AndEngine",
        "commit_hash_before": "a121b8b0e587f25aca3f6c4e824b7e06d59ce3b9",
        "commit_hash_current": "b2851cb18f63bff4cc49d4ba4ec1aa42f3e4d9e3",
        "refactoring_type": "pure",
        "justification": "The code changes involve renaming the 'ModifierList' class from an ArrayList to a SmartList, and renaming one import statement. These changes do not affect behavior or functionality, only the implementation details.",
        "commit_message": "Added RectangleVertexBufferCache (so one RectangleVertexBuffers can be used easily by i.e. multiple sprites).\nFixed ScreenCapture so that also specific regions can be saved (not only the full screen).\nMinor changes in some Util classes."
    },
    {
        "repository": "https://github.com/nicolasgramlich/AndEngine",
        "commit_hash_before": "b2851cb18f63bff4cc49d4ba4ec1aa42f3e4d9e3",
        "commit_hash_current": "f54138516fdbf19bacf8017a86d8234f0d854f03",
        "refactoring_type": "pure",
        "justification": "The commit introduces new files and interfaces but there are no changes to existing functionality or behavior. The code structure has been reorganized, and new classes have been added, which is a typical characteristic of 'pure' refactoring.",
        "commit_message": "Added ScreenGrabber that gets the screen (or just a part of it) as a Bitmap.\nScreenCapture now uses ScreenGrabber to save that Bitmap to a file. (Before ScreenGrabber and ScreenCapture were in one class).\n\nAdded MIMEType Constants for PNG/GIF/JPEG.\nAdded an additional check for \"isFileExistingOnExternalStorageDirectory\" and \"isDirectoryExistingOnExternalStorageDirectory\"."
    },
    {
        "repository": "https://github.com/nicolasgramlich/AndEngine",
        "commit_hash_before": "f54138516fdbf19bacf8017a86d8234f0d854f03",
        "commit_hash_current": "2421f9ad72b83e0885a4173945fb15f3d03599f6",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit introduce a new class (TransformationPool) and modify the Transformation class to use it for caching, but there are no visible changes to behavior or functionality. The existing methods and their implementations remain unchanged, and only the way some of them are created is altered.",
        "commit_message": "Renamed IScreenshotCallback to IScreenCaptureCallback."
    },
    {
        "repository": "https://github.com/nicolasgramlich/AndEngine",
        "commit_hash_before": "2421f9ad72b83e0885a4173945fb15f3d03599f6",
        "commit_hash_current": "d41e9550ecdfe2a97c4b1c3b752a13904bdc07f0",
        "refactoring_type": "pure",
        "justification": "In the provided code diff, there are no changes to the behavior or functionality of the methods in question. The only modification is the renaming of a local variable (`pScreenCaptureCallback` to `mScreenCaptureCallback`) and a parameter (`pScreenshotCallback` to `pScreenCaptureCallback`). This refactoring does not affect the method's behavior or outcomes, as the renamed variables are used within the method but not outside of it. Therefore, this commit represents a pure refactoring.",
        "commit_message": "Minor change."
    },
    {
        "repository": "https://github.com/liato/android-bankdroid",
        "commit_hash_before": "23c60c840ae34211393d47fb51ce718e24b97b34",
        "commit_hash_current": "9d3a8deed59e2020820faf2c7330bacfd9a3ab18",
        "refactoring_type": "pure",
        "justification": "The commit appears to focus on code reorganization without altering functionality. The changes include renaming variables, moving code around, and updating class structure. There are no observed additions or modifications to behavior or new features, making this a 'pure' refactoring.",
        "commit_message": "Add license and change the way username/password fields are hidden when editing a bank."
    },
    {
        "repository": "https://github.com/liato/android-bankdroid",
        "commit_hash_before": "7d53eb1701c8a9118ddb6a8e8a78f04aece4bb0a",
        "commit_hash_current": "36014d9492bdaddbc4c08a07e15e6052baa17761",
        "refactoring_type": "pure",
        "justification": "The code refactoring in this commit primarily involves renaming variables and methods, simplifying conditional logic, and improving structure without affecting the functionality or behavior of the code. No new features have been added, no bugs have been fixed, and there are no changes to existing method signatures that could affect their behavior.",
        "commit_message": "Certificate pinning for all banks."
    },
    {
        "repository": "https://github.com/liato/android-bankdroid",
        "commit_hash_before": "36014d9492bdaddbc4c08a07e15e6052baa17761",
        "commit_hash_current": "b6954a56e965d07a0a524b44b6b8eb71eb0fe78d",
        "refactoring_type": "pure",
        "justification": "The commit contains changes that only affect the structure of the code, such as renaming variables and classes, extracting methods, and reorganizing code without changing their behavior. No new functionality has been added or existing behavior altered.",
        "commit_message": "Debug setting to disable certificate pinning."
    },
    {
        "repository": "https://github.com/liato/android-bankdroid",
        "commit_hash_before": "b6954a56e965d07a0a524b44b6b8eb71eb0fe78d",
        "commit_hash_current": "fe5870883d4630a0c35400fe305d4a39eedc216d",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new class (BankdroidHttpClient and DefaultishRequestDirector) that extends existing classes (DefaultHttpClient and DefaultRequestDirector). However, it does not seem to change the behavior or functionality of the original code. Instead, it appears to be a refactoring effort aimed at modularizing the code and possibly improving performance by updating the SSL socket factory host.",
        "commit_message": "Use internal ICA API for ICA implementation."
    },
    {
        "repository": "https://github.com/liato/android-bankdroid",
        "commit_hash_before": "7a8c08aad993142b091c026949f7f57d18923aee",
        "commit_hash_current": "619925b6927280466dddcd11db9e5c9521dc1e50",
        "refactoring_type": "pure",
        "justification": "In this commit, there are no functional changes or bug fixes observed. The only change is the renaming of a single class name from `Bredband2VoIp` to `Bredband2VoIP`. This change does not affect the behavior or functionality of the code as it is simply a cosmetic modification. Additionally, there are no new features added and existing code structure remains unchanged. The changes only involve structural adjustments without altering the logic or outputs.",
        "commit_message": "Bredband2-VoIP: rename, fix for www-login and reindent"
    },
    {
        "repository": "https://github.com/Graylog2/graylog2-server",
        "commit_hash_before": "8b43d9847c55d162d8d9fa832c41138a6b0af5a1",
        "commit_hash_current": "a46c93aab66e3dc68666cb0db55e61ccf01c45a5",
        "refactoring_type": "pure",
        "justification": "The commit adds new classes and tests for message handling, but the existing functionality remains unchanged. There are no changes to behavior or functionality, only structural changes with no functional changes. For example, new classes have been added (GELFMessage, ChunkedGELFMessage), but they do not alter the existing behavior.",
        "commit_message": "AMQP support"
    },
    {
        "repository": "https://github.com/Graylog2/graylog2-server",
        "commit_hash_before": "8e7849b82c383ff8cfb782b5ce760b2651ebe732",
        "commit_hash_current": "beb3787a28afbb53fa0439971a2054570221c903",
        "refactoring_type": "pure",
        "justification": "The commit adds a new class for testing the AMQPBroker, but no changes are made to existing functionality or behavior. Only structural changes are observed such as the creation of new methods and classes without affecting the existing code.",
        "commit_message": "moar"
    },
    {
        "repository": "https://github.com/Graylog2/graylog2-server",
        "commit_hash_before": "b252514ee7db256f93b46e0c30970f0c0d4b4b7f1",
        "commit_hash_current": "8f915277aedc1376318279c07064843ccb18a3a5",
        "refactoring_type": "pure",
        "justification": "The commit adds new test files for different classes in the Graylog2-server repository, but there are no changes to existing functionality or behavior. Instead, it seems like the tests are being expanded to cover more cases.",
        "commit_message": "Small cleanup of GELFMessage\n\n* added tests for toString(), toOneLiner(), and allRequiredFieldsSet()\n* refactored toString(), toOneLiner(), and allRequiredFieldsSet()"
    },
    {
        "repository": "https://github.com/Graylog2/graylog2-server",
        "commit_hash_before": "1ec836615891efd6bdfa78703d4be423e4ac36a6",
        "commit_hash_current": "33a8ab8884508aeb4b52b5bb5c1dc40a3e78e865",
        "refactoring_type": "pure",
        "justification": "The commit primarily involves renaming variables, methods, and parameters for better readability and consistency. There are no functional changes or additions of new features. This refactoring does not affect the behavior of the code.",
        "commit_message": "jackson fixes, total count API"
    },
    {
        "repository": "https://github.com/Graylog2/graylog2-server",
        "commit_hash_before": "727f4e87fdc76bf2e77aa8541ee422f5cee150e7",
        "commit_hash_current": "47c29e5845401886042369cc8f673bd112cb87ee",
        "refactoring_type": "pure",
        "justification": "The code changes in the diff primarily focus on extracting a common 'json' method across multiple classes for generating JSON responses. This refactoring does not appear to change any existing functionality, as all the methods involved in generating responses have been updated to utilize this new method. The addition of this method is a pure refactoring intended to improve code readability and maintainability.",
        "commit_message": "simplified json generation in rest resources"
    },
    {
        "repository": "https://github.com/Bukkit/Bukkit",
        "commit_hash_before": "da063ad675a4c4eddfd929478c6c2120e812cab0",
        "commit_hash_current": "587ee346f88860c568a83e8af3127815b62f19b6",
        "refactoring_type": "pure",
        "justification": "The code changes in the diff show refactorings without any functional changes or bug fixes. For example, a new 'clearCommands()' method has been added to the CommandMap interface and its implementation classes (CommandMap.java and SimpleCommandMap.java). Additionally, a 'performCommand(String command)' method has been added to Player.java. However, these changes do not seem to affect the behavior or functionality of the code. The added methods only provide new features for manipulating commands, but their presence does not alter the existing code's behavior.",
        "commit_message": "Fixed only being able to use /reload once"
    },
    {
        "repository": "https://github.com/droolsjbpm/drools",
        "commit_hash_before": "80e44e962576404eac75faf37c39937d0087cd82",
        "commit_hash_current": "c91b7633b9102a4bb217f92e469d29c0e34d54f5",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit involve renaming a variable and modifying the constructor of a class, but there is no evidence that these modifications affect the behavior or functionality of the code. The changes are purely structural without any discernible functional differences.",
        "commit_message": "JBRULES-2642 Getting tests working for new updated parser.\\n MVEL accumulations now work"
    },
    {
        "repository": "https://github.com/torquebox/torquebox",
        "commit_hash_before": "11f0ff7e645071c0af0cca4c04f6e6dfad21d33c",
        "commit_hash_current": "157ef47b985149f3733a65930710224421c379a2",
        "refactoring_type": "pure",
        "justification": "The commit removes the dependency on 'org.torquebox.injection.spi.InjectableRegistry' and replaces it with 'java.util.Map', but the functionality remains the same, as shown by the removal of 'RubyInjectionProxy' and its methods in the codebase. This refactoring does not change behavior or functionality, so it is classified as pure.",
        "commit_message": "Simplify the injection-registry construction to use maps.\nRemove un-used files."
    },
    {
        "repository": "https://github.com/torquebox/torquebox",
        "commit_hash_before": "d9b6953f23c5dedb413883442ba30150c37aeaff",
        "commit_hash_current": "bffff02ef7a105d2238356c9f97f2db40e4fb52a",
        "refactoring_type": "pure",
        "justification": "The commit primarily involves renaming an interface and a class without any changes in functionality. The InjectableRegistry interface is deleted, and the RubyInjectionProxy interface has a new method setInjectionRegistry which replaces the previous setInjectableRegistry method in the same interface. This change does not affect the behavior or outputs of the methods.",
        "commit_message": "Simplify the injection-registry construction to use maps.\nRemove un-used files."
    },
    {
        "repository": "https://github.com/torquebox/torquebox",
        "commit_hash_before": "7e184962cbf1d79ea8b17849c51dff3ecdeab5e3",
        "commit_hash_current": "cc58a5dd957596a360be11ba238e57544defe883",
        "refactoring_type": "pure",
        "justification": "In the provided diff, there are no visible changes to behavior or functionality. The code addition of import statements for 'org.jboss.vfs.VFS' and 'org.jboss.vfs.VirtualFile' seems to be for better organization and readability purposes. However, these imports do not seem to affect the behavior of the existing methods in any way. Furthermore, an existing assertEquals statement has been replaced with a modified version that uses a newly introduced VirtualFile object, but this change does not alter the test case's outcome since it only normalizes file paths across different operating systems. Therefore, this commit appears to be a 'pure' refactoring.",
        "commit_message": "Clean up behind Bobasaurus and his Windows-bashing"
    },
    {
        "repository": "https://github.com/torquebox/torquebox",
        "commit_hash_before": "b242ddb5e9b7b52ac55f106ccf697f8cb383acd7",
        "commit_hash_current": "a6ed1efba51986966978eb253fb2af49c0b571af",
        "refactoring_type": "pure",
        "justification": "The commit adds new tests and refactors some code, but the changes do not appear to significantly alter the functionality or behavior of the system. The primary changes include: - Adding a new test class (RuntimeContextTest) with methods for testing runtime context switching in threads. - Refactoring the RuntimeContextTest.getTheRuby method to use the JavaHelper class instead of directly calling the getCurrentRuntime() method on the Ruby object, likely for improved modularity and easier testing. - Adding a new Thread-based test (testWithThreadsGalore) that utilizes the newly added RuntimeContextTest class and method. These changes are primarily structural and do not seem to affect the core functionality of the system.",
        "commit_message": "Yo dawg, I herd you liked threads, so I put a thread in your thread in your thread, so you can spawn while you spawn.\n\nDRY up all the context-setting around the multitude of methods for invoking\nRuby, using a Callable<?>.\n\nAssociate RuntimeContext's Ruby based on the JRubyClassLoader which we\njam into the TCCL."
    },
    {
        "repository": "https://github.com/torquebox/torquebox",
        "commit_hash_before": "a6ed1efba51986966978eb253fb2af49c0b571af",
        "commit_hash_current": "48dd823089ea241e724b16be6396a41b3a2cd671",
        "refactoring_type": "pure",
        "justification": "The commit removes an entire file and does not seem to have any functional changes or modifications in the remaining code. This suggests that it is a pure refactoring.",
        "commit_message": "Revert \"Yo dawg, I herd you liked threads, so I put a thread in your thread in your thread, so you can spawn while you spawn.\"\n\nThis reverts commit a6ed1efba51986966978eb253fb2af49c0b571af."
    },
    {
        "repository": "https://github.com/MovingBlocks/Terasology",
        "commit_hash_before": "40a501a975ee5f9edd56bda7c52cf3036e58078d",
        "commit_hash_current": "29a8631e9a626385957a2a42bd15b7ca1e1d80ab",
        "refactoring_type": "pure",
        "justification": "The commit introduced a new method 'generateTrees()' which allows for tree generation across the entire terrain, and modified the existing 'setBlock(Vector3f pos, int type)' method to accept an additional boolean parameter in some instances. However, these changes do not appear to alter the behavior or functionality of the existing codebase. Instead, it seems like a refactoring effort to improve modularity and add new functionality without significantly changing the existing code.",
        "commit_message": "Replaced single OpenGL calls with Vertex Arrays, split the generation of chunks, terrain is now generated by each chunk, trees can be generated by pressing \"T\", player can be reset by pressing \"R\", more coming soon!"
    },
    {
        "repository": "https://github.com/MovingBlocks/Terasology",
        "commit_hash_before": "29a8631e9a626385957a2a42bd15b7ca1e1d80ab",
        "commit_hash_current": "4a40152f5175e882cbffce7bc9cc43729448e82c",
        "refactoring_type": "pure",
        "justification": "The commit removes the use of a timer to update daylight and replaces it with an OpenGL method for drawing the sun. There are no visible changes in behavior or functionality, as the daylight update is still occurring every 60 seconds (as indicated by the comment). The change can be classified as pure refactoring because it simplifies the code structure while maintaining the same functional outcome.",
        "commit_message": "Rewrite of the lighting(!) Looks much better now. New trees. Added a sun. Stone is now being randomly placed within hills. [...]"
    },
    {
        "repository": "https://github.com/MovingBlocks/Terasology",
        "commit_hash_before": "4a40152f5175e882cbffce7bc9cc43729448e82c",
        "commit_hash_current": "674372daec0cd6f7ca3c58ad19797f35e7cddc9f",
        "refactoring_type": "pure",
        "justification": "The commit changes the values of several constants, such as block types and chunk dimensions, but these changes do not appear to affect the behavior or functionality of the code. Additionally, the code refactors some methods and reorganizes the structure without introducing new features or bug fixes. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "Bugfixes and improvements"
    },
    {
        "repository": "https://github.com/MovingBlocks/Terasology",
        "commit_hash_before": "674372daec0cd6f7ca3c58ad19797f35e7cddc9f",
        "commit_hash_current": "f6997e1bab7963360de3c212a0681372ae35dd39",
        "refactoring_type": "pure",
        "justification": "The commit modifies the class PerlinNoiseGenerator by initializing the random seed based on a given string, and reshuffling the noisePerm array. However, these changes do not appear to modify or add any new functionality. Instead, they seem to focus on code organization and improving the way the seed is generated.",
        "commit_message": "Many, many changes and optimizations!"
    },
    {
        "repository": "https://github.com/MovingBlocks/Terasology",
        "commit_hash_before": "0b886fbdd3473972ee11d94764ec73f9b08587b7",
        "commit_hash_current": "bfbd9a0ac4478651ced6e72e1c88b5201fa16833",
        "refactoring_type": "pure",
        "justification": "The commit modifies the PerlinNoiseGenerator class by initializing the random seed based on a given string, but it does not change any behavior or functionality of the noise method. Additionally, the grad and noiseWeight methods remain unchanged. The code refactoring seems to be purely organizational without affecting the program's output.",
        "commit_message": "Optimizations and new demo features"
    },
    {
        "repository": "https://github.com/nzakas/cssembed",
        "commit_hash_before": "34d41a1cfd7de4fb4f2cde580e394bc8ac8c4823",
        "commit_hash_current": "a4f622dd7ed65a241935601f8fae73ad3f401ee5",
        "refactoring_type": "pure",
        "justification": "The commit adds a new command line option `--image-size` and updates the parsing of other options. However, there are no changes to existing functionality or behavior that can be observed in the provided diff. The modifications are strictly related to code structure (adding a new option to the parser) without affecting the existing logic.",
        "commit_message": "Add -i/--image-size parameter, which lets you only convert files under a certain number of bytes.\n\nThis tackles the first of two options Nicholas mentioned in Issue #6"
    },
    {
        "repository": "https://github.com/nzakas/cssembed",
        "commit_hash_before": "5670dd12c8cf9869309411950a672f54d8aa3da2",
        "commit_hash_current": "5139afb6a600150b21ee745aead083e05561f7cc",
        "refactoring_type": "pure",
        "justification": "In the provided Git diff, there are no changes to behavior or functionality. The code reorganization consists of renaming a single variable `maximagesize` to `maxImageSize`, and updating corresponding instances in the class accordingly. This is an example of 'pure' refactoring as it only focuses on improving the source code structure without affecting any functional aspects.",
        "commit_message": "Standardize some variable naming\nClean up tests a bit"
    },
    {
        "repository": "https://github.com/nzakas/cssembed",
        "commit_hash_before": "5139afb6a600150b21ee745aead083e05561f7cc",
        "commit_hash_current": "6c7d9a7f8fcfde931dfeba3a55f700d3fb886526",
        "refactoring_type": "pure",
        "justification": "In this commit, the variable name 'maxUriLengthh' was renamed to 'maxUriLength'. This is a simple change to improve code readability and maintainability without affecting the behavior or functionality of the code. Therefore, it can be classified as a pure refactoring.",
        "commit_message": "maxUriLengthh -> maxUriLength (fat-fingered that one whoops)"
    },
    {
        "repository": "https://github.com/nzakas/cssembed",
        "commit_hash_before": "524b8429069e051ba812884a5a3db99e80dac924",
        "commit_hash_current": "db8cd8e693350501959cc5bab34dcca8298badbf",
        "refactoring_type": "pure",
        "justification": "In the provided code diff, there are no changes to behavior or functionality. The version number of `cssembed` has been incremented from 0.3.4 to 0.3.5 in the properties file and the option name for handling missing files has been changed from 'allowmissingfiles' to 'skip-missing'. However, these changes do not affect the behavior or outcomes of the code. The commit only modifies variable names and method signatures without altering their functionality, which is indicative of a pure refactoring.",
        "commit_message": "Some minor renaming, addition of menu option (fixes #21 and #22)"
    },
    {
        "repository": "https://github.com/nzakas/cssembed",
        "commit_hash_before": "3df7dfcb88e44d23cb2ae7e38f774910908be347",
        "commit_hash_current": "493501d92fc29d2cc46ae65f9932c974e0bb93c4",
        "refactoring_type": "pure",
        "justification": "In the provided code diff, there are no apparent changes to the behavior or functionality of the code. The commit has removed some lines of code and introduced a new method isImage(). However, this method only changes how the file extension is detected (by moving the check for query string parameter) without affecting the original logic. Additionally, the new method improves the maintainability by removing the hardcoded list of image types and replacing it with a more generic check. These modifications are purely structural and don't impact the functionality, making this commit a 'pure' refactoring.",
        "commit_message": "Issue #32 : Fixes getImageURIString to handle images with query parameters"
    },
    {
        "repository": "https://github.com/osmandapp/Osmand",
        "commit_hash_before": "167469f450baf74395b4a7ce2e22e0ce19d4d384",
        "commit_hash_current": "66634c0c8bb59c288bf766cf0a30f5de681e294d",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new boolean parameter 'firstTime' to the checkPreviousRunsForExceptions method, but it does not seem to change the behavior of the method. Instead, it appears to be an addition intended to provide more flexibility in handling app first-time runs or previous crashes, while maintaining the same functionality as before.",
        "commit_message": "add contribution version changes"
    },
    {
        "repository": "https://github.com/osmandapp/Osmand",
        "commit_hash_before": "b8f06495cc67723ba491f0008946e72acc5e8deb",
        "commit_hash_current": "76ea95f3cea4e350cfe522738c98a59f2442bac5",
        "refactoring_type": "pure",
        "justification": "The commit changes the way the map tile source is obtained, but it does not alter its behavior or functionality. It introduces a new method 'getInternetAvailableSourceTemplates()' which stores internet-available templates for faster access in case of an active internet connection. However, the existing functionality remains unchanged as the default map tile source is still TileSourceManager.getMapnikSource(). This is considered a pure refactoring since it does not introduce new features or affect the current behavior.",
        "commit_message": "Refactor map tile sources for Osmand and MapCreator"
    },
    {
        "repository": "https://github.com/osmandapp/Osmand",
        "commit_hash_before": "7098112f4285abb8524430bc77b1c089dfa84a41",
        "commit_hash_current": "b3a929006ac3c875aeeba9b3c8d6c22f903d9572",
        "refactoring_type": "pure",
        "justification": "In the provided code diff, there are no observed functional changes or bug fixes. Instead, there seems to be a structural change in the TileSourceManager.java file, such as renaming BeanShellTileSourceTemplate to BeanshellSourceTemplate and modifying other related names accordingly. This refactoring focuses on improving code structure and readability, which classifies it as 'pure' refactoring.",
        "commit_message": "user scripting for map tile URLs"
    },
    {
        "repository": "https://github.com/osmandapp/Osmand",
        "commit_hash_before": "b3a929006ac3c875aeeba9b3c8d6c22f903d9572",
        "commit_hash_current": "07b1117a20f08a74a7eb5b2ff992fed2680816d1",
        "refactoring_type": "pure",
        "justification": "The commit appears to change the implementation of tile sources for Beanshell, replacing the original inline script with a new method call. However, this refactoring does not seem to affect the functionality or behavior of the tile sources as they still return the same URLs. The changes are purely structural and serve to simplify and organize the code.",
        "commit_message": "simplification, compatibility with MOBAC scripts"
    },
    {
        "repository": "https://github.com/osmandapp/Osmand",
        "commit_hash_before": "45002d3a77e4318e1479ac3acefdb812d5083d61",
        "commit_hash_current": "6be18e90236709f3c22dedbd7f2c74f28ad285df",
        "refactoring_type": "pure",
        "justification": "The changes in this commit only involve the formatting and structure of the code, such as renaming variables and methods, extracting methods, reorganizing the code structure, and simplifying conditional logic. None of these modifications seem to have an impact on the behavior or functionality of the code. Therefore, this is classified as a 'pure' refactoring.",
        "commit_message": "first working tts with english sample tts config file.\nThere are still some prolems when initializing tts and the code is not\nyet prepared for android 1.5"
    },
    {
        "repository": "https://github.com/sk89q/worldguard",
        "commit_hash_before": "215b2b5f75a71cc22a836298b7f4eada9eea8e3f",
        "commit_hash_current": "1f69622a346740e4aacd1e117e0d4921d7109c3a",
        "refactoring_type": "pure",
        "justification": "The commit adds a new method `onPlayerBedEnter` in the class `ProtectionManager`. This event listener handles player bed enter events and checks for region permissions to prevent players from sleeping in unauthorized beds. However, it does not change any existing functionality or behavior. The added method is purely an extension of the existing code, which makes this a 'pure' refactoring.",
        "commit_message": "Added a lot of missing things to player listener."
    },
    {
        "repository": "https://github.com/sk89q/worldguard",
        "commit_hash_before": "ca8bb7f5f00bbd79984fa3c24d31060902806c4c",
        "commit_hash_current": "1cedf0e9a04516c620d49c9202cf84f0f138c627",
        "refactoring_type": "pure",
        "justification": "The commit adds a new method 'onPlayerBedEnter' to the class 'WorldGuardListener'. However, it does not change any existing functionality. Instead, it extends the event handling capabilities of the class by detecting when a player enters a bed and checks if the player is allowed to sleep in the region. The changes are purely structural without affecting the behavior or functionality of the existing code.",
        "commit_message": "Added a lot of missing things to player listener."
    },
    {
        "repository": "https://github.com/sk89q/worldguard",
        "commit_hash_before": "c75d6125411465098105e3a6c091589f561ec30d",
        "commit_hash_current": "c5f3a27d6b49e030d41d212b9d6f6211ce48c5a6",
        "refactoring_type": "pure",
        "justification": "The code diff shows changes primarily in the organization and structure of the codebase, including renaming variables, reorganizing imports, and extracting methods. There are no apparent changes to behavior or functionality. This commit appears to be a pure refactoring.",
        "commit_message": "Rewrote greeting/farewell and notify-enter/notify-leave flags."
    },
    {
        "repository": "https://github.com/bigbluebutton/bigbluebutton",
        "commit_hash_before": "335fd9591df43e446bfc0916ba9388785c81c17c",
        "commit_hash_current": "cfe20900f20d7cb5c770e9fa26c5304ad4e763bf",
        "refactoring_type": "pure",
        "justification": "The commit contains changes to method names and imports, as well as the addition of a new import for Apache Commons Codec. However, none of these changes seem to impact the functionality or behavior of the code. Instead, it appears that this refactoring is aimed at improving readability, organization, and perhaps security (with the addition of DigestUtils).",
        "commit_message": "- now has setup for testing"
    },
    {
        "repository": "https://github.com/bigbluebutton/bigbluebutton",
        "commit_hash_before": "cfe20900f20d7cb5c770e9fa26c5304ad4e763bf",
        "commit_hash_current": "78adae06967a7ee1b332f0cbb017cee4698b5ace",
        "refactoring_type": "pure",
        "justification": "The commit introduces test cases for the ApiController but does not appear to change any existing functionality or behavior. It seems to focus on reorganizing code, renaming variables, and adding new variables without altering the existing logic.",
        "commit_message": "- join and create api have unit tests"
    },
    {
        "repository": "https://github.com/bigbluebutton/bigbluebutton",
        "commit_hash_before": "78adae06967a7ee1b332f0cbb017cee4698b5ace",
        "commit_hash_current": "8d63e0a717b5a01a2f6c42459cd221974a02f07c",
        "refactoring_type": "pure",
        "justification": "In this commit, the name of a class is changed from 'ApiController' to 'RichardController'. This is purely a renaming of the class without any changes to its behavior or functionality. As such, it can be classified as 'pure' refactoring.",
        "commit_message": "- continue refactoring bbb-web, renamed a few classes, and change get-meetings-info api"
    },
    {
        "repository": "https://github.com/bigbluebutton/bigbluebutton",
        "commit_hash_before": "f1a55ba26b862143f800bf8520e3d71049916622",
        "commit_hash_current": "d022aafb61c6d5fe2207dcc31f8159d1c94a48ca",
        "refactoring_type": "pure",
        "justification": "The code changes in the commit are purely structural modifications. There are no functional changes, bug fixes, or additions of new features. Instead, the classes and methods used for sending messages have been updated to use a new constant `MessagingConstants`. This does not alter the functionality but is a refactoring to better organize and standardize the code.",
        "commit_message": "Cleanup bigbluebutton-web and bigbluebutton-apps"
    },
    {
        "repository": "https://github.com/bigbluebutton/bigbluebutton",
        "commit_hash_before": "1f620583a28cd84d6edebab48aeccc3622fa9c2e",
        "commit_hash_current": "a0d4c61082a56593a08a3779dd5b19a95a92c253",
        "refactoring_type": "pure",
        "justification": "The changes in this commit do not seem to alter the functionality of the codebase. Instead, it appears that new classes (Config and Meeting) have been added and existing ones modified to accommodate these new additions. Specifically, there are no changes made to methods or variables that would affect their behavior. Therefore, I classify this as a 'pure' refactoring.",
        "commit_message": "- add ability to post config xml for meeting"
    },
    {
        "repository": "https://github.com/griffon/griffon",
        "commit_hash_before": "83eac686739827b0e54e866702120ada8d0dafcb",
        "commit_hash_current": "75a35963385a08848bbc62271ddfb96a28eedd69",
        "refactoring_type": "pure",
        "justification": "The commit mainly involves moving the scripts from root level to a src/main/groovy directory, and creating a new file in src/main/resources. These changes do not alter the functionality of the code or introduce any new features.",
        "commit_message": "update mp build to work with latest trunk"
    },
    {
        "repository": "https://github.com/griffon/griffon",
        "commit_hash_before": "83eac686739827b0e54e866702120ada8d0dafcb",
        "commit_hash_current": "be16cf59727362d9b39852dd6ecdd6800051ad16",
        "refactoring_type": "pure",
        "justification": "The commit primarily involves moving files from the main 'scripts' directory to a subdirectory named 'subprojects/scripts'. This refactoring does not seem to affect the functionality or behavior of the codebase, as it only reorganizes the file structure and doesn't modify any class names, method signatures, or functional logic. It is therefore classified as 'pure' refactoring.",
        "commit_message": "make checkstyle happy"
    },
    {
        "repository": "https://github.com/griffon/griffon",
        "commit_hash_before": "5a1e7cad242866d688c0284b1ef5b276379fcb18",
        "commit_hash_current": "acca1ad16a0aa1a68d905eddd93d98c8471990a8",
        "refactoring_type": "pure",
        "justification": "The commit contains changes to import statements, class and method names, but none of these alter the functionality or behavior of the code. The modifications seem to be organizational in nature, simplifying the code structure without affecting its outputs.",
        "commit_message": "Update swing bundle"
    },
    {
        "repository": "https://github.com/griffon/griffon",
        "commit_hash_before": "5f25d6f66b455ca9be4e44cff39378d5da4e6bf4",
        "commit_hash_current": "94a783acc2f3cc9abeae69693a5e1b224a4537fa",
        "refactoring_type": "pure",
        "justification": "The commit introduces new modules and dependencies for the Griffon Scaffolding Swing Plugin, but there are no changes to existing behavior or functionality. The code refactoring appears to be focused on organizing project structures for additional components rather than altering the current functionalities.",
        "commit_message": "Add scaffolding plugins; still a lot of work to be done"
    },
    {
        "repository": "https://github.com/sanity/tahrir",
        "commit_hash_before": "63df4762af7c4d764b409749a387e022704fb908",
        "commit_hash_current": "1e222a45894380b1414078cfb06dc1fb347e8e08",
        "refactoring_type": "pure",
        "justification": "The code changes in the diff do not show any functional modifications or bug fixes. Instead, they indicate a focus on improving the code structure and maintainability: \n1) The .classpath file change updated the target platform and compliance level for Java 1.6 instead of 1.5, indicating an improvement in code compatibility.\n2) The org.eclipse.jdt.core.prefs file modification adjusted the compiler settings to use Java 1.6 as the source and target platform, further confirming the refactoring is purely structural. \n3) The pom.xml file update added a new Maven Compiler Plugin configuration with version 2.3.2 that sets the source and target to Java 1.6, also supporting the classification as pure refactoring.",
        "commit_message": "various"
    },
    {
        "repository": "https://github.com/sanity/tahrir",
        "commit_hash_before": "aa7a897c840a4cc5f43c7d8cd63f03d8ac14dd57",
        "commit_hash_current": "4be4e8d01db7a1a936e849d4576433aefafea90a",
        "refactoring_type": "pure",
        "justification": "The commit primarily involves renaming of classes, interfaces, and methods related to networking (UdpRemoteAddress -> RemoteNodeAddress, UdpNetworkLocation, and TrPeerInfo) without any changes in their behavior or functionality. Additionally, the import statements were adjusted accordingly.",
        "commit_message": "commit"
    },
    {
        "repository": "https://github.com/sanity/tahrir",
        "commit_hash_before": "02592260ac0e5681e96d7b2d8e938a2a26065987",
        "commit_hash_current": "9c404694bffdcbc2ee2d758f356b7d5a0e9cb851",
        "refactoring_type": "pure",
        "justification": "The commit introduces new classes and methods for ShortMessage, MicrobloggingManager, and SimpleMicroblog. However, these changes do not seem to alter the existing functionality or behavior of the codebase. Instead, they appear to be aimed at improving readability, organization, and potentially adding additional functionality in future commits.",
        "commit_message": "gui commit"
    },
    {
        "repository": "https://github.com/SimpleServer/SimpleServer",
        "commit_hash_before": "057c05465b39881c09265c28ebfbd2c252d27a2d",
        "commit_hash_current": "2e09f0dd9e9a6cd6ebebce847d6b85053937936b",
        "refactoring_type": "pure",
        "justification": "The commit refactors the codebase, but no changes are made to behavior or functionality. Changes include updating import statements, formatting, and adding comments. The addition of a new method in one class does not alter the existing functionality.",
        "commit_message": "added login ban and improved various things"
    },
    {
        "repository": "https://github.com/SimpleServer/SimpleServer",
        "commit_hash_before": "b101229a668c441e52a392697f932488683be51f",
        "commit_hash_current": "6a9a80ea9babf13345a5f96e2f212150cb14c123",
        "refactoring_type": "pure",
        "justification": "The changes in the commit mainly consist of extracting parts of the code to separate classes (Herobrine, Teleporter), reorganizing the structure of those classes, and adding a new method to one of them (LookAround). However, there are no apparent changes to behavior or functionality. The addition of new methods does not alter the existing functionality as they serve to add new behaviors in their respective classes.",
        "commit_message": "enhanced bots"
    },
    {
        "repository": "https://github.com/SimpleServer/SimpleServer",
        "commit_hash_before": "6a9a80ea9babf13345a5f96e2f212150cb14c123",
        "commit_hash_current": "d51e66630e346015f51dbd150dbac4b2029c441d",
        "refactoring_type": "pure",
        "justification": "The commit involves refactoring of the code without any changes to behavior or functionality. Changes include renaming and reorganization of classes, methods, and variables. There are no bug fixes or additions of new features.",
        "commit_message": "enhanced bots"
    },
    {
        "repository": "https://github.com/SimpleServer/SimpleServer",
        "commit_hash_before": "620ed651d8dbbe3a0e9a257b7d3844ba2dd06567",
        "commit_hash_current": "1e604118e571c79e89e52cccc761c4008b120a09",
        "refactoring_type": "pure",
        "justification": "The commit contains changes that simplify the code structure, rename variables and methods, and move some code from one class to another without any significant behavior or functionality changes. The changes in the diff suggest this is a pure refactoring.",
        "commit_message": "moved stats to GlobalData"
    },
    {
        "repository": "https://github.com/SimpleServer/SimpleServer",
        "commit_hash_before": "cfbce4351327f0f1a52ac2161dcbf49a0b31dad4",
        "commit_hash_current": "c564ad94fd349e74d090fcb4e37e7d8e32ee8bd1",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new import (simpleserver.Color) but it doesn't seem to affect the functionality of the code. Instead, it is used to format messages in a more user-friendly way. The rest of the changes appear to be purely structural, such as renaming variables and reorganizing code structure while maintaining the same behavior.",
        "commit_message": "new player message sending system"
    },
    {
        "repository": "https://github.com/FamilySearch/gedcomx",
        "commit_hash_before": "283e4036072ac8a6837bac7575296cc3aa4bc1a7",
        "commit_hash_current": "6fbd322315fada0cf9d2d6ad14cfe33c12fa7fec",
        "refactoring_type": "pure",
        "justification": "The commit changes the JSON annotations for some classes, but there are no functional changes or behavior modifications. It appears to be a refactoring effort aimed at improving the code structure or adherence to specific standards (e.g., Jackson annotations).",
        "commit_message": "fixing serialization/deserialization to/from json"
    },
    {
        "repository": "https://github.com/FamilySearch/gedcomx",
        "commit_hash_before": "97eca1fd734e14515b14aad4c5d4e5a40a204fed",
        "commit_hash_current": "c845c64338da31e68a01c72e106ea0fa1a80a8dc",
        "refactoring_type": "pure",
        "justification": "The commit introduced changes only to class and variable names, as well as the order of properties in XML annotations. There are no functional changes or additions of new features, which indicates that this is a 'pure' refactoring.",
        "commit_message": "adding extension points to conclusion, source models"
    },
    {
        "repository": "https://github.com/FamilySearch/gedcomx",
        "commit_hash_before": "e935cb3642e427baddf8e8a123054a13a8b0b5ec",
        "commit_hash_current": "989820360de9986cab99c17920e114500d6bd9df",
        "refactoring_type": "pure",
        "justification": "The changes in this commit are purely structural, with no apparent modifications to behavior or functionality. Examples include renaming variables and methods, updating dependencies to the latest snapshots, and minor modifications to the testng annotations.",
        "commit_message": "add create, delete, head on person"
    },
    {
        "repository": "https://github.com/FamilySearch/gedcomx",
        "commit_hash_before": "2e5d6fa2a12723f4048fbf687a7cd2346a2bcec1",
        "commit_hash_current": "f0bdc10c925a379d480f884a893dfc3453dffc8d",
        "refactoring_type": "pure",
        "justification": "The commit only involves renaming classes and XML types from 'gxc' to 'gx', which does not seem to affect the functionality or behavior of the code. This appears to be a refactoring effort for better naming consistency, falling under the category of 'pure' refactoring.",
        "commit_message": "getting rid of literal value, inlining child text where reasonable"
    },
    {
        "repository": "https://github.com/FamilySearch/gedcomx",
        "commit_hash_before": "c4f644e69cf3fa70f7cc1915ad17921710e60b88",
        "commit_hash_current": "6eb384dbcb56d7b5c39f9b7bb81846263a991626",
        "refactoring_type": "pure",
        "justification": "The changes in this commit seem to be purely organizational, moving the definitions of data types from Python to XML. There are no functional changes and the behavior of the code remains unaltered.",
        "commit_message": "cleaning up some loose ends for removing formal value, making sure xml and json documents reflect the conceptual model."
    },
    {
        "repository": "https://github.com/hornetq/hornetq",
        "commit_hash_before": "cc7cb76b5ec40e2a75ff73137e97287e890fc6ba",
        "commit_hash_current": "1696985ae318d446b7f746d2ca0eb73464644b81",
        "refactoring_type": "pure",
        "justification": "The commit adds a new Live Connector configuration for the backup node, but it does not change any existing behavior or functionality. The code modifications are limited to configuring the connector and adding it to the configuration object.",
        "commit_message": "HORNETQ-720 Add a HaBackupRegistrationMessage (still not functional)"
    },
    {
        "repository": "https://github.com/hornetq/hornetq",
        "commit_hash_before": "1696985ae318d446b7f746d2ca0eb73464644b81",
        "commit_hash_current": "c5f9848295732a766b82f16e58af3006837c4828",
        "refactoring_type": "pure",
        "justification": "The commit in question introduces changes to the imported classes and method parameters, but none of these changes affect the functionality or behavior of the code. The primary purpose appears to be improving organization and readability by using class names instead of string literals for TransportConfiguration classes and providing canonical names for the InVM and Netty factories. As a result, this commit represents pure refactoring.",
        "commit_message": "Use class objects instead of hard-coded names in strings."
    },
    {
        "repository": "https://github.com/hornetq/hornetq",
        "commit_hash_before": "9eaa20a97f910cae5b11b7954bb78a19eadb878d",
        "commit_hash_current": "d8e4ed9792702fa876afedf0ca711188b020fb51",
        "refactoring_type": "pure",
        "justification": "The commit does not seem to introduce any new functionality or change the behavior of existing features. It appears to be a code refactoring effort aimed at simplifying conditional logic and improving the organization of code. The removal of an unused variable, changes in method invocations, and comments updates suggest this is purely structural in nature.",
        "commit_message": "HORNETQ-720 Still with non-functional replication"
    },
    {
        "repository": "https://github.com/hornetq/hornetq",
        "commit_hash_before": "d8e4ed9792702fa876afedf0ca711188b020fb51",
        "commit_hash_current": "e4a3bb31e9d7d339f5b5e87d70347b35314686b4",
        "refactoring_type": "pure",
        "justification": "The commit introduces changes to the code structure, such as renaming variables and methods, without affecting the functionality. There are no additions or modifications of features, nor bug fixes that would alter behavior.",
        "commit_message": "HORNETQ-720 pass CoreRemotingConnection instead of channels, as it \nallows us to use the failureListener."
    },
    {
        "repository": "https://github.com/hornetq/hornetq",
        "commit_hash_before": "0ac87f82edcbc24904136a5f1d10f1f9cf5b53b3",
        "commit_hash_current": "431e600f8d5acaa1edb68e9f03191a72bb231d1e",
        "refactoring_type": "pure",
        "justification": "The code changes in the diff do not exhibit any functional modifications or bug fixes. Instead, they focus on adjusting the alignment settings for various types of expressions and arguments within the Java files. These changes solely affect the source code structure without impacting its behavior. Therefore, this refactoring can be classified as 'pure'.",
        "commit_message": "HORNETQ-720 Add ClusterConnectionConfiguration's to backup and live confs"
    },
    {
        "repository": "https://github.com/Multiverse/Multiverse-Core",
        "commit_hash_before": "29851679364a64b796a120f3db4d7e8d512a0e1c",
        "commit_hash_current": "5b30e7214e230d7cddbadd4d7d4305a64cc7dc62",
        "refactoring_type": "pure",
        "justification": "The commit introduces the CommandHandler library for handling commands, which is a refactoring of the command management system. However, there are no changes to behavior or functionality in the code provided, only changes to how the commands are handled. This qualifies as pure refactoring.",
        "commit_message": "Implement new CommandHandler"
    },
    {
        "repository": "https://github.com/Multiverse/Multiverse-Core",
        "commit_hash_before": "5b30e7214e230d7cddbadd4d7d4305a64cc7dc62",
        "commit_hash_current": "ac66c2f3bb3c70ef626d7f725d13d3182093501e",
        "refactoring_type": "pure",
        "justification": "The commit mainly consists of reorganizing the code structure, renaming variables and methods, and simplifying the code without changing the behavior or functionality. There are no new features added, bug fixes, or changes to the existing behavior in the code changes provided.",
        "commit_message": "Sync with the Wiki"
    },
    {
        "repository": "https://github.com/Multiverse/Multiverse-Core",
        "commit_hash_before": "d63c04336812bd0404d0f35960e16f4aab023887",
        "commit_hash_current": "66538ccd02c526d95478f886216c5b2bfedc306a",
        "refactoring_type": "pure",
        "justification": "The commit seems to focus on renaming imports and internal class names, as well as adding annotations, without any functional changes. This appears to be a purely cosmetic refactoring to keep the code clean and consistent.",
        "commit_message": "Moved API around, added more docs"
    },
    {
        "repository": "https://github.com/Multiverse/Multiverse-Core",
        "commit_hash_before": "303bbc317b0c715a27675e4c12f915ab2b4e8093",
        "commit_hash_current": "abb58b0563637dfa2ea8589c447d219b14de2d49",
        "refactoring_type": "pure",
        "justification": "The commit includes changes to the code structure and imports, but it does not seem to alter the functionality or behavior of the classes. Renaming variables and reorganizing imports can be considered as a pure refactoring.",
        "commit_message": "Pull changes from master."
    },
    {
        "repository": "https://github.com/Multiverse/Multiverse-Core",
        "commit_hash_before": "5ae12022d1a663b5c2ae753a7fb0f38a9615c4c2",
        "commit_hash_current": "fc24062f66066080df16a9fc7310f965198814b0",
        "refactoring_type": "pure",
        "justification": "The commit introduces no changes to functionality or behavior. It only adds a new property 'displaypermerrors' to the config file and modifies some code for better error handling in tests. The production code is not affected, hence classifying it as 'pure' refactoring.",
        "commit_message": "Add firstworldspawn, safe spawn disabling, fix a few neat bugs."
    },
    {
        "repository": "https://github.com/droolsjbpm/guvnor",
        "commit_hash_before": "de314ce88e71ebe4465f575a57bd9b5d21206afa",
        "commit_hash_current": "8bfc86df97c00df05d8f1c0253d63213a6f98eb8",
        "refactoring_type": "pure",
        "justification": "The code changes consist mainly of renaming variables, methods, and adding a test method. There are no functional or behavioral changes observable in the diff provided.",
        "commit_message": "GUVNOR-1560 : Each Item in Package Snapshots should be a place"
    },
    {
        "repository": "https://github.com/droolsjbpm/guvnor",
        "commit_hash_before": "8667f5041453f1ebce22602ccde1ff0bf64a51e1",
        "commit_hash_current": "626e51cbd6557aac6247a25ea11ea15c44f39835",
        "refactoring_type": "pure",
        "justification": "The changes in the commit appear to be purely structural, with no noticeable changes in behavior or functionality. The code has been refactored to include format information for Asset objects and update the metadata generation logic, but these modifications do not seem to affect the overall functioning of the application.",
        "commit_message": "GUVNOR-1593. Load module specific editors for module view based on module types."
    },
    {
        "repository": "https://github.com/droolsjbpm/guvnor",
        "commit_hash_before": "949199b04671f1d1b7ac9de3fe844f7ef7e58bae",
        "commit_hash_current": "5dba8a2e1f9b061a96dfa898f3dc0d8e1c79f03c",
        "refactoring_type": "pure",
        "justification": "The changes in the code appear to be purely organizational, with no visible impact on functionality or behavior. For example, the AssetEditorConfigurationParserTest class now includes an additional configuration, but it does not seem to affect existing test cases. Similarly, the RepositoryPackageServiceTest class modifies some file paths without altering its primary functionality. These changes can be considered as pure refactoring.",
        "commit_message": "GUVNOR-1637: Role based authorization: User with analyst permission can not view source/validate/verify/change state on asset."
    },
    {
        "repository": "https://github.com/droolsjbpm/guvnor",
        "commit_hash_before": "b6199693a2bc7eca375dd6c59667958316e1eecd",
        "commit_hash_current": "54d02021105d6cce3e357881404a9b5e722f1db6",
        "refactoring_type": "pure",
        "justification": "The commit only contains changes in the test files, such as adding new tests and refactoring existing ones. There are no functional changes or additions to the actual project code.",
        "commit_message": "rename variable to repositoryStartupService"
    },
    {
        "repository": "https://github.com/droolsjbpm/guvnor",
        "commit_hash_before": "54d02021105d6cce3e357881404a9b5e722f1db6",
        "commit_hash_current": "34788e9bd63ffdac673683f4745ee423d46f4632",
        "refactoring_type": "pure",
        "justification": "In the provided code diff, there are no apparent changes to behavior or functionality. The commit removes print statements and replaces them with a log.info() call, which is a change in logging format but does not affect the application's functionality. Additionally, the comments suggest that the code was cleaned up by removing some redundant checks and simplifying the code structure without altering its behavior.",
        "commit_message": "Simplify RulesRepositoryManager + move SampleSaveEvent"
    },
    {
        "repository": "https://github.com/resthub/resthub-spring-stack",
        "commit_hash_before": "8460dc279e6eccd6c517e00a0ea66f96f725ce02",
        "commit_hash_current": "2c609bb5628657d5d34968fcc06fac13bca19571",
        "refactoring_type": "pure",
        "justification": "The commit removed test files and added a new JpaRepository-based repository interface for WebSampleResource. However, the actual service implementation remains unchanged, and no functional changes are visible in the code. Therefore, this refactoring appears to be purely structural.",
        "commit_message": "Replace Dao by Repository"
    },
    {
        "repository": "https://github.com/apache/httpclient",
        "commit_hash_before": "444c6bf0e877d9c8be19e1f262f3a81178b5929b",
        "commit_hash_current": "bf13db811532ae773a107ffeec9980f85d72a6af",
        "refactoring_type": "pure",
        "justification": "The commit removes the code responsible for creating and managing BackoffManager and ConnectionBackoffStrategy objects, which were previously initializing with empty instances. This change does not affect the behavior or functionality of the code, as it only removes redundant initialization logic (extracting methods without altering functionality). Additionally, no new features are added, and there are no bug fixes that can be identified from the diff.",
        "commit_message": "Eliminated synchronization overhead introduced by the connection backoff code\n\ngit-svn-id: https://svn.apache.org/repos/asf/httpcomponents/httpclient/trunk@1156175 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/magro/memcached-session-manager",
        "commit_hash_before": "fc019a95cefeb7dff4f8ac604913a5b729ead3d8",
        "commit_hash_current": "cb43d3c9306fd6b75ec4232807cd661ada3b6a86",
        "refactoring_type": "pure",
        "justification": "The changes in this commit only involve adding support for a new type of Memcached server configuration (HTTP) and adjusting test data accordingly. The functionality of the existing MemcachedNodeManager class remains unchanged, making it a pure refactoring.",
        "commit_message": "Fix MemcachedNodesManager so that it allows single node configuration (localhost:11211), membase bucket configuration (http://localhost:8091/pools) and multiple memcached nodes config."
    },
    {
        "repository": "https://github.com/magro/memcached-session-manager",
        "commit_hash_before": "cb43d3c9306fd6b75ec4232807cd661ada3b6a86",
        "commit_hash_current": "f30841c1b741ae8b232ffb8660e62e30e1372767",
        "refactoring_type": "pure",
        "justification": "The commit does not appear to introduce any functional changes. It modifies the import statements, reorganizes some code blocks, and adds or modifies some constant values for enumerated types (ACQUIRE_LOCK, etc.). These changes are purely structural and do not affect the behavior or functionality of the program.",
        "commit_message": "Support multiple membase uris, remove NodeFailureException."
    },
    {
        "repository": "https://github.com/magro/memcached-session-manager",
        "commit_hash_before": "0034cc048dc00dde9d7225d57553c2eee51434df",
        "commit_hash_current": "a77e57ede407d2f003dc4ee4af2f8650efa56cb0",
        "refactoring_type": "pure",
        "justification": "The commit introduces a test case for the parallel requests to the same Tomcat instance issue 111, but it does not modify any existing functionality or behavior. Instead, it extends the test suite with an additional test scenario that checks for the correct handling of sessions in a concurrent environment without changing the original codebase.",
        "commit_message": "Fixed issue #111 \"Concurrent requests for a non-sticky session on the same tomcat may interfere\".\n\nA session now holds a \"refCount\" that stores the requests that are using the session.\nOnly the last request (the one with last registered reference) that invoked \"backupSession\"\nwill remove the session from the internal session map."
    },
    {
        "repository": "https://github.com/helun/Ektorp",
        "commit_hash_before": "d8f9c47784d0d4f9e690a026b293869194254747",
        "commit_hash_current": "8bb9efc472aa6e69627c76d64d7b739aeb17c0ba",
        "refactoring_type": "pure",
        "justification": "The commit involves changes in the way data is handled and stored within the `UpdateHandlerRequest` class. Instead of storing the content as a string, it now stores an object `body`. However, there's no evidence that this change alters the behavior or functionality of the code. The rest of the changes appear to focus on refactoring for improved readability and maintainability by removing duplicated imports and simplifying some parts of the code.",
        "commit_message": "reference to ObjectMapper removed from UpdateHandlerRequest"
    },
    {
        "repository": "https://github.com/helun/Ektorp",
        "commit_hash_before": "2104d32433f663ca01ac769d57097a698affaefb",
        "commit_hash_current": "8c89cc37cb7d03752a57da8d396ef0c804f2d1cb",
        "refactoring_type": "pure",
        "justification": "The code changes primarily involve the addition of new methods in HttpResponseStub and PageResponseHandler classes that are marked as 'TODO Auto-generated method stub'. These changes do not seem to affect behavior or functionality, indicating a pure refactoring.",
        "commit_message": "Fixes #67: Issues with paging backwards"
    },
    {
        "repository": "https://github.com/helun/Ektorp",
        "commit_hash_before": "b33256c3c89266c412d09295624c5ae505fbe758",
        "commit_hash_current": "c8a40164ed5fb9f433fe3903840938f7147e3e45",
        "refactoring_type": "pure",
        "justification": "The commit includes changes related to code formatting, renaming variables and classes (for example, Document becomes Doc), and adjustments in import statements. However, these changes are purely structural and do not affect the functionality or behavior of the code. The new Jackson version might have been updated for better compatibility or performance but it doesn't seem to impact the code in any functional way.",
        "commit_message": "Created a constant for the _attachments property name in CouchDbDocument and use it in the AttachmentsInOrderParser."
    },
    {
        "repository": "https://github.com/dynjs/dynjs",
        "commit_hash_before": "7ab15b983b8ffce6b13379a2c883ee41d281262a",
        "commit_hash_current": "e1df1a742dd6e14170851822e85d5b5364524182",
        "refactoring_type": "pure",
        "justification": "The commit includes structural changes in the code, such as renaming an Identifier to id and adding a new line of code that sets the value of a variable ($value) based on the result of a method call (globalScope.resolve($id.text)). However, it does not seem to have any functional changes or bug fixes, so we classify this commit as 'pure' refactoring.",
        "commit_message": "variable lookup working \\o/ (global only)"
    },
    {
        "repository": "https://github.com/dynjs/dynjs",
        "commit_hash_before": "7316d97841587b521c67b30f3f0f92309c5e1568",
        "commit_hash_current": "66a82652cfe1a0d126d33316caebc79ba24d0c2e",
        "refactoring_type": "pure",
        "justification": "The commit contains refactorings of the code without any changes to behavior or functionality. Examples include renaming variables, methods and classes, simplifying conditional logic, and extracting methods. No new features have been added, no bugs have been fixed, and there are no changes to method signatures that could affect behavior.",
        "commit_message": "Add back executioncontext signatures so JIT partially runs"
    },
    {
        "repository": "https://github.com/dynjs/dynjs",
        "commit_hash_before": "66a82652cfe1a0d126d33316caebc79ba24d0c2e",
        "commit_hash_current": "163e98a0c15a6b83a78ca29a631e64a1454bece4",
        "refactoring_type": "pure",
        "justification": "The code changes consist mainly of the addition or modification of comments, import paths, and test files. There are no observable alterations to the functionality, behavior, or outputs of methods. Instead, it seems like improvements were made to the code structure, organization, and testing setup.",
        "commit_message": "Add naive captured local variables. Add should also be able to subtract. Fix return to actually return"
    },
    {
        "repository": "https://github.com/dynjs/dynjs",
        "commit_hash_before": "163e98a0c15a6b83a78ca29a631e64a1454bece4",
        "commit_hash_current": "c82c22edf2b62541383f3e6db7ed1f1b55e8b92d",
        "refactoring_type": "pure",
        "justification": "The changes in the commit primarily involve renaming and reorganizing methods within classes, which are considered as pure refactoring as they do not seem to affect the functionality or behavior of the code.",
        "commit_message": "Merge cherry-pick"
    },
    {
        "repository": "https://github.com/dynjs/dynjs",
        "commit_hash_before": "40f0a958048ec2a08de00723e52324c9b4c684fc",
        "commit_hash_current": "40fff9065e50f60e3b1f7db10bfdbabc911e3377",
        "refactoring_type": "pure",
        "justification": "The commit adds a new test case for testing the accuracy of stack traces, but there are no changes to existing behavior or functionality. Instead, it seems to be an addition of a new feature while restructuring code and maintaining the original functionality.",
        "commit_message": "* Add Object.prototype.pp() to help debug.\n* Add better stack-gathering for JS exceptions.\n* Add better stack-gathering for percolated Java exceptions."
    },
    {
        "repository": "https://github.com/jenkinsci/android-emulator-plugin",
        "commit_hash_before": "bbad5ee191b4a2eff132fb8cb7d0224537adfe33",
        "commit_hash_current": "367d5c92abc3623bba71ce22db4cb9243b0edbd8",
        "refactoring_type": "pure",
        "justification": "The commit adds a new snapshot load and save functionality, but it is implemented alongside existing classes (SnapshotLoadBuilder and SnapshotSaveBuilder) without altering their behavior or affecting the overall functionality of the plugin. This refactoring only introduces new features while keeping the original code structure intact.",
        "commit_message": "Add build steps that can load and save emulator snapshots."
    },
    {
        "repository": "https://github.com/jenkinsci/android-emulator-plugin",
        "commit_hash_before": "9ddf0bb8a081e5b78dd87dd3a9d53fc8bd003d66",
        "commit_hash_current": "05ca6d05439a157a89d892e0e00226291e2c3cb5",
        "refactoring_type": "pure",
        "justification": "The code changes primarily involve renaming variables, methods and classes, extracting methods, and simplifying conditional logic without changing their behavior. There are no signs of added functionality or bug fixes that would alter the plugin's behavior. Hence, this refactoring can be classified as 'pure'.",
        "commit_message": "Implement detection and installation of required SDK dependencies.\n\nInstallation will now block per-node so that only one executor on\nthe same machine can attempt to install an SDK component concurrently.\n\nAdded detection of various scenarios that aren't yet possible to automate.\n\nUpdated initial SDK to download to r15."
    },
    {
        "repository": "https://github.com/jenkinsci/android-emulator-plugin",
        "commit_hash_before": "8224c8a6d8cc35062c3b9889c5c3262c8995fdfa",
        "commit_hash_current": "34ce7cf7d805fa6c6aedfed4f74a17ffe9226387",
        "refactoring_type": "pure",
        "justification": "The code changes in the commit seem to be focused on reorganizing and simplifying existing methods, renaming variables, and adding comments. There are no indications of any behavior or functionality changes. This indicates that this is a 'pure' refactoring.",
        "commit_message": "Move all SDK Tool commands to seperate classes beneath the android_emualtor.sdk.cli\npackage. A SdkCliCommandFactory will provide the correct implementation for the\ngiven SDK version respective the given API level. This adds easier managable\nsupport for different version of the SDK."
    },
    {
        "repository": "https://github.com/jenkinsci/android-emulator-plugin",
        "commit_hash_before": "34ce7cf7d805fa6c6aedfed4f74a17ffe9226387",
        "commit_hash_current": "14c62239a910ec8bde0c2523e559a3143bb77d57",
        "refactoring_type": "pure",
        "justification": "The commit appears to only include changes to the format and handling of configuration files. No new functionality or behavior seems to be introduced, nor are any existing functions or features altered. The changes appear to be purely structural, such as the addition of a test for an unsupported file type and the handling of different file formats (INI and properties). Additionally, methods like `parseConfigFile` and `writeConfigFile` have been refactored to handle both INI and properties files, without changing their existing functionality.",
        "commit_message": "Findbugs: Fix NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE errors\n\nMost of the findings were return values being null if the\nbuild node is not available (getWorkspace, getNode, getComputer).\nTherefore a new BuildNodeUnavailableException was added, which\nis simply an IOException which a specific message, getting thrown\nif the instance is null."
    },
    {
        "repository": "https://github.com/ThreeTen/threetenbp",
        "commit_hash_before": "6db1f15ad8f79e79ff7bf0e52502cdc2953f6c2c",
        "commit_hash_current": "13eaa8128c1858abc2b068025230532aa5617f95",
        "refactoring_type": "pure",
        "justification": "The code changes involve renaming of constants and methods, as well as restructuring of the existing code without any alterations to behavior or functionality. For example, 'packPy', 'edFromPy', 'pemdFromPy' and 'yFromPy' have been renamed to 'packPyd', 'edFromPyd', 'pemdFromPyd' and 'yFromPyd' respectively. Additionally, 'LocalDate.of' has been changed to use 'LocalDate.of(year, monthOfYear, dayOfMonth)' instead of the previous approach with multiple parameter validations. These changes are purely structural and do not affect the functionality of the code.",
        "commit_message": "Minor tweaks"
    },
    {
        "repository": "https://github.com/ThreeTen/threetenbp",
        "commit_hash_before": "8bdf40169197e0ac3c51a86097187d5d4c2ba9c0",
        "commit_hash_current": "5b3764966ddb97a793d82a70e1092c4d792f6597",
        "refactoring_type": "pure",
        "justification": "The commit primarily focuses on reorganizing and renaming variables, methods, and classes without changing their behavior. This includes creating new rules for the Ethiopic chronology and caching them for deserialization. However, it does not seem to add any new functionality or alter existing ones.",
        "commit_message": "Start mixed strategy (non compiling)"
    },
    {
        "repository": "https://github.com/ThreeTen/threetenbp",
        "commit_hash_before": "5b3764966ddb97a793d82a70e1092c4d792f6597",
        "commit_hash_current": "e78b63bbd4c8753b6d8d2e29e8c28ccba1800e3e",
        "refactoring_type": "pure",
        "justification": "The changes appear to be purely organizational and do not introduce new functionality or affect existing behavior. The code reorganization includes renaming variables, methods, moving some logic around, and modifying the class structure. No bug fixes were made, and there are no indications of added features or changes to the program's output.",
        "commit_message": "Working set of calculations based on values alone\n\nStill need to handle reverse get/set eg. packed DoM/MoQ"
    },
    {
        "repository": "https://github.com/ThreeTen/threetenbp",
        "commit_hash_before": "e78b63bbd4c8753b6d8d2e29e8c28ccba1800e3e",
        "commit_hash_current": "11d301e84dcf36e25243d97c0a51596c6a27405d",
        "refactoring_type": "pure",
        "justification": "The changes in this commit only involve adding a new test class for ISODateTimeRule and its packPemd method. However, there are no modifications to the existing methods or functionalities within ISODateTimeRule itself. This suggests that the refactoring is purely organizational or structural without affecting the original behavior.",
        "commit_message": "Add code for get/set instant"
    },
    {
        "repository": "https://github.com/ThreeTen/threetenbp",
        "commit_hash_before": "11d301e84dcf36e25243d97c0a51596c6a27405d",
        "commit_hash_current": "32c3bdf93afae2f10df030030d7f3f7e32ad6667",
        "refactoring_type": "pure",
        "justification": "The commit introduces changes in the names of variables, methods and classes without altering their behavior or functionality. It also reorganizes code structure while maintaining the same behavior. No new features are added and no existing bugs are fixed. The only visible change is the renaming of test_* constants to TEST_* and the introduction of the YEAR field in LocalDate which seems like a clean-up or naming convention change.",
        "commit_message": "Add sample methods to LocalDate"
    },
    {
        "repository": "https://github.com/excilys/androidannotations",
        "commit_hash_before": "ef3b617992c40523a62a864a56e7b5933d49cda2",
        "commit_hash_current": "b9ea3ff87539539d8b53fe2de11ac856d8f3744b",
        "refactoring_type": "pure",
        "justification": "The changes are purely structural, focusing on reorganizing the codebase and adding new annotations such as MediaType in MyService interface. There are no signs of behavior or functionality changes in the provided diff.",
        "commit_message": "Add Accept annotation"
    },
    {
        "repository": "https://github.com/excilys/androidannotations",
        "commit_hash_before": "b9ea3ff87539539d8b53fe2de11ac856d8f3744b",
        "commit_hash_current": "f655d0df3171259b75abd801f0cea9c09aab07ee",
        "refactoring_type": "pure",
        "justification": "The code diff shows changes in the names of methods within the ValidatorHelper, AfterViewsValidator, BeforeCreateValidator, ClickValidator, ItemClickValidator, ItemLongClickValidator, ItemSelectedValidator, LongClickValidator, RunnableValidator, and TouchValidator classes. However, there are no apparent changes to their functionality or behavior based on the provided code snippets. Therefore, this refactoring appears to be purely structural (renaming methods) with no functional changes.",
        "commit_message": "Renaming boolean and void validation methods in helper"
    },
    {
        "repository": "https://github.com/excilys/androidannotations",
        "commit_hash_before": "f655d0df3171259b75abd801f0cea9c09aab07ee",
        "commit_hash_current": "1332cf6a48151d6b7f48681c5e02961b01a5c55c",
        "refactoring_type": "pure",
        "justification": "The commit consists of refactorings that do not alter the functionality or behavior of the codebase. Examples include renaming variables, moving methods to different classes, and adding or removing imports without changing existing functionalities.",
        "commit_message": "Refactor the main rest method which generates rest template block"
    },
    {
        "repository": "https://github.com/excilys/androidannotations",
        "commit_hash_before": "be0c22f00e56d63fc8c69c78a3e5df04874f2cdb",
        "commit_hash_current": "73a46254719b29cb2e83706e55672868c8a5b3d7",
        "refactoring_type": "pure",
        "justification": "The changes in this commit consist mainly of structural modifications, such as renaming variables and methods, creating new classes, and adding test files. There are no observable changes to the functionality or behavior of the existing code.",
        "commit_message": "Changed @EComponent to @EViewGroup, and added support for @Click @ItemClick @ItemLongClick @ItemSelected @LongClick and @Touch in @EViewGroup"
    },
    {
        "repository": "https://github.com/excilys/androidannotations",
        "commit_hash_before": "7822f9b847f2c0a929686d3a8debf1c7ef604c39",
        "commit_hash_current": "adf11c179cd312c0d5f179c600f4fd218a342abb",
        "refactoring_type": "pure",
        "justification": "The commit mainly includes changes in the code related to file paths and plugin IDs, as well as adding new preference files. These changes do not seem to affect the functionality or behavior of the code. Instead, it appears to be refactoring for better organization and integration with the project's build system.",
        "commit_message": "Fixed issue 118. PrefValidator now validates @Pref when the shared preference is being generated in the current round"
    },
    {
        "repository": "https://github.com/JakeWharton/ActionBarSherlock",
        "commit_hash_before": "5df4d80d5d00fb3e4fbaf08ff2295ba95ec54353",
        "commit_hash_current": "fc1ffa70104409907c3b5a9c0fa7d7fa2866b04c",
        "refactoring_type": "pure",
        "justification": "The commit removes the import for Android's Window feature, which is no longer needed as it was deprecated in ActionBarSherlock. The rest of the code doesn't show any changes to behavior or functionality.",
        "commit_message": "Import menu and action item classes from ABS4."
    },
    {
        "repository": "https://github.com/JakeWharton/ActionBarSherlock",
        "commit_hash_before": "f7ff60549426a8963ef52d38e43140886fc887c5",
        "commit_hash_current": "d2a4d94236b93804a688ae514a7a5e10df3a1713",
        "refactoring_type": "pure",
        "justification": "The code diff shows only structural changes with no functional changes, indicating 'pure' refactoring. The new method `bindOverflowToNative` has been added to the MenuBuilder class, which binds non-action items to a native menu. However, this addition does not appear to change any existing behavior or functionality.",
        "commit_message": "Properly bind overflow items to the native options menu."
    },
    {
        "repository": "https://github.com/JakeWharton/ActionBarSherlock",
        "commit_hash_before": "91826d9f738e8cf3a4bb1704b1225cd2a76a8524",
        "commit_hash_current": "3d5bdb3fddaa9d69af93b4d92889ec09cf68d814",
        "refactoring_type": "pure",
        "justification": "The commit adds a check for an earlier initialisation of the ActionBar (initActionBar()) before getting or setting its properties. This refactoring doesn't change any behavior or functionality but makes it safer to use the ActionBar when called within methods like getSupportActionBar() and setProgressBarIndeterminateVisibility(). Additionally, the commit introduces a new method called initActionBar(), which does not affect existing code.",
        "commit_message": "Bring plugins up-to-speed with the library and remove test cases which are no longer needed."
    },
    {
        "repository": "https://github.com/JakeWharton/ActionBarSherlock",
        "commit_hash_before": "9dc680a99764d0817ac0201adec0470eea7e6f65",
        "commit_hash_current": "5ed049ab910f3eac1a2c26a22edda3bf1e2eb038",
        "refactoring_type": "pure",
        "justification": "The commit removed the RoundedColourFragment.java file, indicating a possible refactor or reorganization of the codebase. However, no new functionality was added, bugs were not fixed, and no existing behavior appears to have been altered based on the provided code diff. This indicates that it is a pure refactoring.",
        "commit_message": "Implement custom LinearLayout-esque widget which supports dividers."
    },
    {
        "repository": "https://github.com/JakeWharton/ActionBarSherlock",
        "commit_hash_before": "5ed049ab910f3eac1a2c26a22edda3bf1e2eb038",
        "commit_hash_current": "bafd20f596d8028021fea539e6c4292724cd6f2d",
        "refactoring_type": "pure",
        "justification": "The Git diff shows the renaming of the DividedHorizontalLayout class to IcsLinearLayout, indicating a purely structural change without any functional changes. There are no indications of new functionality or bug fixes in this refactoring.",
        "commit_message": "Rename to keep name more like what its native counterpart actually is."
    },
    {
        "repository": "https://github.com/TooTallNate/Java-WebSocket",
        "commit_hash_before": "816e3841f97f0d10f63e3d603f8a3edb6a300ea4",
        "commit_hash_current": "53395cc5fd2719bad277d0c6a67f04d3687b51f1",
        "refactoring_type": "pure",
        "justification": "The commit mainly focuses on reorganizing the class structure, renaming variables, and extracting methods without affecting their functionality. No changes were made to behavior or outputs of methods, hence classified as 'pure' refactoring.",
        "commit_message": "-better approximation towards the standard\n-fixed draft10 framing of big messages\n-organized imports\n-minor changes"
    },
    {
        "repository": "https://github.com/TooTallNate/Java-WebSocket",
        "commit_hash_before": "dde2740e87cedff6c39ba05c12c704d3cbd4f820",
        "commit_hash_current": "26d7be7bc02b4c8cacba0be17fabe9d38e0912c3",
        "refactoring_type": "pure",
        "justification": "The commit appears to only make changes to method signatures and comments, without adding any new functionality or altering existing behavior. The onError method now takes an additional parameter 'conn' which may indicate a change in handling errors based on the connection, but the code does not seem to reflect that change.",
        "commit_message": "-improved error handling\n-minor changes"
    },
    {
        "repository": "https://github.com/TooTallNate/Java-WebSocket",
        "commit_hash_before": "dde2740e87cedff6c39ba05c12c704d3cbd4f820",
        "commit_hash_current": "26d7be7bc02b4c8cacba0be17fabe9d38e0912c3",
        "refactoring_type": "pure",
        "justification": "The commit removes the onError(Throwable ex) method, which doesn't seem to change the behavior or functionality of the code. Instead, a new abstract method onError(WebSocket conn, Exception ex) is introduced with no functional changes observed. Additionally, there are no other changes in the committed code that could affect the program's behavior.",
        "commit_message": "-improved error handling\n-minor changes"
    },
    {
        "repository": "https://github.com/TooTallNate/Java-WebSocket",
        "commit_hash_before": "194418f30286b93bf6d5c3263ed5b066ef7e06ac",
        "commit_hash_current": "fa0eaa3932c0435b67205efc448a5d900e3313dc",
        "refactoring_type": "pure",
        "justification": "The changes in this commit are focused on formatting and renaming variables, methods, and classes without altering their behavior. There are no apparent modifications to the functionality or bug fixes. Examples of pure refactorings include: renaming 'b' to 'b1', 'b' to 'sizebytes', and 'boff + 0' to '/*0*/'. Additionally, the 'FrameBuilder' class is introduced without any change in behavior.",
        "commit_message": "changed buffer handling from byte[] to Bytebuffer\nremoved io operations from user thread to selector thread\ncontinued code reformatting & reordering"
    },
    {
        "repository": "https://github.com/vx/connectbot",
        "commit_hash_before": "45b061479284137c3f223312ba0f8918404e2388",
        "commit_hash_current": "93ce4942004272f083274698c47aa27bd8bbc72c",
        "refactoring_type": "pure",
        "justification": "The commit introduces new classes and interfaces for FileChooserCallback, PreferenceConstants, and PubkeyUtils, but these additions do not alter the existing functionality of the codebase. There are no behavior or output changes, only structural reorganization and addition of new methods for better organization. This indicates that the commit is a pure refactoring.",
        "commit_message": "Improve file transfer (new preferences, etc.)\nAdd ability to save stored SSH keys as files.\nUpdate German and Slovak translations."
    },
    {
        "repository": "https://github.com/vx/connectbot",
        "commit_hash_before": "5980d84abff7ad12161fbcf2480df50118953c20",
        "commit_hash_current": "4d8b14eebb9bcad15816868e9d130ebcd8b996a7",
        "refactoring_type": "pure",
        "justification": "The commit adds two new files, FileChooserCallback.java and PreferenceConstants.java, for a possible UI or configuration change, but these additions do not alter the existing functionality of the project. The other code changes are mostly renamings and minor reorganizations that do not seem to affect behavior.",
        "commit_message": "Import android-file-dialog library (BSD-licensed) with some fixes.\nMove file selection to a separate library (FileChooser).\nAdd menu option to select a File Dialog application."
    },
    {
        "repository": "https://github.com/vx/connectbot",
        "commit_hash_before": "2f859e2bf4fe7376324727ab3740f099d0d3c8eb",
        "commit_hash_current": "cb3851b84684074473693c2360848cffe3567e7a",
        "refactoring_type": "pure",
        "justification": "The commit introduces a change in the floating point math library used, replacing `Math` with `FloatMath`. However, this change does not seem to alter any behavior or functionality of the code. It is purely a refactoring choice to utilize a different math library.",
        "commit_message": "Drop support for API v7 and lower\nAndroid 2.2 FROYO is now the earliest supported version"
    },
    {
        "repository": "https://github.com/sleuthkit/autopsy",
        "commit_hash_before": "681c136f12087c67f3595921ea23032add1cbc2b",
        "commit_hash_current": "18d881c0866b46ec08a41d576ee9de4a84dc3082",
        "refactoring_type": "pure",
        "justification": "The commit introduces new images (arrow_left.gif and arrow_right.gif) but the existing codebase remains unchanged, with no functional changes or bug fixes. The new images are likely for UI improvements, which does not alter the core functionality of the software.",
        "commit_message": "Added isSupported flag to isPreferred interface for the DCV.\nThis allows to \"cache\" whether the viewer is supported for the node and forces the caller do determine that first (which fits current model).\nPotentially avoids redundant checks (like Solr queries) and does not rely on checking GUI state, which seems cleaner long term."
    },
    {
        "repository": "https://github.com/sleuthkit/autopsy",
        "commit_hash_before": "6dd23decbf20376ff4cfb02945cd20fbafd58691",
        "commit_hash_current": "a161f8a27da9ad4f478910dbf16e1e71a1f6a90e",
        "refactoring_type": "pure",
        "justification": "The commit appears to only refactor the code by extracting methods, renaming variables, and reorganizing the structure without making any changes to the functionality or behavior of the program. This is evident from the absence of any new features, bug fixes, changes to existing methods or parameters, and modifications that could affect the outcomes.",
        "commit_message": "Right-click option on all text fields."
    },
    {
        "repository": "https://github.com/sleuthkit/autopsy",
        "commit_hash_before": "601abce8a3bc1c717931a8fa727141a06ee786f6",
        "commit_hash_current": "45c41e363a7bee73336fb927bee37067fda37c56",
        "refactoring_type": "pure",
        "justification": "The changes in this commit mainly involve the addition of a default instance for ExampleImageIngestService and the modification of the processing method to accept an IngestImageWorkerController argument. However, these modifications do not seem to alter the behavior or functionality of the service. Instead, they appear to be refactoring aimed at enabling simultaneous processing of multiple images by creating multiple instances of the service.",
        "commit_message": "1. implemented multiple image workers and services (1 per image), concurrently\n2. added image worker controller API for service to report progress and cancel itself\n3. handled case change while ingesting\n4. do not try to enqueue work if no images/services selected"
    },
    {
        "repository": "https://github.com/sleuthkit/autopsy",
        "commit_hash_before": "a6259af403145d3ede8171dfee6cd202a2873294",
        "commit_hash_current": "0c71ca2dd47d155621cd45bfc35a87d295a914b2",
        "refactoring_type": "pure",
        "justification": "In the provided code diff, there are changes in variable names and logging messages. However, these modifications do not seem to alter the functionality of the code. Instead, they are meant to improve readability and maintainability. The logging message changes provide more specific information about the image and service being processed, making it easier for developers to understand the context. The variable name change from 'img' to 'image id' in IngestImageThread does not affect the functionality either. Therefore, this commit can be classified as a 'pure' refactoring.",
        "commit_message": "fix: when fs worker completes, notify only fs services.\nimprove logging and progress bars wording"
    },
    {
        "repository": "https://github.com/sleuthkit/autopsy",
        "commit_hash_before": "6810c188f3ce161648260e2f7eec2ec70da59165",
        "commit_hash_current": "b13997e7524e2820919d3079748976d4400ef868",
        "refactoring_type": "pure",
        "justification": "In this commit, there are no functional changes or bug fixes. The code has been restructured to handle thread interruptions and stop services more gracefully when a task is cancelled or interrupted. Specifically, the IngestImageThread class now includes a private method 'handleInterruption()' that stops the service and fires a property change event. Additionally, the IngestManager class has a new static method 'firePropertyChange(String property, Object oldV, Object newV)' for firing property change events. However, these changes do not modify the behavior or functionality of the code; they simply improve its structure and maintainability.",
        "commit_message": "added property change support to IngestManager to notify of service events"
    },
    {
        "repository": "https://github.com/twitter/twitter-text-java",
        "commit_hash_before": "241013e46597fb285a334c966dfa7af9991b5225",
        "commit_hash_current": "306a70b5ed565a8151819c26fe1f12e8bc0cab0b",
        "refactoring_type": "pure",
        "justification": "The commit introduces new constants for pattern matching in the Regex class, but there are no functional changes or behavior alterations observed. The existing patterns have been replaced with the newly defined ones, which can be considered a pure refactoring to improve readability and maintainability.",
        "commit_message": "refactoring Extractor.Entity and Autolink."
    },
    {
        "repository": "https://github.com/twitter/twitter-text-java",
        "commit_hash_before": "a6878bd06d2a3582a30a3e95e06e01fe525dd14e",
        "commit_hash_current": "e78d8213d7a700de747ff571e5d1aa92398a6391",
        "refactoring_type": "pure",
        "justification": "The commit mainly consists of refactorings without any functional changes. These include the removal of EntityType and MatchResult classes from Extractor, renaming variables (such as extracted and tco_matcher), extracting methods (such as 'getMatchResult'), restructuring code by moving method definitions to separate files, and adding a new utility method for creating an Entity object in ConformanceTest. These changes do not affect the behavior or functionality of the code.",
        "commit_message": "Refactor Extractor.Entity. Implement simple escapeHTML() in Autolink."
    },
    {
        "repository": "https://github.com/twitter/twitter-text-java",
        "commit_hash_before": "e78d8213d7a700de747ff571e5d1aa92398a6391",
        "commit_hash_current": "21dcf9c7e2ccedc25b5c2f51c53e39e3c5225ce8",
        "refactoring_type": "pure",
        "justification": "In this commit, the changes to the code are purely structural without any functional modifications. The change in Regex.java's URL_VALID_PRECEEDING_CHARS pattern simply replaces a '*' with a more descriptive regex that matches the same characters as before, but it does not affect the functionality of the code. Similarly, in Extractor.java, there is an update to the INVALID_URL_WITHOUT_PROTOCOL_BEGIN pattern to match a slightly different set of characters at the end of a potential URL, again without changing the behavior or functionality of the code.",
        "commit_message": "Allow '_' before URL."
    },
    {
        "repository": "https://github.com/twitter/twitter-text-java",
        "commit_hash_before": "306a70b5ed565a8151819c26fe1f12e8bc0cab0b",
        "commit_hash_current": "d40dd3e5571ce7792ae9da0c5dbc2282b20a949d",
        "refactoring_type": "pure",
        "justification": "The commit only renames the `EntityType` enum values to be more consistent with the actual entity types. It does not change any functionality or behavior of the codebase.",
        "commit_message": "Implement extractMentionsOrListsWithIndices()."
    },
    {
        "repository": "https://github.com/maxpower47/PinDroid",
        "commit_hash_before": "b4a42ac0d29014a08d8df5aba0f40f862ea88b9c",
        "commit_hash_current": "815621f6322ea36593d06041e2c4d16cdabc6aa8",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new class WebViewFragment, which appears to be a pure refactoring as it does not seem to change the behavior or functionality of the existing code. It organizes the web view functionality into a separate class while keeping the same structure and output. There are no signs of changes to existing methods, variables, or class signatures that would indicate a floss refactoring.",
        "commit_message": "Fixed issue with config changes on feed fragment."
    },
    {
        "repository": "https://github.com/maxpower47/PinDroid",
        "commit_hash_before": "815621f6322ea36593d06041e2c4d16cdabc6aa8",
        "commit_hash_current": "8cf252a4e96725becebd11b17151c3b5dfe00095",
        "refactoring_type": "pure",
        "justification": "In the provided code diff, we can observe several changes related to the creation of a new instance of Bookmark (currentBookmark) and assigning it to the class variable. However, these changes do not affect the behavior or functionality of the code as they only initialize an empty Bookmark object. The rest of the changes seem to be purely organizational such as adding the constructor for BrowseBookmarkFeedFragment to accept parameters username and tagname, and modifying the setQuery method to directly pass the parameters to the constructor. Additionally, there are no bug fixes or modifications that could potentially change the behavior or functionality of the code.",
        "commit_message": "Fixed issue with configuration changes."
    },
    {
        "repository": "https://github.com/maxpower47/PinDroid",
        "commit_hash_before": "850256071cebaa197d67990ab3f1840d24f960f4",
        "commit_hash_current": "6de96bf8f9ee2095ed380ce01508b174b9715bd8",
        "refactoring_type": "pure",
        "justification": "The commit introduces a few changes but none of them affect the behavior or functionality of the code. The modifications include: adding an interface, implementing it in WebViewFragment, and updating some menu options. However, these alterations are mainly structural changes aimed at improving code organization and readability.",
        "commit_message": "Cleaned up menus and interface."
    },
    {
        "repository": "https://github.com/maxpower47/PinDroid",
        "commit_hash_before": "862e62e81a57fa9f0c8e022dbf0ff59c711bbfb5",
        "commit_hash_current": "9eace03cdcd36cff2958a367b72c3d0d9b3fb851",
        "refactoring_type": "pure",
        "justification": "The commit primarily involves renaming of variables, methods, and classes without changing their behavior or functionality. There are no changes to the code that could affect its output or performance. The commit appears to be a refactoring effort aimed at improving readability and organization.",
        "commit_message": "Clean up."
    },
    {
        "repository": "https://github.com/maxpower47/PinDroid",
        "commit_hash_before": "9eace03cdcd36cff2958a367b72c3d0d9b3fb851",
        "commit_hash_current": "89561b1cc76a5eedbc1bf9cafa29e590bc714960",
        "refactoring_type": "pure",
        "justification": "The code changes in the commit appear to be purely structural, with no visible functional or behavioral alterations. The additions and removals of methods seem to be aimed at improving the organization and readability of the codebase, without impacting its functionality. For example, the 'isMyPost' method has been removed, replaced by separate checks for 'postOwnerId' and 'postId'. These changes are consistent with a 'pure' refactoring.",
        "commit_message": "Tag tablet layout."
    },
    {
        "repository": "https://github.com/google/error-prone",
        "commit_hash_before": "03321ca14e7e54ecd1c7b96d623b28c9ee655c4d",
        "commit_hash_current": "96eb0a3c7627c9a0cd2adcc905541a424e50b213",
        "refactoring_type": "pure",
        "justification": "The commit appears to primarily consist of renaming imports, changing some method names, and updating the use of 'RefactoringVisitorState' to 'VisitorState'. These changes do not seem to alter the functionality or behavior of the code, making it a pure refactoring.",
        "commit_message": "Re-introduce a subclass of TreeScanner for matchers to implement. This lets us merge the RefactoringVisitorState and SearchingVisitorState back into one VisitorState, though it now has a dependency on both kinds of listener."
    },
    {
        "repository": "https://github.com/google/error-prone",
        "commit_hash_before": "96eb0a3c7627c9a0cd2adcc905541a424e50b213",
        "commit_hash_current": "846a55129dab110e2b850672ca78cdb51f2c3408",
        "refactoring_type": "pure",
        "justification": "The commit refactors the Refactor interface to remove redundancy and improve the code structure. The changes are purely structural, with no functional or behavioral modifications observed. Therefore, it can be classified as a 'pure' refactoring.",
        "commit_message": "Only need one kind of scanner, regardless of whether refactoring is enabled."
    },
    {
        "repository": "https://github.com/google/error-prone",
        "commit_hash_before": "1402898dc083213048212d54bee0829d619ab562",
        "commit_hash_current": "4df2839166fff323c6a499eae613d501e69b935b",
        "refactoring_type": "pure",
        "justification": "In the given code diff, there are no functional changes or bug fixes. The refactoring consists of renaming two classes 'ArrayEqualsNegativeCases' to 'ArrayToStringNegativeCases' and 'ArrayEqualsPositiveCases' to 'ArrayToStringPositiveCases'. Additionally, there is no change in the logic or behavior of the code. Thus, this commit represents pure refactoring.",
        "commit_message": "Fixed incorrectly-named test case classes."
    },
    {
        "repository": "https://github.com/google/error-prone",
        "commit_hash_before": "1402898dc083213048212d54bee0829d619ab562",
        "commit_hash_current": "4df2839166fff323c6a499eae613d501e69b935b",
        "refactoring_type": "pure",
        "justification": "The code diff shows renaming of two Java files and classes within the files without any changes to their functionality or behavior. In the first file, 'ArrayEqualsNegativeCases' is renamed to 'ArrayToStringNegativeCases'. Similarly, in the second file, 'ArrayEqualsPositiveCases' is renamed to 'ArrayToStringPositiveCases'. These are examples of pure refactoring as they do not affect the behavior or functionality of the code.",
        "commit_message": "Fixed incorrectly-named test case classes."
    },
    {
        "repository": "https://github.com/google/error-prone",
        "commit_hash_before": "e48da092eed16c2fbe35bf87ecd45c9dbd0f756f",
        "commit_hash_current": "ca00dac87d5cdc41a5cfbeb1c4f7dbc572f71114",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new method in the DeadExceptionTest class, but it only changes the test strategy from assertCompileFailsWithMessages to assertCompileSucceedsWithMessages. This refactoring does not alter the functionality or behavior of the test case, as it still tests for the same warning. Therefore, it can be classified as a 'pure' refactoring.",
        "commit_message": "For checks annotated with @BugPattern(severity = WARNING), report a warning rather than an error.\n\nFixes issue #28"
    },
    {
        "repository": "https://github.com/nicolasgramlich/AndEngineExamples",
        "commit_hash_before": "fc189396348c3af89d60a7b5ad79d97528e9fbac",
        "commit_hash_current": "8c047126df6f5fe44d81328657a133a2e825ca51",
        "refactoring_type": "pure",
        "justification": "The code changes in the diff are primarily focused on moving some import statements, renaming one class and refactoring some method names within that class. These changes do not appear to have any impact on functionality or behavior.",
        "commit_message": "Updated Examples to AndEngine changes."
    },
    {
        "repository": "https://github.com/chewiebug/GCViewer",
        "commit_hash_before": "5b32f295405d042d244c3a9f6f98393129c7a08d",
        "commit_hash_current": "a0821f382d6c705f21fb369b7b422a19c0dad1ce",
        "refactoring_type": "pure",
        "justification": "The commit appears to only include structural changes without any modification to the functionality or behavior of the code. Changes such as renaming variables, methods, and classes, extracting methods, reorganizing code structure, and simplifying conditional logic are all indicative of 'pure' refactoring.",
        "commit_message": "fix problem \"failed to recognize file format\" on valid gc-log (specific chars of GC Type not in first 3 KB)"
    },
    {
        "repository": "https://github.com/chewiebug/GCViewer",
        "commit_hash_before": "7eb4a88db0a3ce6f5da20cebd0dc8200afff1a6d",
        "commit_hash_current": "c99b2c5ae9dac1546e3ca392421260d580255b74",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new interface ProgressCallback in MonitoredBufferedInputStream and modifies the DataReaderFacade to accept this new interface instead of an anonymous class. However, no changes to behavior or functionality are apparent based on the code diff. The new interface is simply a replacement for the old one without any additional features or bug fixes.",
        "commit_message": "Close GCDocument if all chartPanelViews removed on error"
    },
    {
        "repository": "https://github.com/chewiebug/GCViewer",
        "commit_hash_before": "ac41a8566545f5e5bee80ad30bd110804b52bc02",
        "commit_hash_current": "f0463b6767b6d0d7fa3cfb3220650b240e52df87",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new class `GCResource` but there are no changes to existing functionality or behavior. It only restructures the code by creating a separate class for handling GC resources, which can be considered as a pure refactoring.",
        "commit_message": "Added GCModelLoaderView to show progress and errors"
    },
    {
        "repository": "https://github.com/chewiebug/GCViewer",
        "commit_hash_before": "f0463b6767b6d0d7fa3cfb3220650b240e52df87",
        "commit_hash_current": "771f2cb8c317cdbc2aec659424e1628da136c925",
        "refactoring_type": "pure",
        "justification": "The changes in the commit involve renaming of classes (ModelPanel to ModelMetricsPanel) and related adjustments, as well as renaming a few methods and variables. There are no new functionalities or bug fixes added, hence classifying it as 'pure' refactoring.",
        "commit_message": "fix loading and usage of preferences (avoid showing white chart)"
    },
    {
        "repository": "https://github.com/chewiebug/GCViewer",
        "commit_hash_before": "771f2cb8c317cdbc2aec659424e1628da136c925",
        "commit_hash_current": "9ab649d60746cdb77c1ec5dd7d6f34ba34e75044",
        "refactoring_type": "pure",
        "justification": "The provided code diff shows only structural changes and no evidence of functionality or behavior modification. Changes include: creation of new classes (GCViewerController), moving methods from GCViewerGui to the newly created controller class, and removing DataReaderFacade from GCViewerGui. These actions are indicative of a 'pure' refactoring as they aim to improve code organization without affecting existing functionality.",
        "commit_message": "introduction of GCViewerController"
    },
    {
        "repository": "https://github.com/greenlaw110/play-morphia",
        "commit_hash_before": "fc66ae9b32e64e47298bdd3045d5041f9869a412",
        "commit_hash_current": "86bcee426cb784a0ebe4e04c6925802414d37d9d",
        "refactoring_type": "pure",
        "justification": "The commit introduces new classes and methods related to database management (UniqueCheck, Unique, MorphiaFixtures). However, upon examination of the code changes in the diff, it appears that these additions are solely for structuring and organizing the existing functionality. There are no visible changes to behavior or functionality; instead, the codebase seems to be made cleaner and more structured without affecting how it works. Therefore, I would classify this commit as 'pure' refactoring.",
        "commit_message": "v1.2.7, support play-1.2.4+ and Unique check"
    },
    {
        "repository": "https://github.com/resthub/springmvc-router",
        "commit_hash_before": "d290ecad7da71ae268a68d0fb616a9337558740f",
        "commit_hash_current": "476f907895167d5e7d37dcd68116fca9e2484c1c",
        "refactoring_type": "pure",
        "justification": "The commit primarily consists of changes to variable names, method names, and class names without any apparent functional modifications. These are typical signs of 'pure' refactoring. Additionally, there are no bug fixes or added features in the code diff, which further supports the classification as 'pure' refactoring.",
        "commit_message": "use Spring resource loader, thanks @bradhouse"
    },
    {
        "repository": "https://github.com/webbit/webbit",
        "commit_hash_before": "69f0df6e561b3eb7e3499d6fd3d69f417cee975c",
        "commit_hash_current": "daa18ee106b84b359989033db18e10b2b7de0b51",
        "refactoring_type": "pure",
        "justification": "The commit primarily consists of renamings, reorganizations and structural changes without affecting the functionality or behavior of the code. For example: - The names of classes/methods/variables have been changed in multiple files (EchoWsServer, StubConnectionTest, samples.eventsource.Main). - WebSocketHandler's import has been changed to org.webbitserver.WebSocket instead of org.webbitserver.netty.contrib.WebSocket. These changes are purely organizational and do not impact the functionality.",
        "commit_message": "Get rid of more duplication. Move some WebSocket methods to interface"
    },
    {
        "repository": "https://github.com/Netflix/servo",
        "commit_hash_before": "91f7f487730a740ab953f7ec74cca63d6ac6ca2e",
        "commit_hash_current": "b0a3d023811e0610fee5fbcf2f6071c2db87a20b",
        "refactoring_type": "pure",
        "justification": "The commit primarily renames several packages and classes related to tag management from 'com.netflix.servo' to 'com.netflix.servo.tag'. The code changes appear to be structural and do not seem to affect the functionality or behavior of the application.",
        "commit_message": "Refactor to move tag related files into their own package."
    },
    {
        "repository": "https://github.com/antlr/antlr4",
        "commit_hash_before": "9e61e82f887556d81d5ccd5f11a81e23dfc458bb",
        "commit_hash_current": "c36f71cd4150453a077ebe33b550f54e8ae95dfe",
        "refactoring_type": "pure",
        "justification": "The commit only includes changes to import statements and the addition of a new method in Utils class. There are no functional changes or behavior alterations visible in the code diff, indicating this is a pure refactoring.",
        "commit_message": "PredictionContext optimization using acyclic directed graphs"
    },
    {
        "repository": "https://github.com/antlr/antlr4",
        "commit_hash_before": "ff320626d7b673795856dee5e70a039200cae15a",
        "commit_hash_current": "0ce341b8238c7303eb22144ff998459f7add5534",
        "refactoring_type": "pure",
        "justification": "The commit primarily consists of changes to grammar rules and error messages, but there is no indication of any functional change or addition of new features. The code reorganization and updates to the grammar rules are likely for better maintainability and readability, which aligns with pure refactoring.",
        "commit_message": "Make PredictionContext an abstract class, provide multiple implementation to save memory and improve performance for the most common case of a context with a single parent"
    },
    {
        "repository": "https://github.com/antlr/antlr4",
        "commit_hash_before": "c26d7bc5ab63863afda0c1a422dc10d1b7a2798b",
        "commit_hash_current": "78f44a961be3e786fa4049731e8adf5baa87976d",
        "refactoring_type": "pure",
        "justification": "The commit primarily involves refactoring the codebase, such as renaming variables and classes without changing their behavior, extracting methods, and reorganizing the code structure. However, there are no changes that could affect the functionality or behavior of the code. This indicates a pure refactoring.",
        "commit_message": "Use accessor methods instead of direct field access for ATNConfig (opens door for future memory optimization)"
    },
    {
        "repository": "https://github.com/antlr/antlr4",
        "commit_hash_before": "78f44a961be3e786fa4049731e8adf5baa87976d",
        "commit_hash_current": "d98d464d4ff447ff8dcd5e40c4b8597eb4f8a074",
        "refactoring_type": "pure",
        "justification": "The commit contains only structural changes with no functional changes. The class `TLexer` is renamed to `ParserLexer`, and the grammar rule names are adjusted accordingly, but the overall behavior of the code remains the same.",
        "commit_message": "Use ATNConfig.create and ATNConfig.transform methods to isolate external code from internal optimizations"
    },
    {
        "repository": "https://github.com/antlr/antlr4",
        "commit_hash_before": "7de135f01bc88c333c8646e6cf0c9e538166cdca",
        "commit_hash_current": "f1a553fd8c063a4a8b41cf8c4d50a8cc54ef294e",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new configuration option (TWO_STAGE_PARSING) to enable or disable the two-stage parsing, but does not change the behavior of the existing code. It also modifies the error handling for cases where the two-stage parsing is enabled and a RuntimeException with a RecognitionException as cause occurs during the first parse attempt. The new error handling simply retries the parse with full context, effectively improving robustness without changing the basic functionality.",
        "commit_message": "Optimize implicit contexts"
    },
    {
        "repository": "https://github.com/android/platform_packages_apps_email",
        "commit_hash_before": "7fdde9bb4a24e931618a7a64227e2194c89034da",
        "commit_hash_current": "b34608228f0b55e401415b67b8150ca9e00cee7d",
        "refactoring_type": "pure",
        "justification": "The commit adds a new file PreferenceMigrator.java, which is responsible for migrating Email settings to UnifiedEmail. However, the existing codebase remains unchanged, and no behavior or functionality appears to have been altered. This commit can be classified as pure refactoring since it restructures the code without affecting its functionality.",
        "commit_message": "Move notifications to UnifiedEmail\n\nThis involves redoing the persistence model, to split general,\naccount, and folder settings into separate SharedPreference stores.\n\nIt also requires some preferences to be moved into UnifiedEmail.\n\nDepends on Ibe2e3f93ec164370535ffc5f5b2409544cc8d36d (UnifiedEmail)\n\nChange-Id: Ie6ec389b5b5d2e7ab1b299d0877811ae716526e2"
    },
    {
        "repository": "https://github.com/android/platform_packages_apps_email",
        "commit_hash_before": "f7055e261821af30874f6597757468eba6830539",
        "commit_hash_current": "8e2c4056caffb9695fa7fdf3a90c1c4f056adb97",
        "refactoring_type": "pure",
        "justification": "The commit removes unused variables, methods, and classes, renames some constants, and modifies the import statements. These changes do not appear to affect behavior or functionality, indicating a 'pure' refactoring.",
        "commit_message": "Clean up dead code. Should be a no-op for functionality.\n\nAlso includes a fix for saving a draft that's already\nbeen saved (used to create a new one).\n\nThe following were unused:\n- accountIdAddToField\n- mailboxIdAddToField\n- uisendmail\n- uisavedraft\n- uiupdatedraft\n- uisenddraft\n\nDeleting those also allows us to remove the translation\nfrom the Bundle used by calls to the ContentValues used by\nupdate (since the update paths are now gone).\n\nChange-Id: I87f2875e3272177a128a8ff65541e51b1f2d05fc"
    },
    {
        "repository": "https://github.com/android/platform_packages_apps_email",
        "commit_hash_before": "f16a7612c0bc4b4f03c9f8ba982c7723a5f33e17",
        "commit_hash_current": "5a3aebbd2dd8cdd4d7c1a76ce3085cd6a314c0d0",
        "refactoring_type": "pure",
        "justification": "The commit does not seem to change the behavior or functionality of the code. The changes are mainly related to the addition of a new constant array 'DEFAULT_FOLDERS' and minor updates in several classes (EmailServiceStub, MatrixCursorWithCachedColumns). However, these changes do not appear to have any impact on the overall operation or output of the system.",
        "commit_message": "Fix problem with sending attachments in Exchange\n\nThe problem was that when the attachment was attempted to be opened\nfrom the Exchange process, it didn't have access to the cached file.\nInstead, use a content provider uri to reference the cached file.\n\nBug: 8400456\n\nChange-Id: I80abd66642e938cf09f73bf0e9bd049aa8d7ba1d"
    },
    {
        "repository": "https://github.com/android/platform_packages_apps_email",
        "commit_hash_before": "6b88a2471f91e9d4b7fbfff6b8ade7820f64d46d",
        "commit_hash_current": "17d5bbf768c27ac7782b155e2ab25bcd480f5dcf",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new constant called `EmailServiceStub.SYNC_EXTRA_DELTA_MESSAGE_COUNT`, but it doesn't seem to change the behavior or functionality of the code. Instead, it appears to be an addition for managing the number of additional messages to load when a user selects 'Load more messages...'. However, the rest of the changes are mainly related to code organization and restructuring without altering the existing functionalities.",
        "commit_message": "Improve mailbox sync and load more.\n\n- Update syncTime for IMAP and POP whenever we sync.\n- Change load more to simply include the delta in the RPC\n  rather than using the visibleLimit column.\n- Add a query to get the message count for a Mailbox.\n- Refactor code for updating totalCount and determining\n  the new message count when syncing.\n- Remove dead code from Mailbox.\n- Remove uses of visibleLimit from code.\n\nNote that visibleLimit and messageCount in Mailbox table are\nno longer useful and will be removed in a later change.\n\nBug: 8579767\nBug: 8523146\nChange-Id: Ieb67e3b6f1c82c3b21b972c5a1e557cd75dc21db"
    },
    {
        "repository": "https://github.com/android/platform_packages_apps_email",
        "commit_hash_before": "4b0e25898e1663f67ecdc38d1e8d9a24bb2d4e89",
        "commit_hash_current": "64cc777f8b3f01fad0b14ad4277d85b7dcfdcd73",
        "refactoring_type": "pure",
        "justification": "The code diff shows changes that are purely structural and do not affect the behavior or functionality of the code. The addition of `import android.text.format.DateUtils` and the related `QUERY_UIREFRESH` constant, as well as updating URI patterns in the switch case for UI_FOLDER_REFRESH, represent a reorganization and simplification of the existing code. However, none of these changes affect how the code behaves or what it produces, making this a 'pure' refactoring.",
        "commit_message": "Autosync stale mailboxes when switching to them.\n\n\"Stale\" is currently defined as \"it's been 5 minutes since\nmy last sync\".\n\nAlso includes a small refactor so that uiloadmore doesn't\nload the mailbox from DB twice.\n\nBug: 7100372\nChange-Id: Ib31aa211fe2ab790044beb7bc7d2fdcccf595171"
    },
    {
        "repository": "https://github.com/fabric8io/fabric8",
        "commit_hash_before": "0bdbaf43543e2788980ebad0928155fbc62b9ac2",
        "commit_hash_current": "6df496256bb709c9eff9eac9b58083f9313adff9",
        "refactoring_type": "pure",
        "justification": "The commit changes only the Spring configuration file, modifying the bean class used for OSGi discovery from org.springframework.osgi.serviceutil.ServiceUtils to org.apache.felix.ipojo.reflect.ReflectionUtil. This refactoring does not seem to change any functionality or behavior.",
        "commit_message": "Refactored FabricService and ContainerProvider to provide a single method for creating agents using CreateContainerArguments. Renamed CreateContainerArguments to CreateContainerOptions."
    },
    {
        "repository": "https://github.com/fabric8io/fabric8",
        "commit_hash_before": "6df496256bb709c9eff9eac9b58083f9313adff9",
        "commit_hash_current": "d74097bbf6093e9ba528ca0eee3afb1cb8a2ebf9",
        "refactoring_type": "pure",
        "justification": "The commit consists of a renaming of a file and a property, along with some adjustments to the repository paths in configuration files. These changes do not appear to alter the functionality or behavior of the code, making this a 'pure' refactoring.",
        "commit_message": "Change the api to be able to propagate back container creation errors"
    },
    {
        "repository": "https://github.com/fabric8io/fabric8",
        "commit_hash_before": "d52022b601ff1b6e94cb4eb443c61ca47bfe4c9e",
        "commit_hash_current": "b587dd4f2b5f27f6960c0f0869f1a46ae48a8bd8",
        "refactoring_type": "pure",
        "justification": "The changes seem to focus on simplifying and organizing the code structure, removing duplicated logic for creating containers in different scenarios. However, there are no functional or behavioral changes observed, thus classifying it as 'pure' refactoring.",
        "commit_message": "added attempted workaround to NPE IDE stuff"
    },
    {
        "repository": "https://github.com/fabric8io/fabric8",
        "commit_hash_before": "b587dd4f2b5f27f6960c0f0869f1a46ae48a8bd8",
        "commit_hash_current": "9916b51ced60fb05ee23d26cc11ebb3045e7c8de",
        "refactoring_type": "pure",
        "justification": "The commit includes changes in the code structure, such as renaming variables and methods, extracting methods, and simplifying conditional logic. However, there is no evidence of changes to behavior or functionality. This indicates that it's a pure refactoring.",
        "commit_message": "Change the api to be able to propagate back container creation errors"
    },
    {
        "repository": "https://github.com/fabric8io/fabric8",
        "commit_hash_before": "29afc30378a505c179ad1d6df22e975debfe524c",
        "commit_hash_current": "4719c69df4e667e7c7f2ba3dbaea06e31923f424",
        "refactoring_type": "pure",
        "justification": "The commit involves renaming and moving around some classes, properties and references without any changes to the behavior or functionality. It appears to be a refactoring effort to improve code organization rather than adding new features or fixing bugs.",
        "commit_message": "Added a facade for zkclient, which checks if zk is configured, connected and delegates calls with timeout to real client."
    },
    {
        "repository": "https://github.com/netty/netty",
        "commit_hash_before": "a29d887c34537a49043d468f2eca64646c8dfecc",
        "commit_hash_current": "22a37e548e63b9f1996093971ffcded631942cbe",
        "refactoring_type": "pure",
        "justification": "The commit involves the creation of new files with the implementation of SCTP-specific classes and tests. However, there are no changes to existing functionality or behavior in the provided code diff. Instead, it appears that these additions are aimed at supporting SCTP within the Netty project.",
        "commit_message": "1)implemented defragmenting sctp frame decoder 2)implemented sctp netty testsuite"
    },
    {
        "repository": "https://github.com/netty/netty",
        "commit_hash_before": "f88cd3120d8cac8dca8d6a122a4fbed374b4d065",
        "commit_hash_current": "368155fbd2d974a814bb8fce934e0beb9c95c6df",
        "refactoring_type": "pure",
        "justification": "The commit only includes changes to method names and import statements, which are typical of a pure refactoring. There are no behavior or functionality changes observed in the code diff.",
        "commit_message": "Another round of the new API design\n\n- Channel now creates a ChannelPipeline by itself\n\n  I find no reason to allow a user to use one's own pipeline\n  implementation since I saw nobody does except for the cases where a\n  user wants to add a user attribute to a channel, which is now covered\n  by AttributeMap.\n\n- Removed ChannelEvent and its subtypes because they are replaced by\n  direct method invocation.\n- Replaced ChannelSink with Channel.unsafe()\n- Various getter renaming (e.g. Channel.getId() -> Channel.id())\n- Added ChannelHandlerInvoker interface\n- Implemented AbstractChannel and AbstractServerChannel\n- Some other changes I don't remember"
    },
    {
        "repository": "https://github.com/netty/netty",
        "commit_hash_before": "368156f5d0f3fd59146fe37f874cf77abe307ee7",
        "commit_hash_current": "607d784e5eb6dd73abccb3a4f42e8cc7cd7dd4bc",
        "refactoring_type": "pure",
        "justification": "The provided code diff shows the deletion of two files, ShareableWorkerPool.java and WorkerPool.java. However, there are no changes to behavior or functionality in the remaining codebase or the commit message. The removal of these files indicates a possible restructuring of the project, which aligns with pure refactoring.",
        "commit_message": "Retrofit/overhaul the NIO transport with the new API\n\n- Remove large portion of code thanks to the new API\n- SocketChannel implementations are instantiated without factories\n- Retrofit the existing code with the new API"
    },
    {
        "repository": "https://github.com/netty/netty",
        "commit_hash_before": "607d784e5eb6dd73abccb3a4f42e8cc7cd7dd4bc",
        "commit_hash_current": "129a2af86adda8631eee2a5fe3c2b442a223a724",
        "refactoring_type": "pure",
        "justification": "The commit primarily involves renaming classes and methods, as well as simplifying conditional logic without changing the outcomes. These changes are structural in nature and do not seem to affect behavior or functionality of the code.",
        "commit_message": "Initial working version of the echo server example\n\n- Optimized AbstractChannelBuffer.discardReadBytes()\n- Split ChannelHandlerInvoker into ChannelInboundInvoker and\n  ChannelOutboundInvoker\n  - Channel implements ChannelOutboundInvoker\n  - ChannelOutboundInvoker.nextOut() is now out()\n  - ChannelOutboundHandlerContext.out() is now prevOut()\n  - Added the outbound operations without future\n    parameter to ChannelOutboundInvoker for user convenience\n- All async operations which requires a ChannelFuture as a parameter\n  now returns ChannelFuture for user convenience\n- Added ChannelFutureFactory.newVoidFuture() to allow a user specify\n  a dummy future that is of no use\n  - I'm unsure if it is actually a good idea to introduce it. It might\n    go away later.\n- Made the contract of AbstractChannel.doXXX() much simpler and moved\n  all common code up to AbstractChannel.DefaultUnsafe\n- Added Channel.isOpen()\n- Fixed a bug where MultithreadEventLoop always shut down its child\n  event loops on construction\n- Maybe more changes I don't remember :-)"
    },
    {
        "repository": "https://github.com/netty/netty",
        "commit_hash_before": "129a2af86adda8631eee2a5fe3c2b442a223a724",
        "commit_hash_current": "b4764f61646ad56383eb884a6ca6e562b458aa65",
        "refactoring_type": "pure",
        "justification": "The commit appears to consist of changes that strictly focus on improving the code structure and readability. Examples include the extraction of methods (such as AbstractChannel.java:@-20,+7), renaming of variables (NioServerSocketChannel.java:@-116,-12,+14), and simplifying conditional logic without changing outcomes (AbstractChannel.java:@-658,7---@-669,7). There are no functional changes or bug fixes identified in the provided code diff.",
        "commit_message": "Fix infinity loop and timing issues\n\n- Made sure unnecessary interestOps are not OR'd\n- Fixed a bug where DefaultChannelFuture.rethrowIfFailed() returns\n  silently if the future is not done yet - there's no ways to tell\n  the differences between failure and incompleteness."
    },
    {
        "repository": "https://github.com/t0xa/gelfj",
        "commit_hash_before": "05121e5f9a921a16b57cffba79e240f72f8f77dd",
        "commit_hash_current": "12b0e906d74e71e914a53f94d127a54f65cc5886",
        "refactoring_type": "pure",
        "justification": "The commit contains changes in the imports and some minor reorganization of code. However, there are no functional changes or additions to behavior, so it can be classified as 'pure' refactoring.",
        "commit_message": "Non-blocking IO (NIO) instead of blocking io. Pull request merged."
    },
    {
        "repository": "https://github.com/woorea/openstack-java-sdk",
        "commit_hash_before": "a822c361e0cc250f39340808be15672de4185dcd",
        "commit_hash_current": "a7ad468735884937616825d46c8e3ed4922af010",
        "refactoring_type": "pure",
        "justification": "The code changes in the commit appear to be purely structural, without any modifications to behavior or functionality. The class names and method signatures remain the same, and there are no apparent additions of new features or bug fixes. Instead, the code seems to have been reorganized for better readability and maintainability.",
        "commit_message": "Better caching of data in CLI, including invalidation support"
    },
    {
        "repository": "https://github.com/woorea/openstack-java-sdk",
        "commit_hash_before": "081d69d8560fbf682fcc8ccfe33e050df5126fb3",
        "commit_hash_current": "1cad0b0fe368bc3431c9b6ad081cc21e29cdd49a",
        "refactoring_type": "pure",
        "justification": "The commit adds a new class KeyStoneServiceEndpoint, but it does not appear to change any existing functionality or behavior. Instead, it seems to extend the capabilities of the existing ExtensionFormatter by handling a specific type of ServiceEndpoint (KeyStoneServiceEndpoint) in the formatEndpoints method. However, the core logic of formatting remains unchanged and the method still works with other types of ServiceEndpoints as well. This indicates that this is a pure refactoring.",
        "commit_message": "favor interfaces to classes"
    },
    {
        "repository": "https://github.com/cloudsmith/geppetto",
        "commit_hash_before": "dfa670d2bdc9bdaf83d45cdb75e77940b5856ea6",
        "commit_hash_current": "fbce365a540d14caa952db98a5a8d7dce3648815",
        "refactoring_type": "pure",
        "justification": "The code changes appear to be purely structural, without any indication of changes to behavior or functionality. Changes include renaming interfaces and classes, reorganizing imports, and modifying method signatures without altering their purpose.",
        "commit_message": "Reintroduces formatting and serialization tests that used to fail.\n\nnew formatter ftw!"
    },
    {
        "repository": "https://github.com/cloudsmith/geppetto",
        "commit_hash_before": "547fb540c44e8a3c468fb3946f106c779f466e18",
        "commit_hash_current": "fe1a8861e663bbff626dbd66c762cb920d60c397",
        "refactoring_type": "pure",
        "justification": "The commit adds a new wizard for creating a new 'Modulefile' (meta data for a puppet module). However, the existing codebase remains unchanged and only structural changes have been made to accommodate this new feature. The original functionality has not been altered.",
        "commit_message": "Merges dev. Fixes issues with references to guice/guava."
    },
    {
        "repository": "https://github.com/cloudsmith/geppetto",
        "commit_hash_before": "3bc2a198949328357f8355d97f885bfcd85f03f5",
        "commit_hash_current": "9a901a90e86bc9dde9ced06162bb55d5da9b7127",
        "refactoring_type": "pure",
        "justification": "The code changes in the commit involve renaming and organization of classes, variables, and methods without altering their functionality. This indicates that the changes are purely refactoring in nature with no observable change in behavior or functionality.",
        "commit_message": "Fixes issue with override of test framework method not present in older.\n\nThe method shouldTestSerializer must be overridden and return false when\nusing newer test framework and tests involve syntax/formatting where\nserialized/formatted result differs in tokens. Added an interface to\nmake the code capable of running with both old and new test framework."
    },
    {
        "repository": "https://github.com/ippontech/tatami",
        "commit_hash_before": "8d6a81d07ca57740050414d2dba22fb3db7ba131",
        "commit_hash_current": "5a7176480f440c3cef0a62c3d285f3a8b6befc15",
        "refactoring_type": "pure",
        "justification": "The commit introduces new files for configuration and logging, but there are no visible changes in the existing codebase that could affect behavior or functionality. The code additions seem to be preparing the project for testing purposes.",
        "commit_message": "adding unit test on UserService"
    },
    {
        "repository": "https://github.com/ippontech/tatami",
        "commit_hash_before": "3675b4d474d9c5519fffe9c27474dd78ea2c04da",
        "commit_hash_current": "c4ef1c528750c394858f7552b674709b51c6b8d0",
        "refactoring_type": "pure",
        "justification": "The commit does not show any changes to behavior or functionality. Instead, it only includes structural modifications such as renaming a method in the TimelineService class and adding a new method (getUserTimeline) with similar functionality to an existing one (getUserline). Additionally, there are minor changes in the views for handling RSS feeds, but these do not affect the application's behavior. Therefore, this commit can be classified as pure refactoring.",
        "commit_message": "User timeline RSS access (without login)\n\n* security conf : access without login\n* build a timeline without current user (no favorite, no group)\n* Rometools-based view for RSS generation"
    },
    {
        "repository": "https://github.com/ippontech/tatami",
        "commit_hash_before": "3675b4d474d9c5519fffe9c27474dd78ea2c04da",
        "commit_hash_current": "a0d966713c2463372656c85e8b506d79cabd4962",
        "refactoring_type": "pure",
        "justification": "The code changes involve renaming a class (SyndicViewer to SyndicView), refactoring the buildFeedMetadata method, and minor adjustments in imports. However, there are no functional or behavioral changes observed that would indicate floss refactoring.",
        "commit_message": "Flux RSS pour la timeline d'un utilisateur\n\n* refacto : nommage de l'objet View des flux RSS\n* ajout titre et description du flux RSS"
    },
    {
        "repository": "https://github.com/encog/encog-java-core",
        "commit_hash_before": "cc56bd41f61322ca3cfbe5737e67662133e0329f",
        "commit_hash_current": "815178819589d7422cccbcc8be296e9bc92867b5",
        "refactoring_type": "pure",
        "justification": "The commit introduces new test cases for the MajorityVoting and Bagging classes, but there are no changes to existing functionality or behavior. Instead, it seems to be focusing on expanding the test coverage of the codebase.",
        "commit_message": "Half way through bagging, but has a working test"
    },
    {
        "repository": "https://github.com/encog/encog-java-core",
        "commit_hash_before": "503075ab09126c5d89e3f0f889267814d6524e6b",
        "commit_hash_current": "6ca988e39a5d8f251bead078971e6eec3ff95637",
        "refactoring_type": "pure",
        "justification": "The changes made in the commit refactor the code without altering functionality. The LetterMapper class has been modified to use a different data source (LetterRecognition instead of Haberman) and the Haberman class now extends Tester instead of creating its own network. However, these changes do not affect the behavior or outputs of the code.",
        "commit_message": "Bagging Haberman works!!!!!!"
    },
    {
        "repository": "https://github.com/encog/encog-java-core",
        "commit_hash_before": "6ca988e39a5d8f251bead078971e6eec3ff95647",
        "commit_hash_current": "7a4a3eca86d29efef61c649d612d8daa59d63f58",
        "refactoring_type": "pure",
        "justification": "The code changes consist of adding a toString() method in three classes (MajorityVoting, MultiLayerPerceptronFactory, and ResilientPropagationFactory), as well as ScaledConjugateGradientFactory. The addition of toString() methods does not seem to change the behavior or functionality of these classes. Moreover, there are no other changes that could affect the behavior or functionality in the given diff.",
        "commit_message": "more testing parameters and refactored labelling"
    },
    {
        "repository": "https://github.com/encog/encog-java-core",
        "commit_hash_before": "7a4a3eca86d29efef61c649d612d8daa59d63f58",
        "commit_hash_current": "1b74205f82184ae9d55b5a9f9d4169fa9dcc4af4",
        "refactoring_type": "pure",
        "justification": "The commit introduces two new files, LetterRecognition and runs/ensembles/LetterRecognition.java, which are related to a new feature for letter recognition. However, the existing files do not seem to have any changes that would affect their behavior or functionality. The only changes in the existing files are renaming packages, moving imports, and adding comments - these are typical examples of 'pure' refactoring. Therefore, this commit can be classified as a 'pure' refactoring.",
        "commit_message": "added Averaging aggregator and switched bagging to use it."
    },
    {
        "repository": "https://github.com/encog/encog-java-core",
        "commit_hash_before": "133b5b11b45f7cfa1c01ef61dfa01756c3869009",
        "commit_hash_current": "869edd0c1a0a65348e9ddb673f3707ee755d616c",
        "refactoring_type": "pure",
        "justification": "The commit primarily involves renaming variables, methods, and classes without changing their behavior (BaggingDataSetFactory to BaggingMLFactory and BaggingDataSet to BaggingTrainingData). There are also some minor code reorganizations. No new functionality or bug fixes were introduced.",
        "commit_message": "Type refactoring and completed AdaBoost code"
    },
    {
        "repository": "https://github.com/restlet/restlet-framework-java",
        "commit_hash_before": "460c8b091d87ddfb3375096f41f62725aa1b4ff2",
        "commit_hash_current": "7b0c7daa0502489d6aecf8d978d82fa0ed703472",
        "refactoring_type": "pure",
        "justification": "The commit adds new methods to the ClientResource class that allow for setting client preferences regarding accepted media types and attributes, but it does not seem to affect the existing behavior or functionality. Instead, it expands the capabilities of the class by providing more options for customization without altering the way it operates.",
        "commit_message": "- Added Resource#getQueryValue(String), getAttribute(String),\n         setQueryValue(String, String) and setAttribute(String, String)\n         shortcut methods.\n       - Moved Client#handle(...) methods to parent Restlet class.\n       - Context#clientDispatcher and serverDispatcher are now Restlet\n         instead of Client. Needed to fix URI template resolution\n         in simple ClientResource instances.\n       - Added ClientResource#accept(...) shortcut methods."
    },
    {
        "repository": "https://github.com/restlet/restlet-framework-java",
        "commit_hash_before": "54272ab38670d009bf5998c0f3c132efb254c576",
        "commit_hash_current": "576cdcc26f2e523ff4d7edca73f18d1274f8d2eb",
        "refactoring_type": "pure",
        "justification": "The commit introduces new methods for retrieving attribute values from both requests and responses, but the changes are purely structural without altering any existing functionality. The behavior of the code remains the same before and after the refactoring.",
        "commit_message": "API changed : Added Resource#getQueryValue(String), getAttribute(String), setQueryValue(String, String) and setAttribute(String, String) shortcut methods."
    },
    {
        "repository": "https://github.com/restlet/restlet-framework-java",
        "commit_hash_before": "35c3cad8abef79a5918f200b23b159349b040e27",
        "commit_hash_current": "edac2b3b0179758ddcf627c7d5e54a302e63ef9a",
        "refactoring_type": "pure",
        "justification": "The commit changes the location of the classes from 'swagger' package to 'internal/swagger' package, but it does not seem to affect the functionality or behavior of the code. This refactoring is purely organizational and does not introduce any new features or fix any bugs.",
        "commit_message": "renamed package org.restlet.ext.apispark.internal.swagger.model to renamed package org.restlet.ext.apispark.internal.model.swagger, fixed paths (#1150)"
    },
    {
        "repository": "https://github.com/restlet/restlet-framework-java",
        "commit_hash_before": "74109ecba7dfd20edf10d6c3a43ed1f2918a9b49",
        "commit_hash_current": "b1c47201799dabb123cad5c95be0fae2ac09eb49",
        "refactoring_type": "pure",
        "justification": "The commit contains only structural changes with no functional changes such as renaming variables, methods or classes without changing their behavior, extracting methods without altering functionality and reorganizing code structure while maintaining the same behavior. There are no additions of new features, bug fixes, changes to behavior or outputs of methods, adding new parameters or changing method signatures in ways that affect behavior.",
        "commit_message": "added authentication to Endpoint in RWADef, switched string endpoint to list of Endpoints (https://github.com/restlet/apispark/issues/1520)"
    },
    {
        "repository": "https://github.com/restlet/restlet-framework-java",
        "commit_hash_before": "b1c47201799dabb123cad5c95be0fae2ac09eb49",
        "commit_hash_current": "623ed303ed6d85a11600d36d7e770195aed1067e",
        "refactoring_type": "pure",
        "justification": "The commit does not seem to introduce any new functionality or modify existing behavior. It appears to be a refactoring effort focusing on organizing the code and adding security schemes for various authentication protocols in different classes. This is considered 'pure' refactoring as it only changes the structure of the code without affecting its functionality.",
        "commit_message": "updated command line help (https://github.com/restlet/apispark/issues/1520)"
    },
    {
        "repository": "https://github.com/taskadapter/redmine-java-api",
        "commit_hash_before": "7afd2591bb8b5704ad9611c8a1ee35e198ec9257",
        "commit_hash_current": "898d1dfb81431e650c6fac54a6b8c57757e432f1",
        "refactoring_type": "pure",
        "justification": "The commit only changes the name of a class, TrackerController, to IssueTrackerApi. This is a purely structural change and does not seem to alter any behavior or functionality. The code reorganization is aimed at improving readability and naming conventions.",
        "commit_message": "#24 refactoring Exceptions hierarchy."
    },
    {
        "repository": "https://github.com/dropwizard/metrics",
        "commit_hash_before": "26238f3d79352f06fe52f21d88a7d95d97a2b4f6",
        "commit_hash_current": "09890c1da9abd8638120af9ffb34846b1e7f5c5a",
        "refactoring_type": "pure",
        "justification": "The code changes in the commit involve renaming methods and classes, extracting a method, and simplifying conditional logic without changing their behavior. These changes do not seem to affect the functionality or output of the code.",
        "commit_message": "Switch to using standard getters."
    },
    {
        "repository": "https://github.com/dropwizard/metrics",
        "commit_hash_before": "09890c1da9abd8638120af9ffb34846b1e7f5c5a",
        "commit_hash_current": "0011daa934f9397a0dd77ef368b86d2adbe8b239",
        "refactoring_type": "pure",
        "justification": "The commit only seems to involve updates to external dependencies' versions and minor changes in the project structure, such as the mode of some files. There are no apparent functional changes or additions of new features. Therefore, it can be classified as 'pure' refactoring.",
        "commit_message": "Change metrics-httpclient to reflect changes in HttpClient 4.2."
    },
    {
        "repository": "https://github.com/dropwizard/metrics",
        "commit_hash_before": "3453d174cddcb9c3168dd0956c3d3b6ff099750b",
        "commit_hash_current": "dc0e05deab518a90beae8ce9b62db36c9b5874e9",
        "refactoring_type": "pure",
        "justification": "The changes in the diff mainly involve renaming variables, methods and classes, as well as extracting methods without altering functionality. There are no apparent additions or removals of features, nor any changes to behavior or outputs. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "Handle long periods of inactivity without messing up forward decay priority sampling."
    },
    {
        "repository": "https://github.com/dropwizard/metrics",
        "commit_hash_before": "b2a0034b925934e41a6cd1d87521842df8d6404c",
        "commit_hash_current": "9847781653cc0ce5313a39155dbf0740a5c12026",
        "refactoring_type": "pure",
        "justification": "The commit introduces new classes for listener tests and updates the existing ones to use the deprecated methods. However, it does not seem to change the functionality or behavior of the codebase. Instead, it appears to be a refactoring effort to align with the updated API.",
        "commit_message": "Split out context listeners.\n\nAdminServletContextListener is now deprecated."
    },
    {
        "repository": "https://github.com/dropwizard/metrics",
        "commit_hash_before": "7d8479c86057ac62196f888648ac6ac9fe9d03a0",
        "commit_hash_current": "0cf7d087f785aa19811c8ccd5b8cdcf538c23b41",
        "refactoring_type": "pure",
        "justification": "The changes in this commit appear to be purely organizational, as they add getSum() method for both JmxHistogramMBean and JmxReporter without altering the existing functionality. This modification does not seem to affect the behavior or outputs of the methods.",
        "commit_message": "Introduce Summing to keep track of sum of events (#1254)\n\nThis is a rework of PR #1022 by @hashbrowncipher (and fixes @slovdahl's\nissue #712). This PR is based on the 4.0-development branch, which has\nevolved further than master.\n\nThe main differences are:\n\n* Introduction of a new Summing interface, which is implemented by\nMeter, Timer and Histogram\n* Reporting of the Summing.sum() is done as a long to avoid loss of precision on\nhigh values due to floating point properties\n* All reporters report the sum() property of the relevant metrics\n\nThe main purpose of storing the sum is to facilitate monitoring systems\nthat use raw ascending counters (e.g. Prometheus), and time-series\ndatabases such as InfluxDB (see also @mevdschee comment)"
    },
    {
        "repository": "https://github.com/MinecraftForge/MinecraftForge",
        "commit_hash_before": "816b0738e434872640d4aa8640b0000c582a2f8b",
        "commit_hash_current": "dfd15acb6db1f20b87f53010bb357bc918f8c10c",
        "refactoring_type": "pure",
        "justification": "The commit removes redundant imports and refactors some code to use a new interface IMinecraftRegistry. These changes do not appear to affect the behavior or functionality of the code.",
        "commit_message": "Reorganize for bukkit integration"
    },
    {
        "repository": "https://github.com/MinecraftForge/MinecraftForge",
        "commit_hash_before": "816b0738e434872640d4aa8640b0000c582a2f8b",
        "commit_hash_current": "dfd15acb6db1f20b87f53010bb357bc918f8c10c",
        "refactoring_type": "pure",
        "justification": "The commit does not seem to introduce any new features or change behavior. The changes appear to be purely organizational, moving the source code from 'src-base' to 'src-work' and cleaning up the source using Python scripts. There are no indication of bug fixes or modifications in functionality.",
        "commit_message": "Reorganize for bukkit integration"
    },
    {
        "repository": "https://github.com/MinecraftForge/MinecraftForge",
        "commit_hash_before": "9d6266d85b7a49dfadd6b958510341d3a13d67ac",
        "commit_hash_current": "3115f92ee4dfc78a0ad12033c350f1c543aaeb32",
        "refactoring_type": "pure",
        "justification": "The commit consists mainly of modifications to the project structure, including adding new directories, updating classpaths, and moving resources. There are no changes to behavior or functionality, and no bug fixes or additions of new features. The refactoring seems to be purely organizational in nature.",
        "commit_message": "Check in new fml mod work so far. Lots still to do."
    },
    {
        "repository": "https://github.com/MinecraftForge/MinecraftForge",
        "commit_hash_before": "3115f92ee4dfc78a0ad12033c350f1c543aaeb32",
        "commit_hash_current": "2a19eca517b86d2958facba90a4927cb15cfe750",
        "refactoring_type": "pure",
        "justification": "The commit contains mostly code reorganization and simplification of conditional logic without changing the outcomes. There are no new features, bug fixes, or changes to behavior or functionality.",
        "commit_message": "Check in a lot of recent work"
    },
    {
        "repository": "https://github.com/MinecraftForge/MinecraftForge",
        "commit_hash_before": "2a19eca517b86d2958facba90a4927cb15cfe750",
        "commit_hash_current": "9e4131c3e8f87b56a15c9cb68bf10bbbe31e9437",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new class and adds an instance of the existing MockMod class to it, but none of these changes alter the functionality or behavior of the code. The TickTester class is also introduced, but it only contains basic constructors without any methods. Therefore, this refactoring can be classified as 'pure'.",
        "commit_message": "A bunch more fixes for FML mods"
    },
    {
        "repository": "https://github.com/MinecraftForge/FML",
        "commit_hash_before": "f47ec16678fd558b30c5b5a826246ee67410d11f",
        "commit_hash_current": "f3be1f0e6fa0e2961bd99bb93d2c37102288f48a",
        "refactoring_type": "pure",
        "justification": "The commit primarily contains renaming of variables and methods, extraction of methods without altering functionality, reorganization of code structure while maintaining the same behavior. No changes to behavior or functionality were introduced.",
        "commit_message": "Reorganize for bukkit integration"
    },
    {
        "repository": "https://github.com/MinecraftForge/FML",
        "commit_hash_before": "80f87ef5695ce2c4daa7d1cd00352909d5154cbd",
        "commit_hash_current": "9c1c414ca71b9af729f381b0c438744bdc3e680b",
        "refactoring_type": "pure",
        "justification": "The commit contains only structural changes and no functional alterations. For example, the addition of deprecated methods and classes (cpw.mods.fml.*), renaming some internal classes within Minecraft's source code, and reorganizing imported packages. No new functionality has been added or existing behavior changed.",
        "commit_message": "Reorganize for bukkit integration"
    },
    {
        "repository": "https://github.com/MinecraftForge/FML",
        "commit_hash_before": "f47ec16678fd558b30c5b5a826246ee67410d11f",
        "commit_hash_current": "f3be1f0e6fa0e2961bd99bb93d2c37102288f48a",
        "refactoring_type": "pure",
        "justification": "The commit introduces several changes to the codebase, but none of them alter the functionality or behavior of the existing features. The changes appear to be primarily focused on moving some methods and classes from one package to another (ServerRegistry to ModLoader), simplifying the structure, and renaming some variables. These types of structural adjustments without functional changes are typically classified as 'pure' refactoring.",
        "commit_message": "Reorganize for bukkit integration"
    },
    {
        "repository": "https://github.com/MinecraftForge/FML",
        "commit_hash_before": "80f87ef5695ce2c4daa7d1cd00352909d5154cbd",
        "commit_hash_current": "9c1c414ca71b9af729f381b0c438744bdc3e680b",
        "refactoring_type": "pure",
        "justification": "The changes are purely organizational, including the removal of deprecated code and renaming of some classes, methods, and fields. There is no indication of any behavioral or functional changes in the provided diff.",
        "commit_message": "Reorganize for bukkit integration"
    },
    {
        "repository": "https://github.com/MinecraftForge/FML",
        "commit_hash_before": "5c1363150e71ae19c938a0e48c99d2a6bb17a3fe",
        "commit_hash_current": "276fccb1706557d2de55f8edf32966927265d692",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new class 'SortingAlgorithms' with several static methods for sorting arrays. However, it does not appear to affect the existing functionality of the codebase as it only contains new additions without modifying any existing logic or behavior.",
        "commit_message": "Check in new fml mod work so far. Lots still to do."
    },
    {
        "repository": "https://github.com/ModeShape/modeshape",
        "commit_hash_before": "3ca1130d0115325be1262780eaddba43da8a5982",
        "commit_hash_current": "5e3483ebed6eea244f2b6c94fcc8216882163377",
        "refactoring_type": "pure",
        "justification": "The commit includes changes such as renaming classes and import statements, extracting methods, and reorganizing code structure. None of these changes appear to alter the behavior or functionality of the code.",
        "commit_message": "MODE-1465 - Added extra information for sequencer events: user id, sequencer name, output path and selected path (from the sequencer work info)"
    },
    {
        "repository": "https://github.com/ModeShape/modeshape",
        "commit_hash_before": "76087f11ef6eb3eb3ea4cb487c891ba69464176f",
        "commit_hash_current": "06c12cf9b4eafceeff7e49f7df4e58548b088fec",
        "refactoring_type": "pure",
        "justification": "The commit appears to contain changes that restructure the code, but do not change its behavior or functionality. The addition of JBoss Standalone JTA Manager Lookup and JNDILocation properties, while significant, does not seem to affect the core functionality of the class. Instead, it modifies the way the cache is configured with Infinispan.",
        "commit_message": "MODE-1448: \n-Split metadata and payload\n-Split payload into chunks\n-Added configurable idle time"
    },
    {
        "repository": "https://github.com/ModeShape/modeshape",
        "commit_hash_before": "06c12cf9b4eafceeff7e49f7df4e58548b088fec",
        "commit_hash_current": "6ec81d836816738f1b01a3ee150d1a8a76376a5c",
        "refactoring_type": "pure",
        "justification": "The commit mainly involves refactoring the codebase, including renaming classes (CacheConfigurationBuilder), reorganizing the structure of some parts (CacheConfigurationBuilder and Database specific BLOB column type functions), and simplifying conditional logic (Database specific BLOB column type function). However, there are no changes to behavior or functionality that can be observed from the provided code diff.",
        "commit_message": "MODE-1448: Switch to plain JDBC"
    },
    {
        "repository": "https://github.com/ModeShape/modeshape",
        "commit_hash_before": "6ec81d836816738f1b01a3ee150d1a8a76376a5c",
        "commit_hash_current": "746a446e851d35b3a4ad7927acae734a58c769cc",
        "refactoring_type": "pure",
        "justification": "The commit modifies the code structure by moving some methods and variables to a different class, but it does not change the behavior or functionality of existing methods. There are no bug fixes, new features, changes to method signatures, or additions of new parameters. Instead, this refactoring appears to be an effort to organize the code more cleanly.",
        "commit_message": "MODE-1448: Add strategy helper"
    },
    {
        "repository": "https://github.com/ModeShape/modeshape",
        "commit_hash_before": "cb16760adcda5f8902811b58e9c97953b1b00418",
        "commit_hash_current": "59f58c529fc9bf0c44a7e6ddb3cdc3c435c1f339",
        "refactoring_type": "pure",
        "justification": "The commit adds functionality by extending the capabilities of the BasicDocument class to create editable arrays, but it does not change the existing behavior. The existing constructor methods for BasicDocument remain unchanged, and the new constructors for EditableArray are separate functions.",
        "commit_message": "Federation - Added initial DocumentStore implementation and replaced SchematicDB usages. All tests pass."
    },
    {
        "repository": "https://github.com/orbotix/Sphero-Android-SDK",
        "commit_hash_before": "e7386077f412092cb944ffa8ab245b5e55dadc8f",
        "commit_hash_current": "f557a08cd30acd06f298c72eba62e6f87142c940",
        "refactoring_type": "pure",
        "justification": "In this commit, there are no changes to the behavior or functionality of the code. The changes include modifying the build configuration for different projects, removing and adding libraries, and updating library references. However, these modifications do not affect the program's output or operation.",
        "commit_message": "Updated Android Samples for Seattle Hackathon\n\n- Added Locator Sample\n- Added SelfLevel Sample\n- Added OptionFlags Sample\n- Added finite data streaming for Locator and Sensor Streaming samples\n- Added newest RobotLibrary.jar\n- Updated samples libs to no longer include RobotLibrary.jar\n- Linked each sample with the RobotUILibrary in the samples directory"
    },
    {
        "repository": "https://github.com/twall/jna",
        "commit_hash_before": "ab2d5a72e7f86ed2f91ac32259d04ad5b2135b5d",
        "commit_hash_current": "a947dfdac53e91e78ff72fcc28f3995efe292ce1",
        "refactoring_type": "pure",
        "justification": "The changes made in this commit do not seem to alter the functionality or behavior of the code. The refactoring involves adding a new method (getFieldOrder()) in several classes that returns a list of field names in the order they are defined. This change does not affect how the classes behave, it just provides additional metadata about their structure. Thus, I would classify this commit as 'pure' refactoring.",
        "commit_message": "address issue #84"
    },
    {
        "repository": "https://github.com/twall/jna",
        "commit_hash_before": "b7d94d6a143ebafa175bceb73acf7bac6deb5d7e",
        "commit_hash_current": "2309762aca0dc53455151e62c3cd80439b8b28ff",
        "refactoring_type": "pure",
        "justification": "The commit modifies the class structure and introduces a new DefaultTypeMapper instance, but it does not appear to change any existing functionality or behavior. The code changes are focused on adding a TypeConverter for TestField within the mapper, and the addition of a constructor in TestStructure that utilizes this newly added TypeConverter.",
        "commit_message": "fix broken Structure.setFieldOrder issue"
    },
    {
        "repository": "https://github.com/twall/jna",
        "commit_hash_before": "e00752087b479f72fe7e2b39c2af98ac404b9388",
        "commit_hash_current": "bbc1d4b43258b63f2107ae26f1f91006fa549dca",
        "refactoring_type": "pure",
        "justification": "The code changes only involve the reorganization of some imports and the addition of new classes (SCOPE_IDENTIFIER, SCOPE_NAMESPACE, and ScopeIdentifier), but these changes do not appear to affect the functionality or behavior of the existing code. As a result, this refactoring can be classified as 'pure'.",
        "commit_message": "some changes regarding typelib"
    },
    {
        "repository": "https://github.com/twall/jna",
        "commit_hash_before": "bbc1d4b43258b63f2107ae26f1f91006fa549dca",
        "commit_hash_current": "58b89ebc55a7e12295115ccb9013a5929be66a7b",
        "refactoring_type": "pure",
        "justification": "The changes in this commit do not appear to affect the behavior or functionality of the code. The code for loading a type library and testing methods has been reorganized, but no new features have been added, no bugs have been fixed, and no method signatures or behaviors have changed.",
        "commit_message": "some changes"
    },
    {
        "repository": "https://github.com/twall/jna",
        "commit_hash_before": "47d1f3cc893c5743570ea341eb39d42a9a30a12d",
        "commit_hash_current": "fcf1f5c283ee83da50cfbf2b6d2900cc944eee18",
        "refactoring_type": "pure",
        "justification": "The commit mainly involves code formatting changes, variable and method name renames, as well as imports adjustments. There are no functional changes or evidence of new features being added. The behavior of the existing methods remains unaltered.",
        "commit_message": "restored because of lost source code"
    },
    {
        "repository": "https://github.com/tinkerpop/rexster",
        "commit_hash_before": "262c278c95f9cbf67d84284ec813c89a24cae74f",
        "commit_hash_current": "4caf6502d76f346e582db704ad250c5811c03403",
        "refactoring_type": "pure",
        "justification": "The commit primarily focuses on reorganizing code and refactoring, with no discernible changes to behavior or functionality. The addition of the `createPacker` method in both classes indicates restructuring of existing code, but there are no changes to the method's output or the resulting messages processed by the application.",
        "commit_message": "Rexpro is working."
    },
    {
        "repository": "https://github.com/tinkerpop/rexster",
        "commit_hash_before": "9297441648f72c51e280bfc471cfe61a4a7425bd",
        "commit_hash_current": "fd862fdb82539add48ab910819ba597f036c31b1",
        "refactoring_type": "pure",
        "justification": "In the provided code diff, there are changes in the import statements and class names (RexsterApplicationImpl to DefaultRexsterApplication). However, these changes do not affect the functionality of the code as they only rename the class. Furthermore, no functional changes or bug fixes were made to the existing methods. The code still performs the same tasks with the new class names, making it a 'pure' refactoring.",
        "commit_message": "Renamed the RexsterApplicationImpl to DefaultRexsterApplication."
    },
    {
        "repository": "https://github.com/tinkerpop/rexster",
        "commit_hash_before": "1e728ef7ccde0e73be82bb02da45d5866387b01f",
        "commit_hash_current": "a99c2d680cbf23172dadd83966c34a40dfa1302c",
        "refactoring_type": "pure",
        "justification": "The code diff consists of the addition of new classes, methods and test resources. However, none of these changes seem to alter the functionality or behavior of existing code. Instead, they appear to expand the project with new functionality (classes and tests), indicating a 'pure' refactoring.",
        "commit_message": "moving sessioned script request serialization into the session executor so the commit happens in the same thread as the script execution\n\nfixes https://github.com/tinkerpop/rexster/issues/305"
    },
    {
        "repository": "https://github.com/tinkerpop/rexster",
        "commit_hash_before": "a981cecbfe8fed73d18bd3dcf08eff0d9a5434dd",
        "commit_hash_current": "4bf4fb7e5522902f233cf712c83dd51cfbea6ff7",
        "refactoring_type": "pure",
        "justification": "The commit adds a new test case for the transaction meta flag without session, but does not alter any existing functionality or behavior. It only extends the codebase by adding additional tests while maintaining the current functionalities.",
        "commit_message": "moving session classes into their own package"
    },
    {
        "repository": "https://github.com/tinkerpop/rexster",
        "commit_hash_before": "bea1a79747a7d209902d532a909a0eda64bca702",
        "commit_hash_current": "777284733f6ddd2986f4301113ba9ed61f0bd2aa",
        "refactoring_type": "pure",
        "justification": "The changes in this commit primarily involve reorganizing the code, renaming variables, and moving some configurations to be directly accessible from the properties. No new functionality has been added or existing behavior changed, so it can be classified as a 'pure' refactoring.",
        "commit_message": "Metrics and HTTP server all reconfigure on rexster.xml change."
    },
    {
        "repository": "https://github.com/SpoutDev/Spout",
        "commit_hash_before": "f907e81000faacb738eba3d69c417cfb530b6960",
        "commit_hash_current": "2e738cb1bc85dc07d4d2906f3cc8866a5f64ad45",
        "refactoring_type": "pure",
        "justification": "The commit contains structural changes to the code such as renaming variables, methods, and classes without changing their behavior. It also extracts methods without altering functionality, reorganizes code structure while maintaining the same behavior, and simplifies conditional logic without changing the outcomes. These changes are typical indicators of 'pure' refactoring.",
        "commit_message": "Spout lighting is now fully implemented\n\nSigned-off-by: Irmo van den Berge <bergerkiller@gmail.com>"
    },
    {
        "repository": "https://github.com/SpoutDev/Spout",
        "commit_hash_before": "722cbaa6095c393f3ee9b8a6bd079ed21ee7d372",
        "commit_hash_current": "f7fc7de24708dbe228a19fb1c9ecbfc3d1c3b57b",
        "refactoring_type": "pure",
        "justification": "The changes in this commit seem to be purely structural, with no apparent alterations to the behavior or functionality of the code. The refactored classes now use `SpoutChunk` instead of `Region`, and methods such as `queueForUpdateAsync()` have been replaced with `enqueueUpdateAsync()`. Additionally, some variables have been renamed without affecting their functions. These modifications can be classified as 'pure' refactoring.",
        "commit_message": "Moved physics updates to chunks, causes server slowdown"
    },
    {
        "repository": "https://github.com/SpoutDev/Spout",
        "commit_hash_before": "e4533227558d15781c1cc894223a0c991cae3f79",
        "commit_hash_current": "0f0d2ab2d5e942775da4aea5894a70b341b00c13",
        "refactoring_type": "pure",
        "justification": "The commit changes the package names of several classes from 'org.spout.api' to 'org.spout.api.entity', but there are no behavior or functional changes, only renaming the packages.",
        "commit_message": "Added BaseComponent implementation of Component.\n\n- Stubbed out Datatable component (next commit)\n- Some cleanup\n- Fixed infinite recursion in BasicTickable\n\nSigned-off-by: Chris Sanders <zidane@outlook.com>"
    },
    {
        "repository": "https://github.com/SpoutDev/Spout",
        "commit_hash_before": "a1e414ce1383ce381b53570caa0565a0247e9742",
        "commit_hash_current": "9104d9277cc21a06dbfc0f2429dfaf5b4aa7aa9e",
        "refactoring_type": "pure",
        "justification": "The commit introduces new methods and classes (OutputStream, DatatableTuple) but there's no evidence of changes to behavior or functionality. Instead, it appears these additions are used for code refactoring purposes, such as adding the ability to output data streams and improving the DatatableTuple interface structure. No existing functions have been modified, bug fixes aren't present, and there's no indication of new features being added.",
        "commit_message": "Update data package, add BaseComponentHolder (from Roy's branch)\n\nSigned-off-by: Chris Sanders <zidane@outlook.com>"
    },
    {
        "repository": "https://github.com/SpoutDev/Spout",
        "commit_hash_before": "9104d9277cc21a06dbfc0f2429dfaf5b4aa7aa9e",
        "commit_hash_current": "ccb148ec8fcdd5fc21c00908c24e937a44e23e7a",
        "refactoring_type": "pure",
        "justification": "The commit removes files completely, which suggests a cleanup or organizational change rather than any functional modification. This indicates a 'pure' refactoring.",
        "commit_message": "Removal of the controller concept.\n\n- Added TypedComponent for when a component should be locked to a\nspecific EntityType.\n\nSigned-off-by: Chris Sanders <zidane@outlook.com>"
    },
    {
        "repository": "https://github.com/cloudfoundry/uaa",
        "commit_hash_before": "c3bf7564b374884dd9793fc9ab8b6ade2dc307b9",
        "commit_hash_current": "1a5b98ded67c2d096aae77fae4cc3dbfed4f823a",
        "refactoring_type": "pure",
        "justification": "The commit changes the default value of 'authorities' in the USERS table from 'uaa/user' to 'uaa.user', and updates the corresponding UPDATE statements accordingly. This is a pure refactoring as it does not change the behavior or functionality of the code.",
        "commit_message": "CFID-307: add groups to ScimUser and map to authorities in JDBC\n\nChange-Id: Ieb7f71c325214e51a87eacb1e5bc742ad98ea7b7"
    },
    {
        "repository": "https://github.com/cloudfoundry/uaa",
        "commit_hash_before": "c3bf7564b374884dd9793fc9ab8b6ade2dc307b9",
        "commit_hash_current": "1a5b98ded67c2d096aae77fae4cc3dbfed4f823a",
        "refactoring_type": "pure",
        "justification": "The commit does not seem to change the functionality of the code. It only replaces occurrences of 'uaa/user' with 'uaa.user'. This is a simple renaming of string literals and does not affect the behavior or outputs of methods.",
        "commit_message": "CFID-307: add groups to ScimUser and map to authorities in JDBC\n\nChange-Id: Ieb7f71c325214e51a87eacb1e5bc742ad98ea7b7"
    },
    {
        "repository": "https://github.com/cloudfoundry/uaa",
        "commit_hash_before": "549db83c2aab344346de6aa818175eb048b2d10b",
        "commit_hash_current": "9bd986edb1fe11ffa473ca0a6fda33e8b1382641",
        "refactoring_type": "pure",
        "justification": "The changes in this commit seem to be focused on renaming and reorganizing imports, variable names, and method calls without any discernible changes to the functionality. This refactoring does not appear to affect behavior or outputs of methods, indicating 'pure' refactoring.",
        "commit_message": "CFID-329: more new client creation rules\n\n- CFID-334: re-order sync in partial update\n- at least one authorized grant type must be provided\n- resource ids are always set to \"none\" (they are not required\n  by the UAA because they are dynamically generated)\n- Support for creating Resource Servers:\n  - client_credentials grants are now allowed, but only for limited\n    authorities (uaa.resource)\n  - valid scopes are those of the caller and also anything starting\n    with \"<caller_id>.\" or \"<client_id>.\"\n\nChange-Id: I76094a3f09c53682778b8097eca19bb07a4d899a"
    },
    {
        "repository": "https://github.com/cloudfoundry/uaa",
        "commit_hash_before": "e4d466cc92680b7929ee0708ff4293ff95100f74",
        "commit_hash_current": "32fbc2db0c1fb67babba1f241f547e99ff5c4485",
        "refactoring_type": "pure",
        "justification": "The commit introduces new functionality for handling users in different zones, but the core functionality of user authentication and authorization remains unchanged. The existing code structure has been expanded to accommodate this additional feature. This constitutes a 'pure' refactoring as it does not change the behavior or functionality of the original code.",
        "commit_message": "Refactor EmailAccountCreationService to use new UaaUrlUtils for URLs.\n- Remove unused default redirect location.\n\n[#82406702] https://www.pivotaltracker.com/story/show/82406702\n\nSigned-off-by: Chris Dutra <cdutra@pivotal.io>"
    },
    {
        "repository": "https://github.com/cloudfoundry/uaa",
        "commit_hash_before": "32fbc2db0c1fb67babba1f241f547e99ff5c4485",
        "commit_hash_current": "136dbd1e6ba4fccbca4c550d2548224bc723bf91",
        "refactoring_type": "pure",
        "justification": "The commit makes changes to the imports and class names but does not seem to change any functional behavior. It appears to be a refactoring effort aimed at improving code organization and readability, without altering the original functionality.",
        "commit_message": "Statically configured IDPs must be represented in the DB\nSince we rely on the \"origin\" of these IDPs to be present during authentication,\nwe must boot strap them\nhttps://www.pivotaltracker.com/story/show/86449734\n[#86449734]"
    },
    {
        "repository": "https://github.com/scobal/seyren",
        "commit_hash_before": "e514f66ec44da648f54ccb9ff3540f6dc3463748",
        "commit_hash_current": "ba96e310bcbb8e389874255766a7246528469b30",
        "refactoring_type": "pure",
        "justification": "In the provided code diff, there are no indications of changes to behavior or functionality. The commit adds a new import statement (`import java.net.URI`) and modifies the construction of the URI used in the HttpGet request for fetching data from Graphite. However, these changes do not appear to alter the overall behavior of the code as they are merely structural modifications to improve readability and maintainability. Furthermore, there is no evidence of bug fixes or the addition of new features that would classify this commit as 'floss'.",
        "commit_message": "Correctly generate escaped query string when checking Graphite (fixes #44)"
    },
    {
        "repository": "https://github.com/BuildCraft/BuildCraft",
        "commit_hash_before": "b872485663c8cc45329bc69b651490d3e6b6a404",
        "commit_hash_current": "41cfa93e76ea5a20e2d6b770db7ae55dcf89a7fc",
        "refactoring_type": "pure",
        "justification": "The changes in the commit refactor some code structure, but they do not seem to change any behavior or functionality of the entities. The laser entity is only created on the server side (APIProxy.isClient(worldObj) check), and there are no functional differences between the old and new implementation.",
        "commit_message": "Lasers showing in SMP."
    },
    {
        "repository": "https://github.com/BuildCraft/BuildCraft",
        "commit_hash_before": "19c4de5a1c8dd14a3ffa456eb2e55f484f33558d",
        "commit_hash_current": "eec4aa0323570b76d0fe39382d036925e6cf6379",
        "refactoring_type": "pure",
        "justification": "The commit consists of changes to the method names and addition of an integer parameter `l` in the pipeRender method without any modifications to the existing functionality. This refactoring is purely structural, focusing on improving code readability and maintainability, and does not alter the behavior or functionality of the code. For instance, the renaming of the method from renderPipe to pipeRender indicates an improved naming convention for better understanding of the code. Additionally, the integer parameter `l` seems to be used as a workaround to pass multiple arguments in a single method call without modifying the existing method signature.",
        "commit_message": "Pulled the pipe world renderer out of core and put it in transport, also made the actual rendering a class of its own. Legacy world rendering not touched (quarry frames)"
    },
    {
        "repository": "https://github.com/BuildCraft/BuildCraft",
        "commit_hash_before": "eec4aa0323570b76d0fe39382d036925e6cf6379",
        "commit_hash_current": "8365d1ca35396985c5959eda419632c904ef5475",
        "refactoring_type": "pure",
        "justification": "The commit introduces four new classes (TextureMatrix, WireMatrix, ConnectionMatrix, and Orientations) for managing textures, wires, connections, and orientations respectively. However, these changes do not appear to alter the behavior or functionality of existing code. Instead, it seems to be a restructuring effort aimed at improving organization and maintainability.",
        "commit_message": "Rewrote pipe world renderer to render from a state object instead of containing logic to calculate what to render. This state object can then be synced to the client to completely overwrite the client's view of the world"
    },
    {
        "repository": "https://github.com/BuildCraft/BuildCraft",
        "commit_hash_before": "6881db240652c5b1c785456d2d497a06d2cfa7f2",
        "commit_hash_current": "02b1e4ae35e771ed8a6b7e6472e1847e20439453",
        "refactoring_type": "pure",
        "justification": "The commit introduces new classes for WireMatrix, TextureMatrix, and WireMatrix but does not appear to change any existing functionality or add new features. It seems to be organizing the code into separate classes for better modularity and readability.",
        "commit_message": "Rewrote pipe world renderer to render from a state object instead of containing logic to calculate what to render. This state object can then be synced to the client to completely overwrite the client's view of the world"
    },
    {
        "repository": "https://github.com/BuildCraft/BuildCraft",
        "commit_hash_before": "6881db240652c5b1c785456d2d497a06d2cfa7f2",
        "commit_hash_current": "02b1e4ae35e771ed8a6b7e6472e1847e20439453",
        "refactoring_type": "pure",
        "justification": "The commit adds new classes (TextureMatrix and WireMatrix) for managing textures and wires, respectively. However, these classes do not seem to change the behavior or functionality of existing code. Instead, they appear to be organized as part of a refactoring effort aimed at improving modularity and maintainability. Additionally, the commit includes no bug fixes or changes to existing functionality.",
        "commit_message": "Rewrote pipe world renderer to render from a state object instead of containing logic to calculate what to render. This state object can then be synced to the client to completely overwrite the client's view of the world"
    },
    {
        "repository": "https://github.com/tcurdt/jdeb",
        "commit_hash_before": "426866d6935e4d1e0b412f1f39ee2806d6418298",
        "commit_hash_current": "0dd89e51b7ff388ecb550dccab3c90d8dcae882b",
        "refactoring_type": "pure",
        "justification": "The commit added a new class 'CaptureConsole' for capturing console output during testing, but it does not seem to change the existing functionality or behavior of the code. Additionally, there are no other changes to methods, variables, or classes that could affect the overall functioning of the project.",
        "commit_message": "Changed 'failOnMissingSrc' property to 'missingSrc' with verbs: ignore |\nwarn | fail.\n\nThis change involved some refactoring so that we could push Console\nthrough to the Data instances."
    },
    {
        "repository": "https://github.com/tcurdt/jdeb",
        "commit_hash_before": "7abb71d81a5b695b9cf8dc5aa9a70845d4f07920",
        "commit_hash_current": "cd01f7d2e4cd7a50de973cdf0b3ddb91c2e93417",
        "refactoring_type": "pure",
        "justification": "The commit changes the names of some variables and method parameters within the 'Data.java' file, but there are no functional changes or behavior modifications in the provided code diff. Additionally, the markup changes in 'docs/maven.md' are merely formatting adjustments, not functional changes.",
        "commit_message": "destinationName -> dst"
    },
    {
        "repository": "https://github.com/tcurdt/jdeb",
        "commit_hash_before": "426866d6935e4d1e0b412f1f39ee2806d6418298",
        "commit_hash_current": "0dd89e51b7ff388ecb550dccab3c90d8dcae882b",
        "refactoring_type": "pure",
        "justification": "The commit adds a new class `CaptureConsole` for testing purposes, but does not seem to change the behavior or functionality of the existing code. This can be considered as 'pure' refactoring since it only involves reorganization and simplification without affecting the original program's output.",
        "commit_message": "Changed 'failOnMissingSrc' property to 'missingSrc' with verbs: ignore |\nwarn | fail.\n\nThis change involved some refactoring so that we could push Console\nthrough to the Data instances."
    },
    {
        "repository": "https://github.com/lintool/Mr.LDA",
        "commit_hash_before": "c5792ca8f7c415246088e43afdc8c50093c602ff",
        "commit_hash_current": "25a12cfaece2e85c7e7b75e8ea503c36b6acbb42",
        "refactoring_type": "pure",
        "justification": "The code changes seem to be primarily structural in nature, focusing on reorganizing and simplifying the existing logic for updating alpha vector. No new functionality has been added or bug fixes have been introduced. The behavior of the program remains unchanged.",
        "commit_message": "check in updates"
    },
    {
        "repository": "https://github.com/thinkaurelius/titan",
        "commit_hash_before": "0a466a58d67da071fb1cfd8836e7aa665b9e2e00",
        "commit_hash_current": "72201c0e18db926b71a5d90668a52a62b36fa96a",
        "refactoring_type": "pure",
        "justification": "The commit introduces new classes, methods and functions but none of the changes seem to affect the behavior or functionality of the existing code. Instead, it appears to be organizing the codebase by creating separate test utilities and moving relevant methods into these new classes. This is considered a 'pure' refactoring as it doesn't change the intended functionality of the system.",
        "commit_message": "Astyanax testing and implementation tweaks\n\n* Added \"Internal\" flavors of the existing \"ExternalAstyanax...\" test\n  classes.  These start a Cassandra instance in the JVM, like the\n  \"InternalCassandra...\" test classes.  These pass on my machine, but\n  only from maven.  Eclipse mysteriously stops printing any console\n  output midway through test execution and later produces a bizarre\n  Astyanax connection failure.  The InternalCassandra* tests do pass.\n  It's just the InternalAstyanax* tests failing.  So, there may be\n  some gross oversight in the way I'm setting the Astyanax environment\n  up that Eclipse exposes.  I'm not sure.\n\n* Removed the AstyanaxStorageManager#clearKeyspaces() hack that I\n  wrote in earlier commits.  There's no longer any static concurrent\n  hash map for sharing Astyanax contexts among storage managers, with\n  the upshot that this method is unnecessary."
    },
    {
        "repository": "https://github.com/thinkaurelius/titan",
        "commit_hash_before": "dbc97310aa3b4e55f600c3fc8d8e77efec9f032e",
        "commit_hash_current": "ac037957244e2d350eb06e3d269d977928be30fb",
        "refactoring_type": "pure",
        "justification": "The code changes involve renaming some classes and moving functionality from external dependencies into the project's testutil package. There are no apparent behavior or functional changes in the provided diff, making this a pure refactoring.",
        "commit_message": "Added clearStorage() method to StorageManager for clearing out the database and refactored test cases to use this method which makes the tests cleaner and simpler.\nAdded some configuration options to Astyanax. InternalCassandra tests not working."
    },
    {
        "repository": "https://github.com/thinkaurelius/titan",
        "commit_hash_before": "060034a3be5570feca7712c6cfbd4b5b321a24b9",
        "commit_hash_current": "521e116bcae8e38cd952ef2c6a9bdc1365860f44",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit are purely structural, adding new test classes for Astyanax storage and graph implementations without modifying their functionality or behavior. This refactoring does not seem to change the existing functionality or introduce any new features.",
        "commit_message": "Astyanax GraphDB testing, ID allocation\n\n* Removed some hacky configuration shortcuts in the first commit of\n  Astyanax storage manager / OKCVS\n* Registered the AstyanaxStorageManager with\n  GraphDatabaseConfiguration under the name \"astyanax\"\n* Added TitanGraphTest case for Astyanax which requires an\n  already-running Cassandra instance listening on 127.0.0.1:9160\n  (passes here)\n* Added an ID allocator backed by Astyanax\n* Suppressed unchecked and rawtypes warnings where I've used casts to\n  prevent compilation-time errors on the Astyanax RowQuery type"
    },
    {
        "repository": "https://github.com/thinkaurelius/titan",
        "commit_hash_before": "521e116bcae8e38cd952ef2c6a9bdc1365860f44",
        "commit_hash_current": "1fb7205d25cadc109c8dced23ae67f059750d7bf",
        "refactoring_type": "pure",
        "justification": "The commit adds new classes and methods for managing Cassandra connections, but it does not seem to change the existing functionality of any class. The changes are mainly structural and organizational, suggesting this is a pure refactoring.",
        "commit_message": "Astyanax testing and implementation tweaks\n\n* Added \"Internal\" flavors of the existing \"ExternalAstyanax...\" test\n  classes.  These start a Cassandra instance in the JVM, like the\n  \"InternalCassandra...\" test classes.  These pass on my machine, but\n  only from maven.  Eclipse mysteriously stops printing any console\n  output midway through test execution and later produces a bizarre\n  Astyanax connection failure.  The InternalCassandra* tests do pass.\n  It's just the InternalAstyanax* tests failing.  So, there may be\n  some gross oversight in the way I'm setting the Astyanax environment\n  up that Eclipse exposes.  I'm not sure.\n\n* Removed the AstyanaxStorageManager#clearKeyspaces() hack that I\n  wrote in earlier commits.  There's no longer any static concurrent\n  hash map for sharing Astyanax contexts among storage managers, with\n  the upshot that this method is unnecessary."
    },
    {
        "repository": "https://github.com/thinkaurelius/titan",
        "commit_hash_before": "1db7e854c9fd95152818f20c6b4c965f415b6f68",
        "commit_hash_current": "e72d6e302c9d1a49aee193bb5d252987ad79aa3f",
        "refactoring_type": "pure",
        "justification": "The changes in this commit appear to only involve renaming of classes and methods related to data filtering. There are no functional changes or additions of new features, but rather a reorganization of the code structure. This is indicative of 'pure' refactoring.",
        "commit_message": "lots of work on Gremlin compiler. No longer is the documentation in sync. The new Gremlin model is in full effect."
    },
    {
        "repository": "https://github.com/alibaba/dubbo",
        "commit_hash_before": "a32886fcd15170a486d9f10ec6355f2881fc0531",
        "commit_hash_current": "8fda9c757058bce25d04f8e6b4afa62c38cb911e",
        "refactoring_type": "pure",
        "justification": "The commit appears to be purely focused on reorganizing the code structure, extracting methods without altering functionality and simplifying imports by adding new dependencies for Logback instead of Log4j. No changes in behavior or functionality were observed.",
        "commit_message": "DUBBO-179 \u7edf\u8ba1\u5404\u65b9\u6cd5input\u548coutput\u6570\u636e\u91cf\u5927\u5c0f"
    },
    {
        "repository": "https://github.com/alibaba/dubbo",
        "commit_hash_before": "23275bd7dca84c74cc8c69860ab0512cecd8e457",
        "commit_hash_current": "c321bbe5ff2c0f6506d387b32a8cebdbd5099af0",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new method in the RegistryDirectory class (configToConfiguratiors), but it does not appear to change any existing functionality. Instead, it provides a utility method for parsing configurators from a string. This refactoring is purely organizational and does not seem to affect behavior or functionality.",
        "commit_message": "New config format"
    },
    {
        "repository": "https://github.com/alibaba/dubbo",
        "commit_hash_before": "c321bbe5ff2c0f6506d387b32a8cebdbd5099af0",
        "commit_hash_current": "6d95c4d0b50446bdeb44d60128f56ada25f28f46",
        "refactoring_type": "pure",
        "justification": "The commit adds dependencies for Curator Recipes, but the code changes appear to be related solely to reorganizing and extracting methods without altering functionality, which is indicative of a pure refactoring.",
        "commit_message": "Add app level configuration"
    },
    {
        "repository": "https://github.com/alibaba/dubbo",
        "commit_hash_before": "6d95c4d0b50446bdeb44d60128f56ada25f28f46",
        "commit_hash_current": "191cae18c3cf4ccf5081cd39c07f4a5846bfc064",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit appear to be focused on renaming packages and classes from 'org.apache.dubbo.config' to 'org.apache.dubbo.registry'. This change does not seem to affect the functionality or behavior of the code, as it is solely related to namespaces and organization within the project. Therefore, I classify this commit as a pure refactoring.",
        "commit_message": "Add route part"
    },
    {
        "repository": "https://github.com/alibaba/dubbo",
        "commit_hash_before": "940e3553b0b94c1df23b79a2f523293251b20d6f",
        "commit_hash_current": "7277f5ed1826e3ff926e483af466c9bef16898e2",
        "refactoring_type": "pure",
        "justification": "The commit includes code reorganization and improvements, but there are no changes to the functionality or behavior. It seems that the code has been refactored for better readability and organization without affecting its operation.",
        "commit_message": "Qos enhancement (#2153)\n\n* Not to accept foreign ip by default.\n\n* Log if fail to start qos server. #2046\n\n* Fix typo. No functional change.\n\n* Remove redundant declaration.\n\n* Sync dubbo.xsd to compact dubbo.xsd.\n\n* Simplify code and add comments.\n\n* Add log message if qos is not enabled.\n\n* Fix UT failure."
    },
    {
        "repository": "https://github.com/marceloverdijk/lesscss-maven-plugin",
        "commit_hash_before": "f523a9079d67eda2fd541280a2a2448fe76da3b4",
        "commit_hash_current": "de93e4f3e879da9a431f8ffabdba61358728a5aa",
        "refactoring_type": "pure",
        "justification": "The commit involves the creation of new files and structures, but it does not appear to change any existing functionality or behavior. The changes seem to be focused on organizing code into separate modules and classes, simplifying some conditional logic, and reorganizing imports.",
        "commit_message": "Add option to compile less files under Node.js\n\nNode.js is much much faster than Rhino."
    },
    {
        "repository": "https://github.com/marceloverdijk/lesscss-maven-plugin",
        "commit_hash_before": "de93e4f3e879da9a431f8ffabdba61358728a5aa",
        "commit_hash_current": "e8fa110efb1331507f6d0a1685040739034f02fe",
        "refactoring_type": "pure",
        "justification": "The commit adds new files but does not alter existing functionality. It introduces a Bootstrap v2.1.1 LESS file and a Maven POM configuration for compiling the LESS file using the lesscss-maven-plugin. No changes were made to the structure or behavior of the plugin itself.",
        "commit_message": "Merged with latest upstream. Extracted the compilation of the source files to compileIfChanged() to be able to call it in the watch mode and in the non watch mode. In the watch mode the thread will continuously call compileIfChanged() and then sleep in the specified watch interval. Forcing a compilation will be disabled in this mode."
    },
    {
        "repository": "https://github.com/marceloverdijk/lesscss-maven-plugin",
        "commit_hash_before": "de93e4f3e879da9a431f8ffabdba61358728a5aa",
        "commit_hash_current": "e8fa110efb1331507f6d0a1685040739034f02fe",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new file 'bootstrap.less' and sets up the Maven build to compile it using the LessCSS plugin, but the code inside this file appears to be identical to an existing Bootstrap version 2.1.1 CSS reset and core variables file. No changes to behavior or functionality are apparent, so this refactoring is classified as 'pure'.",
        "commit_message": "Merged with latest upstream. Extracted the compilation of the source files to compileIfChanged() to be able to call it in the watch mode and in the non watch mode. In the watch mode the thread will continuously call compileIfChanged() and then sleep in the specified watch interval. Forcing a compilation will be disabled in this mode."
    },
    {
        "repository": "https://github.com/dita-ot/dita-ot",
        "commit_hash_before": "f9aa8b0e26af0c708f3307184363b484084cf1f6",
        "commit_hash_current": "275aaa7d90674d43f83a56c0837e20981598eb02",
        "refactoring_type": "pure",
        "justification": "The Git diff shows several changes in code structure, with the removal of a large block of code (InternalEntityResolver class and its related methods) and the replacement of it with a call to CatalogUtils.getCatalogResolver(). The removed code was responsible for resolving entities based on publicId and systemId, while the new method simply returns an instance of CatalogResolver from another utility class. This change does not affect the behavior or functionality of the code as it only replaces one entity resolution mechanism with another, but there is no indication that the latter would behave differently. Additionally, other parts of the codebase, such as GenListModuleReader and DitaWriter, now set their entity resolver to CatalogUtils.getCatalogResolver() instead of creating a new InternalEntityResolver instance, reinforcing the notion that this change is purely structural.",
        "commit_message": "Replace custom catalog resolver with Apache Resolver #1340"
    },
    {
        "repository": "https://github.com/dita-ot/dita-ot",
        "commit_hash_before": "ec9120ee4539f40d3272190c4a51c5954566c559",
        "commit_hash_current": "377cbf252f38976979d5f82c624db12c0bef12ea",
        "refactoring_type": "pure",
        "justification": "The Git diff shows multiple files with changes that focus on improving code structure, readability, or maintainability. Examples of such improvements include: refactoring the InternalEntityResolver class to use CatalogUtils.getCatalogResolver(), removing redundant variable declarations, and simplifying conditional logic without changing its outcomes. Additionally, there are no indicators of changes to behavior or functionality, bug fixes, new features, or modifications to method signatures that could affect behavior.",
        "commit_message": "Replace custom catalog resolver with Apache Resolver #1340"
    },
    {
        "repository": "https://github.com/dita-ot/dita-ot",
        "commit_hash_before": "831a2de2c50e5655667df63cf3e560118b2a538b",
        "commit_hash_current": "df58abe1dd95e510fa1b57c13037b511e474773e",
        "refactoring_type": "pure",
        "justification": "The commit adds new tests, test resources, and a test class but none of the changes made to the existing code seem to affect functionality. Instead, it appears that the code has been organized and structured to better support testing.",
        "commit_message": "Clean and document gen-list and debug-filter Java code"
    },
    {
        "repository": "https://github.com/dita-ot/dita-ot",
        "commit_hash_before": "6cd22036276ac4793a5b864e9f3fae906be82998",
        "commit_hash_current": "9035881e3d8bc714bcb3913ca2df05bdf6a9b8e5",
        "refactoring_type": "pure",
        "justification": "In the provided code diff, there are no behavioral modifications or bug fixes. The change from `format` to `formats` in both `ExtensibleAntInvoker.java` and `JobSourceSet.java` is a simple renaming of a variable without altering its functionality. This type of refactoring is purely structural, and therefore this commit can be classified as 'pure'.",
        "commit_message": "Rename field to reflect set type\n\nSigned-off-by: Jarno Elovirta <jarno@elovirta.com>"
    },
    {
        "repository": "https://github.com/bguerout/jongo",
        "commit_hash_before": "8ab122269399394cc0f175f4a3ca960f5ed40997",
        "commit_hash_current": "0775aa8ef2f5ebdab88b97f8d57637bce343aa71",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new class 'FromStringUnmarshaller' and renames an existing class 'UnmarshallableObject' to 'ErrorObject'. However, there are no apparent changes in behavior or functionality for the existing classes. The new class seems to be an addition for handling string-based data conversions, which doesn't impact the original code's behavior.",
        "commit_message": "Change Unmarshaller to handle bson (bytes)"
    },
    {
        "repository": "https://github.com/bguerout/jongo",
        "commit_hash_before": "0775aa8ef2f5ebdab88b97f8d57637bce343aa71",
        "commit_hash_current": "4213490358cad150770b3b4b90fc384380d35369",
        "refactoring_type": "pure",
        "justification": "The commit removed the FromStringUnmarshaller.java file, which was a separate class for unmarshalling data, and migrated its functionality into another class. This change is purely structural and does not alter any behavior or functionality of the application.",
        "commit_message": "Marshall with bson4jackson"
    },
    {
        "repository": "https://github.com/bguerout/jongo",
        "commit_hash_before": "8ab122269399394cc0f175f4a3ca960f5ed40997",
        "commit_hash_current": "0775aa8ef2f5ebdab88b97f8d57637bce343aa71",
        "refactoring_type": "pure",
        "justification": "The commit introduces new classes, but the behavior of existing classes remains unchanged. The changes appear to be focused on code organization and restructuring (e.g., renaming UnmarshallableObject to ErrorObject, creating FromStringUnmarshaller class). There are no apparent modifications in functionalities or behaviors.",
        "commit_message": "Change Unmarshaller to handle bson (bytes)"
    },
    {
        "repository": "https://github.com/bguerout/jongo",
        "commit_hash_before": "0775aa8ef2f5ebdab88b97f8d57637bce343aa71",
        "commit_hash_current": "4213490358cad150770b3b4b90fc384380d35369",
        "refactoring_type": "pure",
        "justification": "The commit removes a test file and modifies the BSON class to use a different ObjectMapper instance. However, this change does not appear to affect the behavior or functionality of the code. Instead, it seems like an organizational refactor where the FromStringUnmarshaller uses a new ObjectMapper instance provided by the Jackson library.",
        "commit_message": "Marshall with bson4jackson"
    },
    {
        "repository": "https://github.com/bguerout/jongo",
        "commit_hash_before": "4213490358cad150770b3b4b90fc384380d35369",
        "commit_hash_current": "5fc0a87afdd6cd2fa687e0de02687c61788ff433",
        "refactoring_type": "pure",
        "justification": "The commit only renames one class from PojoDBObjectTest to ReadOnlyDBObjectTest and creates a new class LinkedFriend. None of these changes affect the behavior or functionality of the code.",
        "commit_message": "Add Encoder and refactor false negative tests"
    },
    {
        "repository": "https://github.com/spullara/mustache.java",
        "commit_hash_before": "3a06d58428d241bf44a432b54f32aab5f361f505",
        "commit_hash_current": "329b65c911fc4e09bca2c8e2cde2e2c7fd0996c9",
        "refactoring_type": "pure",
        "justification": "The commit only adds new test classes and refactors the SimpleObjectHandler class to improve its functionality. However, it does not change the existing behavior or add any new features that alter the program's original functionality. The changes are purely structural, such as renaming variables and methods, reorganizing code structure, and simplifying conditional logic.",
        "commit_message": "refactoring the object handler stuff to make it more understandable"
    },
    {
        "repository": "https://github.com/spullara/mustache.java",
        "commit_hash_before": "e0b87b556b363e58afe8a9b4306ed9634c2148a9",
        "commit_hash_current": "eb3d2c7a12d79a429c42aee100f7631362872f39",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit primarily focus on removing the `mapMethodsAccessible` boolean flags and methods related to them from the `ObjectHandler`, `ReflectionObjectHandler`, and `SimpleObjectHandler` classes. This refactoring aims to simplify the code structure, making it cleaner and easier to maintain without any functional changes. The addition of the `areMethodsAccessible` method in all three classes returns false by default, effectively disabling map method access. This change does not impact the functionality or behavior of the code as the default value means that methods other than get(key) will still not be accessible in templates. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "Use a MapGuard when falling back to reflection in maps"
    },
    {
        "repository": "https://github.com/spullara/mustache.java",
        "commit_hash_before": "05261793042ff8e03c5973ce103af84cf13a5402",
        "commit_hash_current": "f0988ebe2b8a57a6f819403a49088b6bff537547",
        "refactoring_type": "pure",
        "justification": "The commit introduces new features like unReflection, unReflectionCached, timeUnReflection, timeUnReflectionCached, timeMH, timeMHCached, and timeDirect. However, these changes do not appear to alter the existing functionality or behavior of the codebase. Instead, they seem to be additions for testing purposes or performance improvements. Therefore, this commit is classified as pure refactoring.",
        "commit_message": "add method handles into the mix"
    },
    {
        "repository": "https://github.com/jingwei/krati",
        "commit_hash_before": "e5a49cb3a9b51094036688ba6904752720dad70e",
        "commit_hash_current": "07d269928d5e9acbee6eda7a525e66d9a806f19d",
        "refactoring_type": "pure",
        "justification": "The commit introduces new classes (AbstractRetentionStoreReader, SimpleEvent) and modifies the existing CompositeRetentionStoreReader to extend AbstractRetentionStoreReader. However, there are no functional changes or bug fixes observed in the provided code diff. The refactoring focuses on improving code structure and readability by organizing the code, renaming variables, and adding new methods without altering the behavior of the original classes.",
        "commit_message": "Reverting RetentionStoreReader as an interface.\n\nAdding AbstractRetentionStoreReader as a placeholder for code reuse."
    },
    {
        "repository": "https://github.com/facebook/facebook-android-sdk",
        "commit_hash_before": "351267aae201...",
        "commit_hash_current": "3df7481f8ea193f750c5b853f68a803c63752511",
        "refactoring_type": "pure",
        "justification": "The commit involves changes to class names and method signatures, as well as restructuring the codebase. However, these changes do not appear to alter the behavior or functionality of the code.",
        "commit_message": "Support active session\n\nSummary:\nThis adds a static Session.getActiveSession(),\nSession.setActiveSession(), and Session.sessionOpen() that manage\na static active session.\n\nThis static session is used by the static Request constructors.\n\nThis also adds a notification mechanism for listening for changes to\nthe active session.\n\nTest Plan:\n- Unit test to validate notification mechanism.\n- Change static Request constructor unit tests to use active session.\n\nRevert Plan:OK\n\nTags:\n\nReviewers: clang, jacl\n\nReviewed By: clang\n\nCC: msdkexp@\n\nDifferential Revision: https://phabricator.fb.com/D536878\n\nTask ID: 1256549"
    },
    {
        "repository": "https://github.com/facebook/facebook-android-sdk",
        "commit_hash_before": "71632e8b95c70ce0e4c35d54e6f0aa622231560c",
        "commit_hash_current": "0b35b0a18ef72e5e04918441faea61d2badefb7d",
        "refactoring_type": "pure",
        "justification": "The commit involves renaming variables and methods, extracting constants, and moving code around but there are no changes in behavior or functionality. This refactoring aims to improve readability and maintainability.",
        "commit_message": "move install publishing into the new Session object, and call it from the entrypoints in the old SDK.\n\nTest Plan: same as before with the old sdk.\n\nReviewers: mmarucheck, mingfli\n\nReviewed By: mmarucheck\n\nCC: clang, jacl, neko-dev@\n\nDifferential Revision: https://phabricator.fb.com/D590426"
    },
    {
        "repository": "https://github.com/facebook/facebook-android-sdk",
        "commit_hash_before": "0b35b0a18ef72e5e04918441faea61d2badefb7d",
        "commit_hash_current": "dd7c22ea26c0a73ffdbc113e9ed3761140a46c45",
        "refactoring_type": "pure",
        "justification": "The commit changes the name of a class from SdkRuntimeTests to SettingsTests and renames some variables, methods, and classes without changing their behavior or functionality. This appears to be a purely organizational refactoring.",
        "commit_message": "rename SdkRuntime -> Settings.\n\nSummary: Rename this so that it's consistent with the iOS SDK.\n\nTest Plan: Everything should build and run as if nothing changed.\n\nReviewers: mmarucheck, vijaye, clang\n\nReviewed By: mmarucheck\n\nDifferential Revision: https://phabricator.fb.com/D593148"
    },
    {
        "repository": "https://github.com/facebook/facebook-android-sdk",
        "commit_hash_before": "dd7c22ea26c0a73ffdbc113e9ed3761140a46c45",
        "commit_hash_current": "84bdb853b13cdbc8ed7423fa2dcbacc5ad8cf838",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit mainly involve file creation, importing new classes, and renaming some variables, methods, and classes without altering their functionality. There are no noticeable behavior or functional changes present. Instead, it appears to be refactoring of the existing files for better organization and improved readability.",
        "commit_message": "Deprecate Facebook.java methods\n\nSummary:\nThe main goal was to deprecate all Facebook functionality other than\ndialog().  Cleaning up warnings came along for the ride, since this\nintroduces new warnings and I was going to clean them up.\n- Deprecates Facebook functionality.\n- Deprecates similar AsyncFacebookRunner functionality.\n- Updates API docs to reflect these.\n- Cleans up remaining warnings across all projects.\n\nTest Plan:\n- Build all samples, including Hackbook\n- Run unit tests\n\nRevert Plan:\n- safe\n\nTags:\n\nReviewers: clang, mingfli\n\nReviewed By: clang\n\nCC: msdkexp@, platform-diffs@lists\n\nDifferential Revision: https://phabricator.fb.com/D601542\n\nTask ID: 1804612"
    },
    {
        "repository": "https://github.com/facebook/facebook-android-sdk",
        "commit_hash_before": "ea06672d1fc2220c638578e668e32c47d767b5c8",
        "commit_hash_current": "b2fa42b8fca13e5f44025fb76b270ef8b9733eb8",
        "refactoring_type": "pure",
        "justification": "The commit consists of refactoring the code to use Gradle's new `build.gradle` format and introducing a custom extension named `FacebookExtension`, which does not appear to change any behavior or functionality of the existing code. The changes are purely structural in nature, moving away from using separate files for each module and merging them into one single `build.gradle` file.",
        "commit_message": "Facebook Android SDK 4.29"
    },
    {
        "repository": "https://github.com/brianfrankcooper/YCSB",
        "commit_hash_before": "5134d46db6b20e5193d97cd24d0df4875aef7f6e",
        "commit_hash_current": "0b024834549c53512ef18bce89f60ef9225d4819",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit involve creating new files and adding code to existing ones, but they do not appear to alter the behavior or functionality of the system. New classes are added (VoldemortBinding, workload_template), a file is created (workloads/workload_template), and modifications are made to pom.xml for version updates. However, there are no changes that would affect the system's output, inputs, or interactions with other components. Thus, it can be classified as pure refactoring.",
        "commit_message": "[core, client] Fix record count property default value in CoreWorkload, also refactor\nthrottle method in client."
    },
    {
        "repository": "https://github.com/brianfrankcooper/YCSB",
        "commit_hash_before": "0b024834549c53512ef18bce89f60ef9225d4819",
        "commit_hash_current": "b634f0cd381575670592664de2ab234f71067df7",
        "refactoring_type": "pure",
        "justification": "The commit introduces two new classes (OneMeasurement and TwoInOneMeasurement) to manage measurements, but there are no changes in the behavior or functionality of the existing code. This refactoring is purely structural, as it simplifies the measurement management without affecting how workloads operate.",
        "commit_message": "[core] - Output intended vs. per-op latency or both\n- Output old histogram or HdrHistogram or both\n- Potentially output HdrHistogram to log file on status interval."
    },
    {
        "repository": "https://github.com/brianfrankcooper/YCSB",
        "commit_hash_before": "b634f0cd381575670592664de2ab234f71067df7",
        "commit_hash_current": "ccff6fc1b24518c5ff755dd839628a95616f4462",
        "refactoring_type": "pure",
        "justification": "The commit makes changes to the code structure and import statements without altering functionality. There are no new features added, bug fixes, or changes to behavior or outputs of methods. The refactored classes retain their original functionality.",
        "commit_message": "[core] Add intended deadline reporting and measurement.\nAdd option for controlling the feature(default on)."
    },
    {
        "repository": "https://github.com/brianfrankcooper/YCSB",
        "commit_hash_before": "ccff6fc1b24518c5ff755dd839628a95616f4462",
        "commit_hash_current": "34d1b8872f2ccd03139e4dea25407968f743055a",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new class TwoInOneMeasurement, which appears to delegate measurements to two other OneMeasurement instances. This change does not seem to alter the functionality or behavior of the existing code and is primarily structural. Therefore, it can be classified as 'pure' refactoring.",
        "commit_message": "[core] Measure intended latency and old latency side by side.\nAdd a joined histogram measuremement to compare old/new histogram\noutputs."
    },
    {
        "repository": "https://github.com/brianfrankcooper/YCSB",
        "commit_hash_before": "e12457434dbc9d625046ac13f255785b711a6129",
        "commit_hash_current": "5113c2e3d2513074fa6e73ea06ad1885ea088e53",
        "refactoring_type": "pure",
        "justification": "The changes in this commit appear to be purely structural, with no functional or behavioral alterations. The code refactors the 'TarantoolClient' class by modifying variable and method names, reorganizing the code structure, and simplifying conditional logic without changing outcomes. This is consistent with examples of 'pure' refactoring as described in the critical guidelines.",
        "commit_message": "StatusCode -> Status\n\nReplaces numeric status codes with a canonical set of Status objects,\neach with a short name and description.\nBindings with more specific errors (e.g., timeouts) return additional\nstatuses.\n\nThis changes the default output from messages like:\n\n   [UPDATE], Return=0, 511\n\nTo:\n\n   [UPDATE], Return=OK, 511"
    },
    {
        "repository": "https://github.com/ps3mediaserver/ps3mediaserver",
        "commit_hash_before": "22f68d8908b23010d69dbacb34d30f3480747938",
        "commit_hash_current": "7b049417d74907ea6b67324df3fe6f9fb4d4d008",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit do not seem to alter the functionality or behavior of the application. The majority of the modifications are related to removing unused imports and reorganizing class hierarchy, which is indicative of 'pure' refactoring.",
        "commit_message": "flag/deprecate unused/misnamed code"
    },
    {
        "repository": "https://github.com/ps3mediaserver/ps3mediaserver",
        "commit_hash_before": "360062d0e70478be88f0db641fc3614eb6a3cc26",
        "commit_hash_current": "761a0632ed76edc62ca87f941572925c453cf1fa",
        "refactoring_type": "pure",
        "justification": "The commit message does not suggest any functional changes or bug fixes. The code changes appear to only include renaming variables, methods, and classes without altering their behavior, extracting methods, reorganizing code structure, and simplifying conditional logic. These are all examples of 'pure' refactoring.",
        "commit_message": "Fix for NullPointerException."
    },
    {
        "repository": "https://github.com/ps3mediaserver/ps3mediaserver",
        "commit_hash_before": "3e686986e290899519e2636444701fa58c2b05f5",
        "commit_hash_current": "7b64473c5aa45409e428133448c936d6033984d2",
        "refactoring_type": "pure",
        "justification": "The commit consists of renaming a variable from 'transcodeVirtualFolder' to 'FileTranscodeVirtualFolder', and changing the message for a specific translation string in 'messages.properties'. These changes do not seem to affect the functionality or behavior of the code.",
        "commit_message": "Transcode folder:\n\t- add entries for audio files\n\t- add missing entries for video files\n\t- add entries for web video and web audio files\n\t- allow the chapter folder prefix to be localized\n\t- hide chapter folders if the duration of the video is less than the chapter length"
    },
    {
        "repository": "https://github.com/ps3mediaserver/ps3mediaserver",
        "commit_hash_before": "a8484b2335ba805cb7c4f7beae9759715c1b7196",
        "commit_hash_current": "e05df78440198cf24d885cf2ca93dbf40eb76886",
        "refactoring_type": "pure",
        "justification": "The commit only contains code reorganization and refactoring, with no changes to functionality or behavior. The methods have been moved from one class to another without altering their functionality, which is an example of pure refactoring.",
        "commit_message": "PmsConfiguration merged with ums"
    },
    {
        "repository": "https://github.com/ps3mediaserver/ps3mediaserver",
        "commit_hash_before": "6e9ed564bc369abfa686e83254110d8e73a148e9",
        "commit_hash_current": "05afe9da9230c7aecc17f6c3d16a53b8c4d09fb3",
        "refactoring_type": "pure",
        "justification": "The commit adds a new test method and refactors some existing methods to handle different subtitle types, but the changes do not seem to alter the functionality or behavior of the original code. The new test method is for converting subtitle timings with UTF-8 conversion and time shifting, while the existing methods are refactored to check for subtitle type support and perform character set conversions.",
        "commit_message": "DLNAResource backports"
    },
    {
        "repository": "https://github.com/geoserver/geoserver",
        "commit_hash_before": "1954fc2bdf931953f7940932b61d19fd7ef2adf4",
        "commit_hash_current": "35457b47a4db24acdae7b217bb3680fe42770ed2",
        "refactoring_type": "pure",
        "justification": "The commit adds new test resources for WMS 1.3 and 1.3.0 capabilities, along with a new WMS endpoint for version 1.3. However, there are no changes to existing functionality or behavior in the code. The existing WMS endpoints remain unaltered, and there are no bug fixes or additional features added. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "[GEOS-5854] Add file browser support for GDAL formats"
    },
    {
        "repository": "https://github.com/geoserver/geoserver",
        "commit_hash_before": "4aa4768fe52d67f5f714a8b46f9ec87cc606c105",
        "commit_hash_current": "2a729ca9790177722fa6152e8e0a70e374626c43",
        "refactoring_type": "pure",
        "justification": "The commit adds a new test class ScaleLineDecorationTest and a related class ScaleRatioDecorationTest, but they do not modify the existing functionality or behavior of the codebase. Instead, these tests are used to verify the scale calculation in the ScaleLineDecoration class, which is already present in the codebase before the commit.",
        "commit_message": "Applying GEOS-5549 to security filter chains"
    },
    {
        "repository": "https://github.com/geoserver/geoserver",
        "commit_hash_before": "bcb3aa18114ffaec4eeaa6c13a2b09e238769789",
        "commit_hash_current": "70fac99ca3b3f9201cf78da54994dd43f628ed78",
        "refactoring_type": "pure",
        "justification": "In the provided code diff, there are no changes that could affect behavior or functionality. The refactoring consists of renaming the variable `serviceType` to `type` across multiple files (CatalogService, GeometryService, and MapService). This does not alter the existing logic or introduce new features, making it a 'pure' refactoring.",
        "commit_message": "Complete Catalog Resource tests"
    },
    {
        "repository": "https://github.com/geoserver/geoserver",
        "commit_hash_before": "ab56a6db198b21a6fb0a4fabce150ffa09d2267d",
        "commit_hash_current": "49b3f3b91ffb9bd824167285a45e1b99d46d0c53",
        "refactoring_type": "pure",
        "justification": "The commit does not introduce any new functionality or change the behavior of existing features. Instead, it seems to be focused on improving organization and readability, such as moving methods between classes and updating some variable names. The changes are purely cosmetic and do not affect the system's operation.",
        "commit_message": "Make it so pluggable GWC formats used for tests don't show up in the UI"
    },
    {
        "repository": "https://github.com/freshplanet/ANE-Facebook",
        "commit_hash_before": "e9a37b7ead9c5a0cf9a784f0aed176824353dd64",
        "commit_hash_current": "2be78795e6a0b27f07d5c3a91c11d2aa8e567d42",
        "refactoring_type": "pure",
        "justification": "The commit introduces new classes FBShareDialogDelegate and FBSDKShareDialog, but they are primarily used for Facebook SDK integration with Adobe AIR. The existing functionalities have not been altered in the provided code changes. The modifications appear to be focused on improving the integration of the Adobe AIR plugin with the Facebook SDK, without affecting its behavior or functionality.",
        "commit_message": "-added some options for IOS FBDefaultAudience, FBLoginBehavior, FBShareDialogMode\n-removed old Android classes\n-added AppInviteActivity, ShareDialogActivity for Android\n-rewritten IOS to support share dialog, fixed login"
    },
    {
        "repository": "https://github.com/freshplanet/ANE-Facebook",
        "commit_hash_before": "2be78795e6a0b27f07d5c3a91c11d2aa8e567d42",
        "commit_hash_current": "9c3fc450bfaa7a951fc0ebe61f935e645cb45b8c",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new method 'initFacebook' without affecting any existing functionality. Furthermore, it includes changes in naming conventions (renaming 'openSessionWithPermissions' to 'logInWithPermissions') and organizing the code structure by separating logging-related functions into a different group. These are all examples of 'pure' refactoring as they do not seem to change the behavior or functionality of the code.",
        "commit_message": "-reworks of API\n-removed unused classes\n-fixed logging"
    },
    {
        "repository": "https://github.com/freshplanet/ANE-Facebook",
        "commit_hash_before": "e9a37b7ead9c5a0cf9a784f0aed176824353dd64",
        "commit_hash_current": "2be78795e6a0b27f07d5c3a91c11d2aa8e567d42",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new class `FBShareDelegate` and implements its methods, but there are no apparent changes to the existing functionality. The code reorganization involves integrating Facebook SDK's share capabilities into the ANE-Facebook plugin without modifying the existing behavior.",
        "commit_message": "-added some options for IOS FBDefaultAudience, FBLoginBehavior, FBShareDialogMode\n-removed old Android classes\n-added AppInviteActivity, ShareDialogActivity for Android\n-rewritten IOS to support share dialog, fixed login"
    },
    {
        "repository": "https://github.com/freshplanet/ANE-Facebook",
        "commit_hash_before": "2be78795e6a0b27f07d5c3a91c11d2aa8e567d42",
        "commit_hash_current": "9c3fc450bfaa7a951fc0ebe61f935e645cb45b8c",
        "refactoring_type": "pure",
        "justification": "The commit primarily refactors the code by renaming functions (init and initFacebook) and adding a new function (setNativeLogEnabled). However, it does not change the behavior or functionality of any existing functions. The refactoring is purely organizational.",
        "commit_message": "-reworks of API\n-removed unused classes\n-fixed logging"
    },
    {
        "repository": "https://github.com/ExtrabiomesXL/ExtrabiomesXL",
        "commit_hash_before": "ea65d1f8306998db052ec16ac694cfabe3294b92",
        "commit_hash_current": "6af20dc4d9c9aca1d07130f8cf2e9198f70625e2",
        "refactoring_type": "pure",
        "justification": "The commit appears to introduce a new class 'EnhancedConfiguration' and modify an existing one ('Configuration') with the purpose of providing more flexible block id assignments. However, it does not seem to change any existing behavior or functionality, as evidenced by the lack of changes in method signatures, variable names, or control flow structures in the provided code diff.",
        "commit_message": "Rewrote Block ID retrieval from configuration so that is would tolerate Forge's forgetfulness in the face of laze initialization."
    },
    {
        "repository": "https://github.com/ExtrabiomesXL/ExtrabiomesXL",
        "commit_hash_before": "6af20dc4d9c9aca1d07130f8cf2e9198f70625e2",
        "commit_hash_current": "a56472741bae66448b315b0cc7c1a5cab3c5e7aa",
        "refactoring_type": "pure",
        "justification": "The commit primarily contains renamings and reorganizations of classes, variables, methods without changing their behavior or functionality. There are no bug fixes, new features added, changes to behavior or outputs, or alterations to method signatures that could affect the code's function.",
        "commit_message": "Added partial fix for ID Resolver compatibility"
    },
    {
        "repository": "https://github.com/ExtrabiomesXL/ExtrabiomesXL",
        "commit_hash_before": "cdbb5d7a0024b89a4225e83db0df25f32c7170fb",
        "commit_hash_current": "c0eeb3a429e1406c062f33bbd70121a1f5296755",
        "refactoring_type": "pure",
        "justification": "The commit mainly consists of adding new texture files for various flowers. However, there are no changes to existing behavior or functionality in the code. The addition of new textures doesn't alter the game logic or flow, so it is classified as 'pure' refactoring.",
        "commit_message": "Groundwork for super floral fun time (#25). WARNING: CRASHES."
    },
    {
        "repository": "https://github.com/ExtrabiomesXL/ExtrabiomesXL",
        "commit_hash_before": "e6e0cbb573de4727fc94303abbe684cf1afb9aad",
        "commit_hash_current": "157512a97c29ba450b49987a65fb5ab807e9ee25",
        "refactoring_type": "pure",
        "justification": "The commit adds new elements to the 'Element' enum, but it does not change any existing functionality or behavior. The code reorganization is purely structural in nature and doesn't alter how the program functions.",
        "commit_message": "Almost there - most flowers render (#25)."
    },
    {
        "repository": "https://github.com/ExtrabiomesXL/ExtrabiomesXL",
        "commit_hash_before": "b78e223bfc8ef8b23add7ccc080e9a5f6607f600",
        "commit_hash_current": "d6deee27d61ee2179fbe5c1d2b91e1275bdf18de",
        "refactoring_type": "pure",
        "justification": "The commit adds new flowers to certain biomes but maintains the existing behavior. This refactoring does not introduce any new functionality or fix bugs, it only reorganizes the code structure for the flower placement in different biomes.",
        "commit_message": "[Fix #36] Added flowers to biomes."
    },
    {
        "repository": "https://github.com/serso/android-calculatorpp",
        "commit_hash_before": "d0fe0ca012b5f6a7036ae8aaeae0dd20c0aa8f1a",
        "commit_hash_current": "3661774d9bbfd607d1d87ba8a704b1e6f199997a",
        "refactoring_type": "pure",
        "justification": "The commit replaces the usage of CalculatorModel with CalculatorLocatorImpl. This is a refactoring change as it does not affect functionality but rather organizes the code and simplifies access to the CalculatorModel instance.",
        "commit_message": "New architecture"
    },
    {
        "repository": "https://github.com/serso/android-calculatorpp",
        "commit_hash_before": "3661774d9bbfd607d1d87ba8a704b1e6f199997a",
        "commit_hash_current": "233c685a49b87798edcf415b3a82450fc5efd3ac",
        "refactoring_type": "pure",
        "justification": "The commit primarily contains code reorganization and structural changes with no apparent functional changes. For example, the method names have been changed from 'junit' to 'Assert', but they perform the same operations. The code also seems to be cleaned up by removing comments and unused imports. No new features were added or existing functionality altered.",
        "commit_message": "New architecture"
    },
    {
        "repository": "https://github.com/serso/android-calculatorpp",
        "commit_hash_before": "233c685a49b87798edcf415b3a82450fc5efd3ac",
        "commit_hash_current": "f03c2496a692afaaea46eeef60bb531f966d9fc7",
        "refactoring_type": "pure",
        "justification": "The commit does not appear to introduce any changes in behavior or functionality. It merely modifies some class variables and imports, reorganizes some methods, and removes unused imports and fields. No new features have been added, no bug fixes are present, and the code structure has been altered without affecting the outcomes.",
        "commit_message": "New architecture"
    },
    {
        "repository": "https://github.com/solovyev-android/calculatorpp",
        "commit_hash_before": "f03c2496a692afaaea46eeef60bb531f966d9fc7",
        "commit_hash_current": "bb2bf70cc24f128db6fd0fde9bc684b8a0aaa85d",
        "refactoring_type": "pure",
        "justification": "The commit primarily contains code restructuring and renaming of variables, methods, and classes. There are no changes in behavior or functionality found in the provided diff. This indicates that it is a 'pure' refactoring.",
        "commit_message": "New architecture"
    },
    {
        "repository": "https://github.com/mariotaku/twidere",
        "commit_hash_before": "936ceb861189a3ae83dcda5567b55e5616f4ec07",
        "commit_hash_current": "5c8e3d8e8d9de3ccf37ff7fb2af73cec1f88e457",
        "refactoring_type": "pure",
        "justification": "The commit adds a new member variable and a long click listener for the TabView. However, it does not seem to change any existing behavior or functionality, as the added long click listener is not currently being used anywhere in the code. The ViewPager's onPageReselected and onPageSelected methods are unchanged, indicating that this refactoring is purely structural.",
        "commit_message": "formatted code."
    },
    {
        "repository": "https://github.com/mariotaku/twidere",
        "commit_hash_before": "a0cb2301adccb53bdea70ecef0b1576257c2fb5e",
        "commit_hash_current": "3cd3131f6407029c7a0911e59d4a37ecd89e8e38",
        "refactoring_type": "pure",
        "justification": "The commit primarily focuses on restructuring the code, with no noticeable changes to behavior or functionality. The method names and the overall structure of the class have been altered, but the way the switch operates remains the same. There are no signs of bug fixes or new features being added.",
        "commit_message": "new notifications implemention.\nremoved \"stop service after close\" option."
    },
    {
        "repository": "https://github.com/mariotaku/twidere",
        "commit_hash_before": "3cd3131f6407029c7a0911e59d4a37ecd89e8e38",
        "commit_hash_current": "b0961144ea26ebdab07f8011495396a62d96cffe",
        "refactoring_type": "pure",
        "justification": "The commit changes the error message display logic in the showErrorToast method to accept a string message instead of an Object error. This is purely a refactoring change as it does not affect the functionality or behavior of the method.",
        "commit_message": "test commit.\nadded rate limit toast notification\nnew popup menu."
    },
    {
        "repository": "https://github.com/mariotaku/twidere",
        "commit_hash_before": "f8c7340592fadd2815d464df2801449552670389",
        "commit_hash_current": "e667dc6d9026f92bf24c8006d21bc21885d731d7",
        "refactoring_type": "pure",
        "justification": "The commit contains changes that restructure the code by adding null checks and adjusting the string formatting in some places. However, none of these modifications appear to alter the behavior or functionality of the code. For example, the addition of null checks simply ensures that the code does not throw a NullPointerException if certain variables are null at runtime. Similarly, the adjustments to string formatting do not change how the strings are processed or used in the application.",
        "commit_message": "some enhancements and fixes."
    },
    {
        "repository": "https://github.com/rhuss/jolokia",
        "commit_hash_before": "63284b0afd3d3bc7cc836f88a9117b753add0e78",
        "commit_hash_current": "cac5e6f57b9f34eb0deb9c8ea1890c1709ab3395",
        "refactoring_type": "pure",
        "justification": "The commit makes a change to the MBeanInfoData.java file, specifically in the handleFirstOrSecondLevel method. The modification includes adding an extra parameter 'canonicalPropertyString' to the method and modifying the existing if condition that uses this new parameter. This refactoring does not seem to have any functional changes as it only modifies the way object names are handled, but it does not alter the logic or behavior of the code. Additionally, there are no new features added, bug fixes, or changes to the behavior of existing methods in other files, which indicates a 'pure' refactoring.",
        "commit_message": "fixed up the remaining list query when no domain is specified along with canonicalProperties=false"
    },
    {
        "repository": "https://github.com/rhuss/jolokia",
        "commit_hash_before": "1ec0f4406f5f22ad9f164904c0e2f0a5c9fe596d",
        "commit_hash_current": "3ac42701620d6aeae43dc0bb33b9b046d24c1fb0",
        "refactoring_type": "pure",
        "justification": "The commit mainly involves renaming packages from 'org.jolokia.agent.service' to 'org.jolokia.service'. Additionally, the reference to Jsr160RequestHandler has also been updated accordingly, which is a purely structural change without affecting the functionality of the code.",
        "commit_message": "Even more moving. Never stand still."
    },
    {
        "repository": "https://github.com/rhuss/jolokia",
        "commit_hash_before": "3ac42701620d6aeae43dc0bb33b9b046d24c1fb0",
        "commit_hash_current": "d3ac228e718ef1db6ab71c5506f40e9b8f81df7b",
        "refactoring_type": "pure",
        "justification": "The commit changes various import statements and renames some classes and methods, but there are no observable changes in behavior or functionality. The code appears to be organized and simplified without altering its original purpose.",
        "commit_message": "Sonar fixes"
    },
    {
        "repository": "https://github.com/rhuss/jolokia",
        "commit_hash_before": "d3ac228e718ef1db6ab71c5506f40e9b8f81df7b",
        "commit_hash_current": "872d59df16c6162e03ff9870aab22df58e2d1e3f",
        "refactoring_type": "pure",
        "justification": "The commit changes the class implementing the LogHandler interface from org.jolokia.core.util.LogHandler to org.jolokia.core.service.LogHandler. This is a refactoring as it does not change any functionality but modifies the structure of the code. The new interface seems to be a replacement or extension of the old one, but there's no indication that the behavior has changed.",
        "commit_message": "Agains some refactoring and started to move the detector stuff into a earlier lifecycle phase."
    },
    {
        "repository": "https://github.com/rhuss/jolokia",
        "commit_hash_before": "872d59df16c6162e03ff9870aab22df58e2d1e3f",
        "commit_hash_current": "0c6924494f111dd0c8b4ae5ffa50cedcba142259",
        "refactoring_type": "pure",
        "justification": "The commit only modifies class names and imports to match the updated artifactId of jolokia-server-core, without altering any functionality or behavior. This is considered a pure refactoring.",
        "commit_message": "Yes, and now the forgotten files."
    },
    {
        "repository": "https://github.com/joscha/play-authenticate",
        "commit_hash_before": "5e574a1516861bbaf98a553ea3e8f0e5e220b58a",
        "commit_hash_current": "cfc1a4d88c102373a24a9fe74033eef7afd8dd3a",
        "refactoring_type": "pure",
        "justification": "The changes made in this commit are purely structural. The class and method names have been modified, but the functionality remains the same. There is no evidence of any behavior or functionality changes in the provided code diff.",
        "commit_message": "Update to deadbolt"
    },
    {
        "repository": "https://github.com/joscha/play-authenticate",
        "commit_hash_before": "3d4e8f992da76ed32a18e5952a9c61a61efc1fc3",
        "commit_hash_current": "02243165f1d9bb47c428921d99bcf16e8a944cfe",
        "refactoring_type": "pure",
        "justification": "The commit adds a new configuration setting for LinkedIn authentication provider, but it does not appear to change the existing behavior or functionality of the application. The LinkedinAuthProvider class is added, but its implementation remains empty. Additionally, the project's build.scala file has been updated to include the new provider in the list of dependencies. However, this refactoring doesn't seem to affect the working of the existing code or introduce any new functionality.",
        "commit_message": "Merge linkedIn from @tonygwu"
    },
    {
        "repository": "https://github.com/joscha/play-authenticate",
        "commit_hash_before": "a3ffbdac680f78a170c99c7071b8967e699167a2",
        "commit_hash_current": "b4b25e10d3c9e732f3ba4f6bc5ff5a13afa4b664",
        "refactoring_type": "pure",
        "justification": "The changes in the provided diff focus on code organization and structure without introducing any apparent functional modifications. For example, adding a new constant variable 'REQUEST_TOKEN' in OAuth2AuthProvider.java does not change the existing functionality. Similarly, in PocketAuthProvider.java, there are additions of import statements for packages, but no changes to behavior or functionality are observed. Additionally, the extraction of code into separate methods such as getRequestTokenParams() and getAuthParams() is a common practice used for improving readability and maintainability, which are structural changes without functional modifications.",
        "commit_message": "Partial commit"
    },
    {
        "repository": "https://github.com/joscha/play-authenticate",
        "commit_hash_before": "c6a28e31099b36cb645df89714ccdffec7fdd5aa",
        "commit_hash_current": "1bffc8c2b2986d96ed5f05c6bb7b37a1508c506a",
        "refactoring_type": "pure",
        "justification": "The commit makes several changes that are considered 'pure' refactorings. For example, it renames constants (Constants.CODE to PocketConstants.REQUEST_TOKEN) and modifies parameter lists for methods without altering their functionality. Additionally, it introduces new helper functions such as encodeParamsAsJson(), which do not change the overall behavior of the code. Furthermore, the changes seem focused on organizing and simplifying the codebase rather than adding or changing functionality.",
        "commit_message": "Moved Pocket constants in PocketAuthProvider, in the abstract class PocketConstants extending Constants. Changed API requests to operate in JSON format. Moved error checking from getAccessToken() to buildInfo().Removed stringifications and substituted them with Json objects in POST body."
    },
    {
        "repository": "https://github.com/joscha/play-authenticate",
        "commit_hash_before": "8eae9233f36d7e516f7e2434b4fee93f037ee7a5",
        "commit_hash_current": "45d831850b86336ff19902831742c717c85a8884",
        "refactoring_type": "pure",
        "justification": "The commit focuses on updating the import statements in multiple files for OAuth2 providers, such as GoogleOAuth2Test.java and FacebookOAuth2Test.java. This change does not seem to affect behavior or functionality as it only modifies the way the classes are imported. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "Test refactoring"
    },
    {
        "repository": "https://github.com/fordfrog/apgdiff",
        "commit_hash_before": "df4842b3ae1901e57bf48d2a0854fb0014b27dbf",
        "commit_hash_current": "031ca83e762852168078be1d39382ed144cb635a",
        "refactoring_type": "pure",
        "justification": "The commit only includes code reorganization and renaming of variables, methods, and classes without changing their behavior or functionality. This is an example of a 'pure' refactoring.",
        "commit_message": "Fixes for Issue: 116"
    },
    {
        "repository": "https://github.com/fordfrog/apgdiff",
        "commit_hash_before": "04f37bbe9e674eda6f32fcbfd97f3d88b5bebe74",
        "commit_hash_current": "644bd334f7e0b9b64c4c0117fe80417dbe85b85f",
        "refactoring_type": "pure",
        "justification": "The commit adds new test cases and sample files for the existing functionality without changing the behavior or adding any new features. This can be considered a pure refactoring as it only restructures code to improve maintainability and readability.",
        "commit_message": "Completed full support, inclduing tests, for default values for columns that only exist in a parent table."
    },
    {
        "repository": "https://github.com/fordfrog/apgdiff",
        "commit_hash_before": "e77137143672ce9ba6fe0c9d5439444a40438a25",
        "commit_hash_current": "75e5d68114d86832e5a685323fbd9a9ae433f3b7",
        "refactoring_type": "pure",
        "justification": "The commit includes refactorings in the code, such as renaming variables, methods, and classes without changing their behavior or functionality. Additionally, it removes unused imports and dead code. These changes do not affect the behavior of the program.",
        "commit_message": "Refactor PgView to use PgColumn for storage of column declaration list, defaults and comments"
    },
    {
        "repository": "https://github.com/fordfrog/apgdiff",
        "commit_hash_before": "bdfc773e45ac00f0cd27e99256103c67c9d4008a",
        "commit_hash_current": "9d440c595d4f51c036826616dd4fde6972c5d94a",
        "refactoring_type": "pure",
        "justification": "The commit removes the AlterViewParser class and renames AlterTableParser to AlterRelationParser, which seems like a pure refactoring as there are no behavior or functionality changes. The code is organized better without any alterations in its operation.",
        "commit_message": "Unify Alter{View,Table}Parser into AlterRelationParser, implement ALTER MATERIALIZED VIEW"
    },
    {
        "repository": "https://github.com/fordfrog/apgdiff",
        "commit_hash_before": "9d440c595d4f51c036826616dd4fde6972c5d94a",
        "commit_hash_current": "b3b7a97af27d3ac99efc5f288f99dd16ed760104",
        "refactoring_type": "pure",
        "justification": "The code diff in this commit shows changes related to refactoring the PgView and AlterRelationParser classes, such as renaming variables, moving and simplifying conditionals without changing their logic. However, there are no functional changes or bug fixes apparent in the provided code differences. Instead, the modifications appear to strictly focus on improving code structure and readability, which indicates that this is a 'pure' refactoring.",
        "commit_message": "Unify ALTER TABLE ... ALTER COLUMN code for views & tables"
    },
    {
        "repository": "https://github.com/benas/easy-batch",
        "commit_hash_before": "9eb6ec8dc277269694fe9452fc4d57cce73fd4ec",
        "commit_hash_current": "d964ebcc10fcc0c4c6e7a0049491e4fb8eda79dc",
        "refactoring_type": "pure",
        "justification": "In the given code diff, there are no changes to behavior or functionality, bug fixes alongside code reorganization, addition of new features while restructuring code, or any other changes that could affect behavior or functionality. The only structural changes include renaming variables, methods, and classes without changing their behavior (e.g., fieldSeparator, enclosingCharacter), extracting methods without altering functionality (e.g., analyseRecord), and reorganizing code structure while maintaining the same behavior. These are all indicative of a 'pure' refactoring.",
        "commit_message": "Refactor record parser to be able to report precisely the error that causes a record to be ignored"
    },
    {
        "repository": "https://github.com/benas/cb4j",
        "commit_hash_before": "cdfe3fe655505fa653581cf7b5d6b4c8c26b2321",
        "commit_hash_current": "2b2bc9e3ddc0538be751ad3a05128b670b2e36f0",
        "refactoring_type": "pure",
        "justification": "The commit only changes the configuration parameters related to data enclosing characters and whitespaces trimming in the documentation, as well as adding a new configuration parameter for handling output data abortOnFirstReject. The codebase itself does not contain any behavior or functionality changes, so this refactoring can be classified as 'pure'.",
        "commit_message": "rename data enclosing character with data qualifier character"
    },
    {
        "repository": "https://github.com/benas/easy-batch",
        "commit_hash_before": "931149510c27010e13606ddedca8a26580622829",
        "commit_hash_current": "63feb42174b00b1a8848b1d299feb52689ed862d",
        "refactoring_type": "pure",
        "justification": "The commit only modifies the config properties to use 'field delimiter' instead of 'field separator'. The change in terminology does not affect the behavior or functionality of the code. It is a simple renaming without changing the underlying implementation, which qualifies it as a pure refactoring.",
        "commit_message": "rename field separator to field delimiter"
    },
    {
        "repository": "https://github.com/benas/easy-batch",
        "commit_hash_before": "8063a7e5080a114093da786db00baea61921fc26",
        "commit_hash_current": "abe9babea1d0054ae2bc33bce0b3feda54f5b6c8",
        "refactoring_type": "pure",
        "justification": "The commit changes the tutorial from using a greeting processor to a tweet processor, but it does not seem to affect the behavior or functionality of the Easy Batch engine. Instead, it appears to be a refactoring aimed at demonstrating the flexibility of the engine by switching the processing pipeline without altering its structure.",
        "commit_message": "add filter chain feature"
    },
    {
        "repository": "https://github.com/benas/easy-batch",
        "commit_hash_before": "9f99bc1bb4100b59aaa5ad16807adec23999e882",
        "commit_hash_current": "8b612816edd47b534af19d93af31010364c0fb3d",
        "refactoring_type": "pure",
        "justification": "The commit introduces new event listeners for different stages of the EasyBatch process (RecordReader, RecordFilter, RecordMapper, RecordValidator, and RecordProcessor). However, these event listeners do not appear to change any existing functionality or behavior, as they are added without modifying the original methods. The main purpose seems to be enhancing the flexibility and extensibility of the library.",
        "commit_message": "Add the missing events for the reader, refactor the EasyBatchEngine and put the step processing into methods for easier reference."
    },
    {
        "repository": "https://github.com/stanfy/enroscar",
        "commit_hash_before": "b18ecaabdf3e59820bfa6f7791b3535a832b7fd7",
        "commit_hash_current": "38c88655baad5e72984700348c1d90b80660fc7a",
        "refactoring_type": "pure",
        "justification": "The commit contains mainly reorganization of code, renaming variables and methods, extracting methods without altering functionality, and simplifying conditional logic without changing the outcomes. The changes do not seem to affect behavior or functionality.",
        "commit_message": "perform check for stop with delay"
    },
    {
        "repository": "https://github.com/stanfy/enroscar",
        "commit_hash_before": "31b363fe29d847cd33be453ddbe682d722027fa0",
        "commit_hash_current": "bb3fb9d77de26545ece1544560d3853b43c3c963",
        "refactoring_type": "pure",
        "justification": "In the provided Git diff, there are no behavioral modifications or bug fixes. The code refactoring includes changing the implementation of `ImagesManager` to implement `InitializingBean` instead of `Bean`, and moving the initialization logic from the constructor to the `onInitializationFinished(BeansContainer beansContainer)` method. These changes only focus on improving code structure, readability, or maintainability without affecting the functionality of the code.",
        "commit_message": "remove static drawable"
    },
    {
        "repository": "https://github.com/searls/jasmine-maven-plugin",
        "commit_hash_before": "89ffc18961d85cdf523a3f58150764e8cef8502d",
        "commit_hash_current": "234c53b41686703029631b6496ddd4ca18fbe3b9",
        "refactoring_type": "pure",
        "justification": "The commit removes the WebDriverConfiguration and WebDriverConfigurationTest classes, which were related to handling custom web drivers and remote web drivers. However, the primary functionality of the plugin remains intact, as it still uses an HtmlUnitDriver by default. This refactoring appears to be a simplification of the code structure without affecting its behavior.",
        "commit_message": "Added PhantomJSDriver artifact.  Added support for capabilities on custom WebDrivers."
    },
    {
        "repository": "https://github.com/searls/jasmine-maven-plugin",
        "commit_hash_before": "234c53b41686703029631b6496ddd4ca18fbe3b9",
        "commit_hash_current": "559483fa83ff96d0591c685129a6bfe1e8210571",
        "refactoring_type": "pure",
        "justification": "The changes in the commit involve restructuring and improving the codebase by refining the implementation of the QuietHtmlUnitDriver, WebDriverFactory, and their related tests. There are no apparent changes to behavior or functionality in the provided diff.",
        "commit_message": "Extracted web driver creation logic into WebDriverFactory and added test coverage."
    },
    {
        "repository": "https://github.com/searls/jasmine-maven-plugin",
        "commit_hash_before": "b7ecbc80aefabc595ccdfdb051f364db3eaa93b9",
        "commit_hash_current": "2f0a963b02ed097d374411a0c6331c0b58b87c80",
        "refactoring_type": "pure",
        "justification": "The code changes appear to be purely organizational, renaming imports and reorganizing test classes without altering their behavior. No new features or functionality have been added, nor any bugs fixed.",
        "commit_message": "renaming CreatesManualRunner to CreatesRunner since it creates all runners now"
    },
    {
        "repository": "https://github.com/searls/jasmine-maven-plugin",
        "commit_hash_before": "2f0a963b02ed097d374411a0c6331c0b58b87c80",
        "commit_hash_current": "9d5c30de1ead079d05e86ac9359c968ba2c5080b",
        "refactoring_type": "pure",
        "justification": "The changes in the commit seem to only restructure existing code without altering its behavior or functionality. For example, new files have been added for Test classes but there are no changes in the main logic. The Jetty Server class has some minor modifications but they don't change the way it functions.",
        "commit_message": "refactoring and adding keepServerAlive parameter to fix issue #149"
    },
    {
        "repository": "https://github.com/searls/jasmine-maven-plugin",
        "commit_hash_before": "9d5c30de1ead079d05e86ac9359c968ba2c5080b",
        "commit_hash_current": "d77d771d1200df3691e961ac4d6a8166819a2642",
        "refactoring_type": "pure",
        "justification": "The commit consists mainly of adding new example projects and updating their associated pom.xml files, with no changes to the functionality or behavior of the existing jasmine-maven-plugin code. The addition of new examples does not affect the original plugin, so this refactoring is classified as 'pure'.",
        "commit_message": "fixes #169; preload sources anywhere in project directory should work now\nfixes #170; parentheses in base directory should be ok now"
    },
    {
        "repository": "https://github.com/AdamBien/lightfish",
        "commit_hash_before": "a42ecad1bbff221102dad0da7e053ae306661eb6",
        "commit_hash_current": "b6c064566a9e5ef24494643b3cf147eaf85842b5",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new class (LogCollectorTestWrap) and tests for the LogCollector class. However, none of these changes appear to affect the existing functionality or behavior of the codebase.",
        "commit_message": "Added ability to pull logs with the snapshots, giving the ability to corelate log entries with snapshots"
    },
    {
        "repository": "https://github.com/loopj/android-async-http",
        "commit_hash_before": "301cc9211ef5a5a9d61780f5ada82f7eaf62c5a3",
        "commit_hash_current": "2d34e1ca3b341356463adae08334d9bb31277b24",
        "refactoring_type": "pure",
        "justification": "The changes in the commit appear to be purely organizational, with no functional or behavioral modifications. The classes have been updated to handle potential HTTPS issues on API versions below ICS, but this does not change their behavior or functionality.",
        "commit_message": "Fixes #14"
    },
    {
        "repository": "https://github.com/loopj/android-async-http",
        "commit_hash_before": "9096a76b0072def5056d7ea170eb202f3a67f87c",
        "commit_hash_current": "be2bac0d4e310106f81c6b50eda94d39cd091ff5",
        "refactoring_type": "pure",
        "justification": "The commit appears to add new resources and files for a new sample project, but it does not seem to change the behavior or functionality of the existing library code. Changes such as creating a new style file, adding strings, and defining new dimensions are common in Android projects when setting up a new sample application.",
        "commit_message": "Fixes #253"
    },
    {
        "repository": "https://github.com/loopj/android-async-http",
        "commit_hash_before": "98ad3955309b365492f97f42df54dae76575601d",
        "commit_hash_current": "9f73dc722fdf8b564bf1487eef395d0b7e4ae862",
        "refactoring_type": "pure",
        "justification": "The changes in this commit are purely structural. The code seems to have been reorganized, including the addition of new resources files and styles.xml files for different API levels. However, none of these changes appear to affect the functionality or behavior of the original code.",
        "commit_message": "Manual merge, Closing #269, #118, Closing #10, Closing #127, #154"
    },
    {
        "repository": "https://github.com/loopj/android-async-http",
        "commit_hash_before": "cc38f5dbcb6cd8ee23215589015087a7ecf7a871",
        "commit_hash_current": "a65c7d64a8ea21a5bb7e5ce97c0e4a6847452b3b",
        "refactoring_type": "pure",
        "justification": "The commit primarily focuses on reorganizing the codebase by moving from AsyncHttpResponseHandler to TextHttpResponseHandler in the sample project. This change does not seem to affect the functionality or behavior of the existing code as it is simply changing the handling class used for HTTP responses.",
        "commit_message": "Clean rebase for proposed changes"
    },
    {
        "repository": "https://github.com/loopj/android-async-http",
        "commit_hash_before": "a65c7d64a8ea21a5bb7e5ce97c0e4a6847452b3b",
        "commit_hash_current": "6fe5ce640634c2d11d7828fabf706b7977f03674",
        "refactoring_type": "pure",
        "justification": "The commit adds a new class TextHttpResponseHandler, which provides an alternative way to handle responses from requests made using AsyncHttpClient. However, it does not alter the behavior or functionality of the existing classes and methods. The changes in the existing code are primarily structural and organizational, such as creating a new package for the TextHttpResponseHandler class.",
        "commit_message": "Refactor preserving call chain for backward compatibility"
    },
    {
        "repository": "https://github.com/psiegman/epublib",
        "commit_hash_before": "ba2a9bd37f4839fe9b101dabe55cec16f15662c3",
        "commit_hash_current": "805ddea206f09c4805a10fb0ea34e7c5407daff3",
        "refactoring_type": "pure",
        "justification": "The code changes in the diff are purely structural. The original code was assigning `this.data` directly from the IOUtil method without a variable (`readData`) to hold the data being read first. In the refactored version, the data is stored temporarily in `readData` before assignment to `this.data. This change does not modify the behavior or functionality of the code and serves only to improve the code structure for better readability.",
        "commit_message": "Extra check"
    },
    {
        "repository": "https://github.com/psiegman/epublib",
        "commit_hash_before": "805ddea206f09c4805a10fb0ea34e7c5407daff3",
        "commit_hash_current": "47046806afaf657180e4ca7bd34a786b2ed746fe",
        "refactoring_type": "pure",
        "justification": "The changes made are strictly structural and do not appear to have any functional impact or behavior modifications. New imports were added for the updated implementation of `getResourceStream()` method, but they do not change existing behavior. The `getInputStream()` method was refactored, but it still returns an input stream for the resource. A new `initialize()` method was added to initialize the resource, but it does not seem to have any impact on existing functionality since the data is already being loaded within the `getInputStream()` method before its addition. A separate `getResourceStream()` method was created to get the ZipInputStream for the resource file, which helps with code organization and readability without changing behavior.",
        "commit_message": "Adds support for ePubs with large resources that don't fit into memory.\n\nConflicts:\n\n\tepublib-core/src/main/java/nl/siegmann/epublib/domain/Resource.java"
    },
    {
        "repository": "https://github.com/psiegman/epublib",
        "commit_hash_before": "47046806afaf657180e4ca7bd34a786b2ed746fe",
        "commit_hash_current": "f681c401d39249160ec4ad452ca68ea5d83abd17",
        "refactoring_type": "pure",
        "justification": "In this commit, the changes made are purely structural. The ZipInputStream has been replaced with a ZipFile to read and access resources in an epub file. This change does not affect the behavior or functionality of the code as it only alters how the resource stream is obtained. Additionally, a new class ResourceInputStream has been introduced as a wrapper for closing the ZipFile object when the InputStream derived from it is closed, which again is a structural change and doesn't affect the functionality.",
        "commit_message": "Otpimized the way the zip entry of a lazy loaded Resource is found in the epub file.\n\nConflicts:\n\n\tepublib-core/src/main/java/nl/siegmann/epublib/domain/Resource.java"
    },
    {
        "repository": "https://github.com/mitreid-connect/OpenID-Connect-Java-Spring-Server",
        "commit_hash_before": "a723c9d921046540d387a66552f45a89a6422918",
        "commit_hash_current": "e708f77eb311d984e07ae4cb70bd3b97cfee71d9",
        "refactoring_type": "pure",
        "justification": "The commit only contains code reorganization and naming changes without altering functionality or behavior. There are no new features, bug fixes, or changes to existing behavior.",
        "commit_message": "Fixed up OIDC code so that it runs with new SECOAUTH changes; removed old AuthorizationRequestImpl class which is no longer needed"
    },
    {
        "repository": "https://github.com/mitreid-connect/OpenID-Connect-Java-Spring-Server",
        "commit_hash_before": "9db81199300a90991c6b295751732a0fe63b0a98",
        "commit_hash_current": "a79aca906ef3f5e1ebf28dbc0197e04855adf04e",
        "refactoring_type": "pure",
        "justification": "The commit contains refactorings that only modify variable and method names, extract methods without changing functionality, and simplify conditional logic without affecting the behavior. No new features or bug fixes are introduced, which indicates this is a pure refactoring.",
        "commit_message": "Fixed error logging; added ApprovedSite tracking to tokens"
    },
    {
        "repository": "https://github.com/mitreid-connect/OpenID-Connect-Java-Spring-Server",
        "commit_hash_before": "c80b1081cc17a54795949c8aeec52c709f1d9af0",
        "commit_hash_current": "1e24b31cc387e7a023032f8bc46aecac801049bb",
        "refactoring_type": "pure",
        "justification": "The commit seems to only be renaming the AuthorizationRequestManager bean class from 'ConnectAuthorizationRequestManager' to 'ConnectOAuth2RequestManager', which is a pure refactoring as it does not change the behavior or functionality.",
        "commit_message": "Propogating rename of AuthorizationRequest to OAuth2Request"
    },
    {
        "repository": "https://github.com/mitreid-connect/OpenID-Connect-Java-Spring-Server",
        "commit_hash_before": "713f0a4d253caa6fa76c8f9e7524ff84538193c1",
        "commit_hash_current": "76e5ff805317b21f97b0f9237953d34e9bdd368c",
        "refactoring_type": "pure",
        "justification": "The changes in the code diff focus primarily on refactoring, specifically replacing the implementation of OAuth2RequestManager with OAuth2RequestFactory. This change does not seem to affect the behavior or functionality of the application as it simply swaps one interface implementation for another. The removal of InvalidScopeException import and the corresponding overridden method validateParameters suggest that this is a structural modification without changes to the original functionality, which makes it a 'pure' refactoring.",
        "commit_message": "Finished cleanup, ready to create pull request"
    },
    {
        "repository": "https://github.com/mitreid-connect/OpenID-Connect-Java-Spring-Server",
        "commit_hash_before": "76e5ff805317b21f97b0f9237953d34e9bdd368c",
        "commit_hash_current": "530c3a75eea5e3665aa6dc2bbb678474d48aacd7",
        "refactoring_type": "pure",
        "justification": "The commit changes the reference of 'oAuth2RequestManager' bean from 'ConnectOAuth2RequestManager' to 'ConnectOAuth2RequestFactory'. However, this change does not seem to affect the behavior or functionality of the code as both classes are presumably responsible for managing OAuth2 authorization requests.",
        "commit_message": "Applyed refactoring"
    },
    {
        "repository": "https://github.com/twilio/twilio-java",
        "commit_hash_before": "244b819ff10431b91f628d764735f4609801245a",
        "commit_hash_current": "cfed7644212ca0666edb5fa04bdc9af0a9925be8",
        "refactoring_type": "pure",
        "justification": "The Git diff shows changes in the AUTHORS file, which is a list of contributors. This change does not affect the source code structure or behavior. In the TwilioUtils.java file, there are some minor cosmetic changes such as adding an import statement for java.io.UnsupportedEncodingException and moving the initialization of the mac object to a new line, but these changes do not alter the functionality of the validateRequest method. The method getDateCreated(), getDateUpdated(), and getDateSent() in the Sms class have also been refactored to use a common parseDate utility method, which simplifies the code and makes it more consistent. However, this change does not affect the behavior or functionality of the SMS messages. Therefore, the commit can be classified as 'pure' refactoring.",
        "commit_message": "Added method \"getValidationSignature\" to TwilioUtils and re-routed validatRequest to use this method.\n\nThis will allow users of the helper library to more easily test Twilio request security through access to the hashed string, while still supporting the validateRequest method for those who don't need deeper integration."
    },
    {
        "repository": "https://github.com/twilio/twilio-java",
        "commit_hash_before": "f90187ee2aa9a362df7ca82ce548e0e8f88c85a1",
        "commit_hash_current": "6928408cef5df7a3b8ba25d11a87c0a31988c931",
        "refactoring_type": "pure",
        "justification": "The code changes in the commit consist of renaming variables, methods, and classes without altering their behavior. Also, there are no new features added or bug fixes that might affect functionality. Thus, the refactoring can be classified as 'pure'.",
        "commit_message": "Use List<NameValuePair> for create"
    },
    {
        "repository": "https://github.com/twilio/twilio-java",
        "commit_hash_before": "cf6c4e1380f0193d5b2b1afb41a247cc3ca5fee0",
        "commit_hash_current": "955425f0ba1e46c90cf011d3032218eb31111135",
        "refactoring_type": "pure",
        "justification": "The code changes are purely structural, renaming variables and constants, reorganizing imports and adding a new class. There are no functional or behavioral changes as a result of these modifications.",
        "commit_message": "move date parsing to InstanceResource"
    },
    {
        "repository": "https://github.com/twilio/twilio-java",
        "commit_hash_before": "955425f0ba1e46c90cf011d3032218eb31111135",
        "commit_hash_current": "6928408cef5df7a3b8ba25d11a87c0a31988c931",
        "refactoring_type": "pure",
        "justification": "The commit involves changes to class names, variable names, method names, and some code reorganization without changing the functionality or behavior of the code. This is considered a pure refactoring as it doesn't affect the output or functionality.",
        "commit_message": "Use List<NameValuePair> for create"
    },
    {
        "repository": "https://github.com/twilio/twilio-java",
        "commit_hash_before": "e66ba1f838d41263d071d31e907bcc4440c91c41",
        "commit_hash_current": "e4ec64c6e6ff2a5ce8bf49f7131989113b84a798",
        "refactoring_type": "pure",
        "justification": "The commit adds a new class CallResult and refactors the existing CallTest class to use URI instead of URL for making calls. However, it does not change any functional behavior or add new features. Therefore, this is classified as 'pure' refactoring.",
        "commit_message": "Working on the ResultSet implementation, it's close but icky"
    },
    {
        "repository": "https://github.com/http-kit/http-kit",
        "commit_hash_before": "d789b6f59b00ae8388ac3791fc92bd0584760ed5",
        "commit_hash_current": "4ae574a023e8883fe63a7aaf93d589ca978e7d6e",
        "refactoring_type": "pure",
        "justification": "The changes made in the commit appear to be primarily organizational, with no discernible impact on functionality or behavior. The additions of new files (server_test.clj and ws_test.clj) and modifications to existing ones (server.clj and server_test.clj) are likely aimed at expanding test coverage for different aspects of the project, such as WebSocket support and HTTPS servers for testing purposes. The absence of changes in method signatures or behavioral alterations supports the classification of this commit as 'pure' refactoring.",
        "commit_message": "try to support HTTPS (WIP)"
    },
    {
        "repository": "https://github.com/http-kit/http-kit",
        "commit_hash_before": "04434d3ff3239052725f694350b466540f7da9c1",
        "commit_hash_current": "0286c24fbffe91417b80a58547984adea3924403",
        "refactoring_type": "pure",
        "justification": "The code diff shows the replacement of Java's TreeMap with Ring's HeaderMap and a minor refactor of the ByteBuffer[] encoding method. These changes do not alter the functionality or behavior of the code, and are purely structural. There are no bug fixes or new features added, making this a 'pure' refactoring.",
        "commit_message": "TreeMap => HeaderMap: save a few bytes of memory: no Map.Entry; a little faster"
    },
    {
        "repository": "https://github.com/square/android-times-quare",
        "commit_hash_before": "34821d5a88a5d8651d7af9ac1e2afac67d76065b",
        "commit_hash_current": "e7ea65bd8a3a6ebb8c28f12e13797ab3ee95da30",
        "refactoring_type": "pure",
        "justification": "The commit includes several structural changes, such as renaming a variable (`SelectionMode`) and adding an enum for its value. However, there are no functional changes or bug fixes apparent in the provided code diff. Additionally, the removed file `com/squareup/timessquare/SelectionMode.java` also indicates a clean-up or reorganization of the code without affecting functionality.",
        "commit_message": "Corrected indention and put Selectionmode in CalendarpickerView"
    },
    {
        "repository": "https://github.com/DroidPlanner/droidplanner",
        "commit_hash_before": "9ca3ef41c5db0886ea5636172a3639146f0c4618",
        "commit_hash_current": "0d7412f34f571961e1dac85598fa3758c6c91505",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new class MavLinkMsgHandler that handles the reception of data from the drone. However, it does not change any existing functionality or behavior. Instead, it separates the handling of incoming data from the Drone class, potentially making the code more modular and maintainable. There are no changes to method signatures, parameters, or outputs.",
        "commit_message": "Moving all the Mavlink msg handling to a new class."
    },
    {
        "repository": "https://github.com/DroidPlanner/droidplanner",
        "commit_hash_before": "0aa95cc2f86a3a35999bf7b6f75c8373fc97d9ad",
        "commit_hash_current": "73fe72019682145d212380ba5cd782a5b9f0446c",
        "refactoring_type": "pure",
        "justification": "In the provided code diff, there are only structural changes and no functional modifications. The addition of a new TextView in parameters.xml does not affect the functionality of the application. In DroidPlannerApp.java, the removed `onParametersReceived` method is replaced with a new one that simply passes the received parameters to an `OnParameterManagerListner` if it's set. This does not change the behavior of the existing code. The changes in ParametersActivity.java involve adding a TextView and implementing the OnParameterManagerListner interface, but these changes do not affect the functionality of the existing methods or introduce new features. Thus, this commit is classified as 'pure' refactoring.",
        "commit_message": "List to show all the received parameters."
    },
    {
        "repository": "https://github.com/DroidPlanner/droidplanner",
        "commit_hash_before": "73fe72019682145d212380ba5cd782a5b9f0446c",
        "commit_hash_current": "66edde043e9e7fddd3e9cde47fcb9c6af6d6b2a2",
        "refactoring_type": "pure",
        "justification": "The commit adds a new class named 'Parameter' in the MAVLink package, but it only introduces data fields for name, value, type, and index without any behavior changes. Additionally, the DroidPlannerApp and ParametersManager classes were modified to use the newly added Parameter class instead of List<String>, however, the functionalities remain the same. The changes are strictly structural with no functional changes, hence classified as 'pure' refactoring.",
        "commit_message": "New Parameter class to store a parameter."
    },
    {
        "repository": "https://github.com/DroidPlanner/droidplanner",
        "commit_hash_before": "9d7ddd2fece71eb7dad86b51feeed12655d0bb49",
        "commit_hash_current": "e4cca383c7d458b22fca0a9574c31549713b9da4",
        "refactoring_type": "pure",
        "justification": "The commit appears to change the way classes are referencing the Drone object, replacing 'Drone' with 'drone'. However, there are no changes in behavior or functionality that suggest this is anything other than a pure refactoring effort.",
        "commit_message": "Refactoring: Removing last variable in Drone class to a subclass."
    },
    {
        "repository": "https://github.com/MachineMuse/MachineMusePowersuits",
        "commit_hash_before": "63ddd5b0a6bb37eab647be96d38309c35f6e9e3e",
        "commit_hash_current": "4d4b73146cfda2f8e3d1b55ebd64cc200b8cc579",
        "refactoring_type": "pure",
        "justification": "The commit adds new classes (ApiaristArmorModule and GrafterModule) that extend a base class (PowerModuleBase). These new classes don't seem to change the existing behavior of the codebase, but rather provide new modules for the power armor and tool system. The existing classes remain unchanged, and the refactoring appears to be purely organizational in nature.",
        "commit_message": "Migrated Grafter and Apiarist Armor modules to MPS from MPSA."
    },
    {
        "repository": "https://github.com/mpcjanssen/simpletask-android",
        "commit_hash_before": "2073bbc12fe6733b9dc59a181fa141d8e1de5cba",
        "commit_hash_current": "123e0006151db2676eea4e0df3aa2edc5282a563",
        "refactoring_type": "pure",
        "justification": "The commit appears to only contain changes in structure and organization of the code, with no apparent changes to behavior or functionality. There are no new features added, no bugs fixed, and no changes to method signatures or outputs that would indicate a functional change.",
        "commit_message": "Also show newly added contexts and tags when adding multiple tasks\n\nFossilOrigin-Name: 29fd8554fbc69f904964aacf4b43443e3a39885c50ed76bfa2db20336ea1ef85"
    },
    {
        "repository": "https://github.com/mpcjanssen/simpletask-android",
        "commit_hash_before": "e65892597177c592f9e355ba749b9e030c0ecdb6",
        "commit_hash_current": "436536d926e8948b11d3aa5650e181a51a0ac056",
        "refactoring_type": "pure",
        "justification": "The commit modifies the DropboxFileDialog constructor to accept an additional boolean parameter 'txtOnly'. However, there is no evidence in the provided code changes that this affects any behavior or functionality. Instead, it appears to be a pure refactoring by adding a new option for filtering the file list based on '.txt' files.",
        "commit_message": "Add setting to only show txt files in file dialog\n\nFossilOrigin-Name: 231b837ecb3131cdfb11a0fd0bf05df58b6c37573f9484f2d913f93859ef527d"
    },
    {
        "repository": "https://github.com/mpcjanssen/simpletask-android",
        "commit_hash_before": "5befa813ed62d4da2ced5793b143fc0e28537aa4",
        "commit_hash_current": "f8f65506de74c33b3e3b80e0658c86b281a2623e",
        "refactoring_type": "pure",
        "justification": "The commit introduces no changes to behavior or functionality, instead it modifies the code structure such as renaming variables and methods without altering their purpose. There are also additions of new lines and comments but they do not impact the functionality.",
        "commit_message": "Fix crashes\n\nFossilOrigin-Name: ecc748397857ad5f701933fde4030d560e94ebe763a3abe1d09b5313c498667f"
    },
    {
        "repository": "https://github.com/mpcjanssen/simpletask-android",
        "commit_hash_before": "f8f65506de74c33b3e3b80e0658c86b281a2623e",
        "commit_hash_current": "ddeb76b09b9143075fe8f253c68e79b73451aa78",
        "refactoring_type": "pure",
        "justification": "The commit introduces changes to the code structure, specifically by adding a new interface FileStoreInterface and updating other related interfaces. However, there is no visible change in behavior or functionality as indicated by the absence of any bug fixes, new features, or changes to existing method signatures. Instead, it seems that the authors have refactored the code for better organization and potential future improvements.",
        "commit_message": "Added archiveing\n\nFossilOrigin-Name: 7fbe9ead029c1846b6ff5cf1e8d24bfcff039b6954290cda1c68a53a075ebcb4"
    },
    {
        "repository": "https://github.com/mpcjanssen/simpletask-android",
        "commit_hash_before": "160b11cf7b65ebf0433dc989984210f5ecededa7",
        "commit_hash_current": "8c38cb1d7a5fdddd54033614447d460736a22508",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new `FileChangeListener` interface in the FileStoreInterface.java and updates MultiComparator.java to accept an additional List<Task> parameter. However, these changes do not seem to affect the functionality or behavior of the code as they are purely structural. The MultiComparator is now capable of sorting tasks based on a given list of tasks instead of the entire task list, but this doesn't change the outcome of the sorting. Additionally, the FileChangeListener interface allows for further potential functionality but it does not appear to be used in the provided code.",
        "commit_message": "Refactored Dropbox version as well\n\nFossilOrigin-Name: 50336816828d02e41a2ffaec36ea711fde8c62a5b1994d3a2633fcda64fa847f"
    },
    {
        "repository": "https://github.com/robo-code/robocode",
        "commit_hash_before": "43db7f6adebf7ad1b1ea3c0304e21950dc82a4aa",
        "commit_hash_current": "76bc49cbd608cb9a390f82b25871aa2592f51454",
        "refactoring_type": "floss",
        "justification": "The commit introduces a new feature for the Robocode Editor, allowing users to change the font, text colors and styles. It also includes changes to existing classes such as the Editor class, ThemeConfigurator class, and the property files for editor themes. These changes are not purely structural, but rather have an impact on the functionality of the Robocode Editor.",
        "commit_message": "Bug-363: No Last Survivor Bonus being given."
    },
    {
        "repository": "https://github.com/robo-code/robocode",
        "commit_hash_before": "07adc84cba0ed3d48425a5537447c2a69fd7cce0",
        "commit_hash_current": "da6d07520e581cdaa6420ac228cf86d1eb9cb883",
        "refactoring_type": "pure",
        "justification": "The commit adds input validation to text fields in the UI for Battle Rules, but it does not seem to affect the functionality or behavior of the existing code. It is purely a refactoring effort to improve the robustness and user experience.",
        "commit_message": "BorderSentry robots will not receive any scores on the Rankings Panel nor Scoring Results, when the game has ended."
    },
    {
        "repository": "https://github.com/MasDennis/Rajawali",
        "commit_hash_before": "76b72357113a3d22730cf641c593e59555cd599d",
        "commit_hash_current": "0c8dc09696d963bc699a37111022a6a3900b86eb",
        "refactoring_type": "pure",
        "justification": "The commit adds two new classes (RenderTarget and RenderTargetCube) to the Rajawali library, but there are no changes to the existing behavior or functionality. The code changes primarily consist of method definitions and variable declarations, without any modifications to existing methods or classes.",
        "commit_message": "Removed BoundingFrustum, it serves no legitimate purpose. \n\nSigned-off-by: Jared Woolston <jwoolston@tenkiv.com>"
    },
    {
        "repository": "https://github.com/MasDennis/Rajawali",
        "commit_hash_before": "0c8dc09696d963bc699a37111022a6a3900b86eb",
        "commit_hash_current": "e1630252c335346abe71c1e30776ebb6ce38cb9b",
        "refactoring_type": "pure",
        "justification": "The commit involves renaming packages and classes from 'rajawali.scenegraph' to 'rajawali.scene.scenegraph'. This change does not alter the behavior or functionality of the code, but rather restructures it for better organization and readability.",
        "commit_message": "Still trying to get frustums to draw.\n\nSigned-off-by: Jared Woolston <jwoolston@tenkiv.com>"
    },
    {
        "repository": "https://github.com/MasDennis/Rajawali",
        "commit_hash_before": "a86636fbdbf24146c527758227df559af11c0ff6",
        "commit_hash_current": "2060881705a130f85a10066f216000c1b1119c31",
        "refactoring_type": "pure",
        "justification": "The commit primarily contains structural changes in the code without any apparent alterations to functionality or behavior. This includes renaming variables, creating a new method for printing matrix strings, and adding a new method to check if a quaternion is identity. These changes do not seem to impact the application's functionality.",
        "commit_message": "View Frustum now draws correctly. Further testing is needed. Also need\nto impliment local axis rotations."
    },
    {
        "repository": "https://github.com/MasDennis/Rajawali",
        "commit_hash_before": "8085641b081f7f857f348fbd72706e7081823e96",
        "commit_hash_current": "22eb239e903f501a7ffdb86cbc259c6f85ddac47",
        "refactoring_type": "pure",
        "justification": "The commit focuses on renaming classes and interfaces related to bounding volumes from Rajawali, changing them from 'IBoundingVolume' to 'volumes.IBoundingVolume'. Additionally, the package structure for these classes has been modified slightly. These changes do not appear to alter the functionality or behavior of the code.",
        "commit_message": "Working on bounding volume culling. Refactored bounding volumes from\nrajawali.bounds package to rajawali.bounds.volumes.\n\nSigned-off-by: Jared Woolston <jwoolston@tenkiv.com>"
    },
    {
        "repository": "https://github.com/MasDennis/Rajawali",
        "commit_hash_before": "22eb239e903f501a7ffdb86cbc259c6f85ddac47",
        "commit_hash_current": "5a89c9724a581b928b0b23b7c68d0ab07cfaef49",
        "refactoring_type": "pure",
        "justification": "The commit appears to be a refactoring effort aimed at improving the structure and organization of the code without making any changes to its functionality or behavior. The changes made are primarily reorganizing existing code, renaming variables, methods, and classes, and simplifying conditional logic. There are no additions of new features, bug fixes, changes to behavior or outputs, or alterations in method signatures that could affect the functionality.",
        "commit_message": "Refactored code to use BoundingVolumeTester class. Removed\nIBoundingVolume#intersectsWith(IBoundingVolume) method.\n\nSigned-off-by: Jared Woolston <jwoolston@tenkiv.com>"
    },
    {
        "repository": "https://github.com/ManuelPeinado/FadingActionBar",
        "commit_hash_before": "ac2b9b0f26ce12537f34a92420c9def594cdcd8f",
        "commit_hash_current": "b0c5f198fcff96feb5937bf0276b97734c2b7016",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new layout for the ListView in the sample project, but it does not change any behavior or functionality. The cacheColorHint attribute is added to the ListView, but this is a cosmetic change and does not affect the underlying logic of the code. The other changes are purely organizational, such as moving the OnScrollListener implementation from the main activity to the FadingActionBarHelper class, which simplifies the activity's code without changing its behavior.",
        "commit_message": "finished implementation of parallax effect"
    },
    {
        "repository": "https://github.com/cbeust/jcommander",
        "commit_hash_before": "c33b76dbfdf2598d608e3ac717db5fee7ed60b0c",
        "commit_hash_current": "8fb64e420f06a953e95414413c2a4d0f05db130c",
        "refactoring_type": "pure",
        "justification": "The commit primarily consists of removing unnecessary files and folders. There are no changes to behavior or functionality, and no new features have been added. The refactoring appears to be aimed at cleaning up the codebase and improving its organization.",
        "commit_message": "Updated support for disabling the @/ampersand/at expansion\n\n- renamed expandAmpersat to expandAtSign\n- added tests for both enabled/disabled scenarios"
    },
    {
        "repository": "https://github.com/cbeust/jcommander",
        "commit_hash_before": "9c558c9576bb1d015f331ce69f621a56b6abbf56",
        "commit_hash_current": "a86f998a3d792a6a84b87ae5e4c100df7d3379df",
        "refactoring_type": "pure",
        "justification": "The commit introduces changes that are purely structural without affecting the functionality of the code. The code refactors the test cases to accommodate a new method for adding custom instance converter factories, but this does not alter any existing behavior or introduce new features. Additionally, the main class's method for parsing arguments is modified to clear the converter factories before each test case, but this simply ensures that previous tests do not interfere with subsequent ones.",
        "commit_message": "Add IStringConverterInstanceFactory\n\nThis factory returns instances of string converters. See #196."
    },
    {
        "repository": "https://github.com/cbeust/jcommander",
        "commit_hash_before": "a86f998a3d792a6a84b87ae5e4c100df7d3379df",
        "commit_hash_current": "c4532fde79808d231e7b8c6fe330655c7d91638f",
        "refactoring_type": "pure",
        "justification": "The code changes appear to be focused on structural refactoring, specifically improving the handling of main parameters for HostPort and adding support for new parameter types in the test suite. These changes do not alter the functionality or behavior of the existing codebase.",
        "commit_message": "Share options with sub commands"
    },
    {
        "repository": "https://github.com/cbeust/jcommander",
        "commit_hash_before": "c4532fde79808d231e7b8c6fe330655c7d91638f",
        "commit_hash_current": "f9110df18a0e6f6ee527ef852f65e04dd2c6bbc2",
        "refactoring_type": "pure",
        "justification": "The changes in this commit mainly involve the addition of a new method and its usage, but they do not seem to affect the existing functionality or behavior of the code. The new method adds a 'validate' flag to the 'addValue' function in the ParameterDescription class, which allows for optional validation when adding values. However, this change does not modify any existing functionality, and instead provides an additional option for the users. Therefore, I would classify this commit as 'pure' refactoring.",
        "commit_message": "Thread-safe and non-shared converter factories\n\nMakes converter factories thread-safe and non-shared across commander instances.\n\nFixes #278"
    },
    {
        "repository": "https://github.com/cbeust/jcommander",
        "commit_hash_before": "20a592e6ae75cdb6bc4d0d8323ece7f2c49fb9f0",
        "commit_hash_current": "abdf7f524c1621233797345b0470769359f689e7",
        "refactoring_type": "pure",
        "justification": "The commit adds three new classes: DefaultListConverter, EnumConverter, and ArgsEquals. However, these additions do not change any existing functionality or behavior within the JCommander class. Instead, they expand upon it by providing additional converter options for handling lists, enums, and equal signs in arguments respectively. While these changes enhance the library's functionality, they are structural improvements that do not affect the original codebase's core functioning.",
        "commit_message": "Refactor/streamline value conversion\n\nIn addition, this fixes #162, #266."
    },
    {
        "repository": "https://github.com/nathanmarz/storm",
        "commit_hash_before": "b88a81e80d6e731abee655a31a253deed803e48d",
        "commit_hash_current": "f9cf61d75e49305e41e06736f1dd75f4c7c2abfa",
        "refactoring_type": "pure",
        "justification": "The commit adds new classes and methods for validating config fields, but none of these changes seem to affect the behavior or functionality of the existing code. The existing test cases are updated to use the newly added validation classes, but the behavior of the tests remains unchanged.",
        "commit_message": "Move validators to own file, add tests\n\nOther cosmetic changes."
    },
    {
        "repository": "https://github.com/RobotiumTech/robotium",
        "commit_hash_before": "4b7f32dbe7f51425210141b3b150d077c2216093",
        "commit_hash_current": "0fd325e2102e171d2980bbb8c9b5935e3dffd0d5",
        "refactoring_type": "pure",
        "justification": "The commit mainly involves renaming variables, methods, and extracting methods without changing their behavior. There are no changes that could affect the functionality or behavior of the codebase.",
        "commit_message": "Refactored and improved hideSoftKeyboard()"
    },
    {
        "repository": "https://github.com/jhy/jsoup",
        "commit_hash_before": "35407bb1557e2ee11e27cff552d561b3d83266ae",
        "commit_hash_current": "a0bd16891705bf4087e0766d744a009ac923b5f3",
        "refactoring_type": "pure",
        "justification": "The commit introduces new classes and methods for handling CSS selectors, but it does not appear to change the behavior or functionality of the existing code. Instead, it seems to be an organization and implementation refactoring aimed at improving the codebase structure.",
        "commit_message": "1. rename methods and variables\n2. extend javaDoc"
    },
    {
        "repository": "https://github.com/jhy/jsoup",
        "commit_hash_before": "245b2655f7a28ca46912e35de492d3e452a5393f",
        "commit_hash_current": "4770715fb67e1d40259c14280742859d5eeaaec5",
        "refactoring_type": "pure",
        "justification": "In the provided Git diff, there are no changes to behavior or functionality in the HttpConnection.java file. The changes made involve moving a line of code related to setting the SSLSocketFactory for HttpsURLConnection, which is purely structural in nature and does not impact the functional behavior of the code. Additionally, there are no other functional changes observed in the diff. This classification is based on the criteria mentioned in your guidelines.",
        "commit_message": "1. restructure tests\n2. autostyle methods"
    },
    {
        "repository": "https://github.com/jhy/jsoup",
        "commit_hash_before": "119fd967ba85924a5fe0d93e2f9fad3fe068c6fa",
        "commit_hash_current": "a76f2e9fa14185dae1e96ae2561e3ff07c966e11",
        "refactoring_type": "pure",
        "justification": "The changes in the diff focus exclusively on code structure, readability, and maintainability. For example, the `Method` enum has been extended to include additional methods (PUT, DELETE, PATCH) without changing their behavior or adding new functionality. Additionally, a new constant for 'FORM_URL_ENCODED' content type has been added in HttpConnection.java to match the existing MULTIPART_FORM_DATA. There are no visible bug fixes or changes to functionality in the provided diff.",
        "commit_message": "Support for PUT, DELETE, PATCH"
    },
    {
        "repository": "https://github.com/jhy/jsoup",
        "commit_hash_before": "da9547ebcd83525723fca18997a5a7e058c9796f",
        "commit_hash_current": "174dca2cb3e2c860fc947a963ea29b2758c0ba76",
        "refactoring_type": "pure",
        "justification": "The commit focuses on structural changes to the codebase, such as renaming variables and methods, without any alteration in behavior or functionality. Additionally, there are improvements made to the caching mechanism within CharacterReaderTest class for better performance.",
        "commit_message": "Moved charset update settings into Document class and improved tests."
    },
    {
        "repository": "https://github.com/jhy/jsoup",
        "commit_hash_before": "0961b24e30a244ee26a568541c44840584642d5e",
        "commit_hash_current": "dcc35b709ce6bc4ac48be4ed73a7251fe1613855",
        "refactoring_type": "pure",
        "justification": "The commit does not introduce any new functionality or changes to existing behavior. The code modifications are primarily focused on the addition of tests and refactoring of test-related functions, which is considered a pure refactoring.",
        "commit_message": "Autoenable 'updateMetaCharset' on charset update."
    },
    {
        "repository": "https://github.com/openpnp/openpnp",
        "commit_hash_before": "188f44688788442037f19211ae7a47d3f8746d6f",
        "commit_hash_current": "d18463744b88d24a17d2c0c3895d892324fa5017",
        "refactoring_type": "pure",
        "justification": "The commit primarily consists of code reorganization and additions/removal of XML elements for class definitions in the provided files. No changes to behavior or functionality can be observed. The additions of new icons are likely related to UI improvements, but the actual functionality remains unchanged.",
        "commit_message": "Refactored JobProcessor so that it can be loaded from the config instead of hard coded.\nCreated a new JobProcessor interface and moved the old code to ReferenceJobProcessor.\nMade ReferenceJobProcessor implement JobProcessor.\nAdded config requirements for JobProcessor.\nUpdated default config for JobProcessor."
    },
    {
        "repository": "https://github.com/openpnp/openpnp",
        "commit_hash_before": "b185183791fae519a4c6123cb59743de4531cd58",
        "commit_hash_current": "bc1c2596de335f843cc35f61016ca0789646529c",
        "refactoring_type": "pure",
        "justification": "The changes in this commit appear to be purely structural. The renaming of PropertySheetConfigurable to PropertySheetHolder, along with the adjustments made to the import statements, are typical of a pure refactoring that does not change functionality. No behavior or functionality seems to have been altered.",
        "commit_message": "Changed PropertySheetConfigurable to PropertySheetHolder and added Actions interface."
    },
    {
        "repository": "https://github.com/openpnp/openpnp",
        "commit_hash_before": "283d70d43626f8512f29cfad00ee27e5f418eb29",
        "commit_hash_current": "f95301893f87d94feab1fba96f9db0acf3e9aae8",
        "refactoring_type": "pure",
        "justification": "The commit mainly focuses on renaming variables and methods, extracting a method, and reorganizing code structure while maintaining the same behavior. No changes were made that could affect the functionality or behavior of the class.",
        "commit_message": "Dumped the CommandSet thing for a more flat structure that I am happy with. Not yet tested on hardware, nor is CHANGES.md updates."
    },
    {
        "repository": "https://github.com/openpnp/openpnp",
        "commit_hash_before": "3dd8ce0a1598f2688588906ac109d1bd74d72fbe",
        "commit_hash_current": "355ad95611a65427725ef11c2197723191945aca",
        "refactoring_type": "pure",
        "justification": "The commit primarily includes changes related to naming conventions, variable and method renames, and the removal of commented-out code. These changes do not seem to affect the functionality or behavior of the code. Therefore, it is classified as a 'pure' refactoring.",
        "commit_message": "Final check and cleanup. Ready for pull request.\n\nSigned-off-by: BendRocks <BendRocks@users.noreply.github.com>"
    },
    {
        "repository": "https://github.com/openpnp/openpnp",
        "commit_hash_before": "355ad95611a65427725ef11c2197723191945aca",
        "commit_hash_current": "b2a027b332a4a9440486e5d5d122df39ca2c5f72",
        "refactoring_type": "pure",
        "justification": "The commit appears to only restructure the code by removing an unused class 'FiducialPanel' and renaming a variable from 'panel' to 'boardLocation', as well as some minor refactorings. There are no changes to behavior or functionality in the provided diff.",
        "commit_message": "Signed-off-by: BendRocks <BendRocks@users.noreply.github.com>"
    },
    {
        "repository": "https://github.com/rundeck/rundeck",
        "commit_hash_before": "64f8ee42ed7c353c5141de69bc7f94cfac45472d",
        "commit_hash_current": "9d7affad19010ae71742c81d9bcff324a1bc08de",
        "refactoring_type": "pure",
        "justification": "The commit adds a new variable 'contextStringSeparator' and updates the context splitting logic in the RDWorkflow class. However, there are no changes to the behavior or functionality of the code; it only impacts how the context is split. This refactoring is intended to make the code more flexible and maintainable while preserving its original functionality.",
        "commit_message": "Fix: uncaught exception causes NPE and lost workflow state\n\n* handle potential null in WorkflowExecutionStateListenerAdapter\n* catch throwable and set result objects when reporting state"
    },
    {
        "repository": "https://github.com/rundeck/rundeck",
        "commit_hash_before": "d2371053c56ef13ed9cfd4b2f6eff937f41a449f",
        "commit_hash_current": "6c2d7b40a1bee43efd78677c79c2ed0e4104c658",
        "refactoring_type": "pure",
        "justification": "The code changes in the commit do not appear to alter functionality or behavior. Instead, they add new test cases for job authorization and state access scenarios, indicating that these features were previously missing from the tests. However, since these changes do not change existing functionalities, they can be classified as 'pure' refactoring.",
        "commit_message": "Add FlowControl to the step and plugin execution context"
    },
    {
        "repository": "https://github.com/rundeck/rundeck",
        "commit_hash_before": "6c2d7b40a1bee43efd78677c79c2ed0e4104c658",
        "commit_hash_current": "0b4fb0448bcd01fc15d3a9d0a2b5889a9bc5a585",
        "refactoring_type": "pure",
        "justification": "The commit only adds a new list of plugins to be verified in the war and jar files. It does not seem to change any behavior or functionality, as the added plugins are already present in the codebase (based on the existing manifest entries for stub, localexec, copyfile plugins). The changes are purely organizational and do not affect the application's operation.",
        "commit_message": "Refactor framework\n\n* frameworkbase used as base class\n* extract node/plugin logic to util classes"
    },
    {
        "repository": "https://github.com/rundeck/rundeck",
        "commit_hash_before": "0b4fb0448bcd01fc15d3a9d0a2b5889a9bc5a585",
        "commit_hash_current": "e671e2adcfc575124ce782d05ff22649fef5d247",
        "refactoring_type": "pure",
        "justification": "The commit focuses on simplifying and organizing the codebase without any observable changes to functionality or behavior. The refactored code removes the redundant use of `NodeFilter` for setting node lists in multiple classes, replacing it with a call to the `FrameworkNodeList.setNodes()` method directly.",
        "commit_message": "big refactor"
    },
    {
        "repository": "https://github.com/rundeck/rundeck",
        "commit_hash_before": "10e684ea3e6ed2e41beb6bba2fc72a04a910a5f8",
        "commit_hash_current": "f4068e45f9e3bf6c4fdb9111445b33727e96bdca",
        "refactoring_type": "pure",
        "justification": "The commit adds new methods and test cases for workflow log filters validation and update, but it does not seem to change the existing functionality or behavior. The code changes are primarily structural, such as renaming variables and reorganizing code structure, and thus classify this commit as 'pure' refactoring.",
        "commit_message": "fix: node-first strategy does not manage shared context correctly"
    },
    {
        "repository": "https://github.com/Netflix/ribbon",
        "commit_hash_before": "43e14b8d83eae5a1a185c3f3521cb95b9ad20b2d",
        "commit_hash_current": "5675117b2f2ed1c532812c1420c3939333fc8834",
        "refactoring_type": "pure",
        "justification": "The commit mainly focuses on renaming variables, methods, and classes without changing their behavior (e.g., NettyHttpRequest to request), extracting methods (e.g., from LoadBalancingNettyClient to loadBalancingClient), and reorganizing code structure while maintaining the same functionality. No new features are added or existing bugs fixed in this commit.",
        "commit_message": "Added load balancing functionality for Netty client. Some code refactoring to extract common load balancer functionalities into LoadBalancerContext."
    },
    {
        "repository": "https://github.com/Netflix/ribbon",
        "commit_hash_before": "fc65a03963db9c291d3fef7af86feef1e3f991d3",
        "commit_hash_current": "ea101618b23a875f8ad7741b5cad7cb08939483c",
        "refactoring_type": "pure",
        "justification": "The commit mainly consists of code reorganization, renaming variables, methods, and classes without changing their behavior. There are no new functionalities added or existing functionality modified. The changes appear to be focused on improving the readability and organization of the codebase.",
        "commit_message": "Added async invocation of client callbacks."
    },
    {
        "repository": "https://github.com/Netflix/ribbon",
        "commit_hash_before": "ea101618b23a875f8ad7741b5cad7cb08939483c",
        "commit_hash_current": "833ec356ca6b9e151c894de766e5f00d16332d7e",
        "refactoring_type": "pure",
        "justification": "In the provided code diff, there are no changes to behavior or functionality. The only modifications made are: 1) renaming DefaultSerializationFactory to JacksonSerializationFactory, 2) adding two new methods deserialize(InputStream in, Class<T> type) and serialize(OutputStream out, Object object) to the Serializer interface and its implementing classes, 3) adding an identical deserialize method to the Deserializer interface. These changes are purely structural, aiming to improve code organization or readability. No changes were made that could affect the behavior of the code.",
        "commit_message": "Added serialization API based on streams."
    },
    {
        "repository": "https://github.com/Netflix/ribbon",
        "commit_hash_before": "833ec356ca6b9e151c894de766e5f00d16332d7e",
        "commit_hash_current": "b33a5edf6e37039887d800aac926a7e8c581e4ab",
        "refactoring_type": "pure",
        "justification": "The commit adds a new method `get(TypeToken<T> type)` to the NettyHttpResponse class, but it is currently empty. This does not seem to change any existing behavior or functionality of the class, and it appears that the intention was to implement the new method in the future. However, as the method remains unimplemented, this refactoring can be considered 'pure' as it does not impact the current functioning of the system.",
        "commit_message": "Added support for deserialization based on TypeToken."
    },
    {
        "repository": "https://github.com/Netflix/ribbon",
        "commit_hash_before": "f41a27f83b5fe25d3e04c581fa8f20ca6c861fba",
        "commit_hash_current": "9216170ac8852c28bcf4562d7bf5a02647ff5a36",
        "refactoring_type": "pure",
        "justification": "The commit adds a test for streaming data using Server-Sent Events (SSE) and creates necessary classes and methods to handle it. However, the existing functionalities do not seem to be affected by these changes. The code reorganization is only focused on adding new functionality, and no alterations were made to existing behavior or outputs.",
        "commit_message": "Changed method signature of callback interface. Make sure Future returned from async call work."
    },
    {
        "repository": "https://github.com/basti1302/startexplorer",
        "commit_hash_before": "304397863d2b2e7557f0dbc9dc7e6728993e87be",
        "commit_hash_current": "1a626e8acbd69d80f19a61b4437cd874cf4a656c",
        "refactoring_type": "pure",
        "justification": "The changes in this commit are purely structural and do not seem to alter the functionality of the code. The updated version numbers in several files indicate a new release, but there are no changes that would affect the behavior or outputs of methods. This includes the addition of a new method for an ugly hack related to files from Jars, but it's unlikely to change the overall behavior of the application.",
        "commit_message": "Fix for problems when editor shows a class file from Jar. Related to\n#38."
    },
    {
        "repository": "https://github.com/basti1302/startexplorer",
        "commit_hash_before": "1a626e8acbd69d80f19a61b4437cd874cf4a656c",
        "commit_hash_current": "e321c59e4c0c5b39b068a473230b1e6cd684f725",
        "refactoring_type": "pure",
        "justification": "The code changes in the provided diff do not seem to have any functional impact. Instead, they focus on improving readability and maintainability by reorganizing the structure of some methods without altering their behavior or adding new features. For example, the `AbstractHandlerDelegate` class has a method named `pathStringToFile()` added, but it is implemented using an existing method (`pathStringToFile(String pathString, ResourceType resourceType, ExecutionEvent event)`) and does not appear to change its functionality. Additionally, the `AbstractStartFromEditorHandlerDelegate` class removes a block of code related to handling files from jars, but it seems to be removed without any functional changes as well.",
        "commit_message": "Make open from editor work for files not in workspace. Closes #38."
    },
    {
        "repository": "https://github.com/ushahidi/SMSSync",
        "commit_hash_before": "13543fd59d36cf3e0dd25ff7b485f7a07aedc099",
        "commit_hash_current": "d928a5ec16f53f0b01f294125fb17185ebe57ba9",
        "refactoring_type": "pure",
        "justification": "The code refactoring in this commit focuses on improving the readability and structure of the code, without making any changes to its functionality or behavior. The changes include moving logic related to creating a HttpEntity for different data formats into separate methods, renaming variables for better clarity, and simplifying some conditional logic. These changes do not alter the output or behavior of the system.",
        "commit_message": "refactored ProcessMessage and MessageSyncHtptClient classes.\n\nUsing new helpers in MainHttpClient.\n\nadded set/getClientError even though it's not being used yet, should\nprobably hook into wherever `getServerError` is called."
    },
    {
        "repository": "https://github.com/ushahidi/SMSSync",
        "commit_hash_before": "d928a5ec16f53f0b01f294125fb17185ebe57ba9",
        "commit_hash_current": "d347af2f1123569882ac2455ce3d351ee77c5249",
        "refactoring_type": "pure",
        "justification": "The commit changes the constructor signature of MessageSyncHttpClient, but it does not appear to change any behavior or functionality as the new parameters are only used for initialization. The existing methods executePost() and executePut() remain unchanged in the code diff, which suggests this is a pure refactoring aimed at making the class more flexible.",
        "commit_message": "continued MessageSyncHttpClient refactor.\n\nChanged constructor signature for MessageSyncHttpClient, added message\nand phone. Updated tests.\n\nFixed call to `getFromWebService` in ProcessMessage, use MainHttpClient\ninstead.\n\nFixed bug in base class for request in MainHttpClient, use\nHttpRequestBase instead of HttpUriRequest.\n\nRemoved executeGet/Post/Put, use setEntity, setMethod and executeRequest\nseparately.\n\nAdded `getRequest` to MainHttpClient for easier testing and backwards\ncompatibility.\n\nRenamed `executeRequest` to `execute` to cover base class call.\n\nFixed bug in `String.format` calls."
    },
    {
        "repository": "https://github.com/ushahidi/SMSSync",
        "commit_hash_before": "3e18b338f7cad9a5e8106123d5e5417fb1737fea",
        "commit_hash_current": "a60f3163f74863ec9c2a3177a913b87055b0a8f9",
        "refactoring_type": "pure",
        "justification": "The commit adds a new service for handling message results and the related UI elements in the configuration and strings files. However, the actual functionality of the existing message delivery API remains unchanged, as indicated by the absence of changes to its code or related classes. This refactoring appears to be purely organizational in nature and does not seem to impact the overall functionality.",
        "commit_message": "Added Message Results scheduler task."
    },
    {
        "repository": "https://github.com/julianhyde/optiq",
        "commit_hash_before": "9e9aeee18855536c8e3a92ed3b057740ac2ae2a6",
        "commit_hash_current": "f9171508367efed57c497063cd363e38e8facdf7",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit are primarily focused on refactoring and formatting, including renaming variables, methods, and classes without altering their behavior. There are no functional changes or bug fixes apparent from the diff. The new methods added for sorting by columns and ordering by ASC/DESC NULLS FIRST appear to be additional features but they are encapsulated within tests, and the actual implementation remains unchanged.",
        "commit_message": "Lots of fixes to the JDBC driver, and in particular to DatabaseMetaData methods, to make Squirrel-SQL run better."
    },
    {
        "repository": "https://github.com/javers/javers",
        "commit_hash_before": "1d743ad0b9ebb9c4e7ed695c5fef73fc38677bd6",
        "commit_hash_current": "5e9d2f9c9026006b720f6f641b84bfaba2704089",
        "refactoring_type": "pure",
        "justification": "The commit does not seem to introduce any functional changes or bug fixes. It involves renaming packages and classes from 'org.javers.common.reflection.org.javers' to 'org.javers.model.mapping'. Additionally, there are no changes to method signatures, behavior, or conditional logic that could indicate a modification in functionality. Instead, this refactoring appears to be solely focused on improving the code structure and organization.",
        "commit_message": "merge"
    },
    {
        "repository": "https://github.com/javers/javers",
        "commit_hash_before": "0693d08d2e338a16b950002943e24b01a6061da8",
        "commit_hash_current": "81b4b2d8bdfcf0b54c92a53c63797e337d98bbd7",
        "refactoring_type": "pure",
        "justification": "The commit includes the migration of Java files to Groovy, but it doesn't seem to change any existing functionality or behavior. Instead, it appears to be a refactoring effort aimed at improving code readability and potentially simplifying development processes by using a more concise syntax (Groovy). The change in file extension from .java to .groovy is purely structural and doesn't alter the program's output or logic.",
        "commit_message": "- more DDD in ObjectGraphBuilder (Cdo introduced as entity)\n- added graph cycle detection & handling"
    },
    {
        "repository": "https://github.com/javers/javers",
        "commit_hash_before": "60c3f6d6bea91ed43719e81e3de7dc8db7f2215a",
        "commit_hash_current": "f4ac7b65924c1e56de923b91bc758cd3036dbc67",
        "refactoring_type": "pure",
        "justification": "The commit introduces new tests for the EdgeProjectingVisitor class and related classes, but there are no changes in behavior or functionality in existing code. The changes appear to be purely organizational, such as adding a new test file and updating import statements.",
        "commit_message": "Calculating ReferenceAdded change set."
    },
    {
        "repository": "https://github.com/javers/javers",
        "commit_hash_before": "8257e9ff515a6540c840799349deada18dde77c3",
        "commit_hash_current": "9d792dc437b4cef5780864fa3c1b8dbbe23ad187",
        "refactoring_type": "pure",
        "justification": "The code changes in the diff primarily focus on renaming imports, reorganizing classes and interfaces (BeanBasedPropertyScanner, FieldBasedPropertyScanner, PropertyScanner), and updating some method calls. However, there are no functional changes or behavior alterations visible in this refactoring. Therefore, it can be classified as 'pure' refactoring.",
        "commit_message": "zmiany nazw metod, pol. Usuniecie niepotrzebnych metod"
    },
    {
        "repository": "https://github.com/javers/javers",
        "commit_hash_before": "f175dbec2bcb7c50e61ae66fc6ca451e497f75b3",
        "commit_hash_current": "401a218be1101406e9aaae30eb1e479f4d13f103",
        "refactoring_type": "pure",
        "justification": "The code changes involve refactoring by reorganizing the existing code, renaming variables and methods, and adding new instance variables to support future functionality (`entityClasses`, `valueObjectClasses`, `externalModules`) without any immediate functional changes. The addition of a method for registering entities, value objects, modules, etc., does not affect the behavior as long as those methods are empty or not called at the moment. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "- support for booting external JaversModules in JaversBuilder"
    },
    {
        "repository": "https://github.com/kilim/kilim",
        "commit_hash_before": "8afe439cb9aea4bf1dff9e11da2521594fe5a4ee",
        "commit_hash_current": "7e73326b638a5a0c565b6061b2acc4aab8c7135d",
        "refactoring_type": "pure",
        "justification": "The commit does not appear to introduce any new functionality or change the behavior of existing code. Instead, it modifies variable and method names (e.g., 'lineNumberNodes' to 'lineNumberNodesTreeMap'), and switches from using a HashMap to a TreeMap for storing line number nodes. These are purely structural changes that do not impact the program's functionality.",
        "commit_message": "merge sriram fix to a race condition that cuases spurious wakeups"
    },
    {
        "repository": "https://github.com/kilim/kilim",
        "commit_hash_before": "7e73326b638a5a0c565b6061b2acc4aab8c7135d",
        "commit_hash_current": "586454da9a7accf072b20814b4c6f3d7331459fa",
        "refactoring_type": "pure",
        "justification": "The commit removes the TestRing.java file, which suggests that it was a pure refactoring with no functional changes. The TestRing class tests for RingQueue and its behavior is not related to the main application's functionality. Therefore, this change doesn't affect the software's output or behavior.",
        "commit_message": "added new primitives to move to LMAX Disruptor"
    },
    {
        "repository": "https://github.com/kilim/kilim",
        "commit_hash_before": "586454da9a7accf072b20814b4c6f3d7331459fa",
        "commit_hash_current": "26154a333a3e41702a80ebdd12860ece866e31f2",
        "refactoring_type": "pure",
        "justification": "The commit adds comments and modifies the structure of some classes, but it does not appear to change any existing behavior or functionality. Instead, it seems to be focused on improving readability and organization of the code.",
        "commit_message": "moved away from the original kilim scheduler to a mix of disruptor and multicast style event dispatch"
    },
    {
        "repository": "https://github.com/kilim/kilim",
        "commit_hash_before": "25f2c9a71f057fa619f7e6c74d0ea6e9395ab82b",
        "commit_hash_current": "9b428b16489a87bc783f44052eebd0b45ed45a0d",
        "refactoring_type": "pure",
        "justification": "The code changes primarily involve the addition of a parameter to the Task class and refactoring of its properties, but there are no apparent functional changes. The task is still an abstract class with the same behavior and structure as before.",
        "commit_message": "Moved to thread pools by making Task implement Runnable interface."
    },
    {
        "repository": "https://github.com/kilim/kilim",
        "commit_hash_before": "94489a3660c18b0d01db395a7388d640dc9fdc73",
        "commit_hash_current": "2aa29cea463edd362d4c3260048513993866f9ef",
        "refactoring_type": "pure",
        "justification": "The commit removes test cases for TestIO and TestHTTP from the AllWoven test suite. These changes are purely organizational, as they do not seem to affect the functionality of the Kilim library itself. Additionally, there are no bug fixes or behavior changes in the diff provided.",
        "commit_message": "All Hedvig changes added\ndone variable in Task.java marked volatile\nrunning is set true only if it is false in Task.resume()"
    },
    {
        "repository": "https://github.com/neophob/PixelController",
        "commit_hash_before": "8ddd73e9af13d4eb1156f9102ac4e0f49fc3a75b",
        "commit_hash_current": "095a776e9f4e2de42517531c971122b608f847bc",
        "refactoring_type": "pure",
        "justification": "The commit seems to consist mainly of renaming files and scripts, as well as moving them to a new location. There are no changes in behavior or functionality that can be observed from the provided diff.",
        "commit_message": "apply pixelinvaders serial fix"
    },
    {
        "repository": "https://github.com/jbake-org/jbake",
        "commit_hash_before": "f8fccd7cdf7c3e64027ef892ed93a757e3f74f72",
        "commit_hash_current": "0cfa2b0c9ea625fd836ae4151926d1dc31665f97",
        "refactoring_type": "pure",
        "justification": "In this commit, the code structure has been improved by separating asciidoctor options and attributes into separate variables. Additionally, a new method 'getAsciiDocOptionsAndAttributes()' is introduced to gather these options and attributes for rendering Asciidoc files. However, no functional changes or bug fixes are observed in this commit. Instead, the code is restructured solely for readability and maintainability purposes.",
        "commit_message": "asciidoc options are now supported via keyprefix asciidoc.option.KKK\nwhere KKK is the asciidoc key."
    },
    {
        "repository": "https://github.com/jbake-org/jbake",
        "commit_hash_before": "6ff0b2a03429c522057f3b9d44fedfd44f52ec80",
        "commit_hash_current": "13176b6d8b72d508b431bac0bee7c28d9c5ef1ba",
        "refactoring_type": "pure",
        "justification": "In this commit, the code has been refactored to remove the dependency on Apache Commons Collections (ListUtils) and replace it with native Java list operations. Additionally, some variable and method names have been changed but there seems to be no functional change as a result of these modifications. The sitemap template file has also been updated to accommodate the changes in the code. These changes can be considered pure refactoring as they do not affect the functionality or behavior of the program.",
        "commit_message": "Slightly modified PR #58."
    },
    {
        "repository": "https://github.com/jbake-org/jbake",
        "commit_hash_before": "a46d213240283a16ddb4efbe3832ccadc2cf40a7",
        "commit_hash_current": "ab230fd225c861f54f5f3dd2db627d848dfc3a2f",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new template file for the sitemap. However, there are no changes to existing behavior or functionality. The addition of the new file is purely structural and doesn't alter how the application functions.",
        "commit_message": "Rebase onto master"
    },
    {
        "repository": "https://github.com/jbake-org/jbake",
        "commit_hash_before": "ab230fd225c861f54f5f3dd2db6278d48dfc3a2f",
        "commit_hash_current": "57365338bff0d50c226bfe72875176f8406f2251",
        "refactoring_type": "pure",
        "justification": "In the provided Git diff, there are no apparent changes in behavior or functionality. The code refactoring consists of moving the `fileExt` method to a separate class (FileUtil), and updating the MarkupEngine reference in Parser class to use the new FileUtil method instead of its own implementation. This change improves the code structure and readability without affecting the functionality, hence classified as 'pure' refactoring.",
        "commit_message": "Fixed hardcoded file extensions in FileUtil"
    },
    {
        "repository": "https://github.com/jbake-org/jbake",
        "commit_hash_before": "5f73e638a015c92fbe18ac9ec680d9076a486201",
        "commit_hash_current": "75d8aefe75c3fa050b89365f4a2b087fecfcb696",
        "refactoring_type": "pure",
        "justification": "The commit seems to consist mainly of renaming packages, classes, and variables. These changes do not appear to affect the functionality or behavior of the code. The refactoring is likely aimed at improving the organization and readability of the codebase.",
        "commit_message": "Integrate with OrientDB\n   * make use of OrientDB to store documents converted by parsers\n   * support for incremental rendering if source file changed\n   * prepare work for multiple document types\n   * prepare work for multiple template engines"
    },
    {
        "repository": "https://github.com/tomp2p/TomP2P",
        "commit_hash_before": "c8ee59568f417210ec6a1f098117c75a19ae739e",
        "commit_hash_current": "0979b765ff0159436b6169cdeacbceb6db39be09",
        "refactoring_type": "pure",
        "justification": "The commit primarily involves renaming classes, moving functionality to different classes, and refining the code structure without affecting its overall behavior or functionality. The changes made are structural and do not seem to alter the existing features or introduce new ones.",
        "commit_message": "multiple changes and additions"
    },
    {
        "repository": "https://github.com/tomp2p/TomP2P",
        "commit_hash_before": "0979b765ff0159436b6169cdeacbceb6db39be09",
        "commit_hash_current": "77ad456fe427c67c527945c7aab268c6eb80318a",
        "refactoring_type": "pure",
        "justification": "The commit appears to be a refactoring of the codebase with no changes in functionality or behavior. The new classes and methods added do not seem to affect the existing functionality, and there are no modifications to method signatures or changes in outcomes. Additionally, there are no bug fixes or new features introduced.",
        "commit_message": "many changes and additions"
    },
    {
        "repository": "https://github.com/tomp2p/TomP2P",
        "commit_hash_before": "77ad456fe427c67c527945c7aab268c6eb80318a",
        "commit_hash_current": "0cf613a9c7bb83717588fa500f81738409e0b76b",
        "refactoring_type": "pure",
        "justification": "The code changes appear to be purely organizational in nature, with no alterations to the functionality of existing methods or added new features. For example, the usage of 'RefCounterLock' has been replaced by a custom lock class (likely for better encapsulation). Additionally, some imports have been reorganized and a few method calls have been renamed. However, none of these changes seem to affect the behavior or functionality of the program.",
        "commit_message": "Added flag to PeerMapConfiguration: peerVerification"
    },
    {
        "repository": "https://github.com/tomp2p/TomP2P",
        "commit_hash_before": "0cf613a9c7bb83717588fa500f81738409e0b76b",
        "commit_hash_current": "7b20cc8668f9019764cff0f468e585859b8f4c63",
        "refactoring_type": "pure",
        "justification": "The commit introduces new classes (RelayReply and RelayResponseRPC), but they don't seem to change any existing functionality. The changes in the code appear to be related to extending or improving the project by adding these new classes for handling relay responses, which does not affect the original behavior of the TomP2P library.",
        "commit_message": "Relays working but still WIP"
    },
    {
        "repository": "https://github.com/tomp2p/TomP2P",
        "commit_hash_before": "b67c95eb4b0257d8d0bf8e81ac8106ca3aedb4c9",
        "commit_hash_current": "4adc741c9694543db7a4ed767901e05029d1d60e",
        "refactoring_type": "pure",
        "justification": "The commit includes refactorings such as renaming variables and methods, extracting a new class (RelayConnectionFuture) without altering functionality. There are no apparent changes to behavior or functionality.",
        "commit_message": "cleaned up code, many bugfixes and some tests"
    },
    {
        "repository": "https://github.com/jayway/rest-assured",
        "commit_hash_before": "9cb924c0a767a3d8fe93183cc248f2f5c480f358",
        "commit_hash_current": "85c371b3ae677ab90b7f198491df05e9b9f2d9a1",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit appear to be purely structural, as they involve renaming and simplifying imports, updating dependency versions, and making small adjustments to method signatures without altering their functionality. There are no indications of new features being added or existing behavior being modified.",
        "commit_message": "Merging oauth2 branch"
    },
    {
        "repository": "https://github.com/jayway/rest-assured",
        "commit_hash_before": "85c371b3ae677ab90b7f198491df05e9b9f2d9a1",
        "commit_hash_current": "af6272a7a35c124000ae6076d565f4c35b7ebdd6",
        "refactoring_type": "pure",
        "justification": "The commit primarily involves changing the Signature enum to OAuthSignature enum in several places, renaming some methods and variables. These changes do not affect the functionality or behavior of the code, as they are merely refactoring for better consistency with the rest of the project.",
        "commit_message": "Some oauth2 refactorings"
    },
    {
        "repository": "https://github.com/jayway/rest-assured",
        "commit_hash_before": "3f1d499472efeb004c50d352ff109a98146e5635",
        "commit_hash_current": "47dce689ddb06e8e81a8236f087507064c6cb585",
        "refactoring_type": "pure",
        "justification": "The changes in the commit only removed the deprecated methods and their usages. There are no behavior or functionality changes, just a simplification of the code by removing the deprecated options. This is considered as 'pure' refactoring.",
        "commit_message": "Major refactoring of SSLConfig and certificate authentication"
    },
    {
        "repository": "https://github.com/jayway/rest-assured",
        "commit_hash_before": "525f1c3c52c43c8176b18d5fea79ac1f35c232dd",
        "commit_hash_current": "ad90bc4b6641789305101637ad315cafbf4bc094",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new class `SerializationSupport` for checking if an object is serializable. This refactoring does not change the existing behavior or functionality of the codebase, it only simplifies the condition in the original code by extracting it to a separate utility class. Therefore, it can be classified as a 'pure' refactoring.",
        "commit_message": "Added body support for MockMvc module"
    },
    {
        "repository": "https://github.com/jayway/rest-assured",
        "commit_hash_before": "555a3872aaabe98cc6bd25fbbf1824f12ea540d8",
        "commit_hash_current": "9efaa289f09eb1e64bde3b9d73913853af24dab1",
        "refactoring_type": "pure",
        "justification": "The code changes only rename the class and method names, modify the parameter order, and move some code blocks around without modifying their functionality. This refactoring does not add any new features or change existing behavior, which indicates a 'pure' refactoring.",
        "commit_message": "Refactored and static methods to setup mock mvc"
    },
    {
        "repository": "https://github.com/madflow/flow-netbeans-markdown",
        "commit_hash_before": "2f5c51a659fa5626d3685ce30081e6cac22fd4e3",
        "commit_hash_current": "36f617e5575ff6743c6685bd3cbb8e1eac3d4a49",
        "refactoring_type": "pure",
        "justification": "The commit primarily refactors the code without altering its functionality. The changes include modifying a ClassLoader, renaming a variable (`cl` to `fxClassloader`), and moving some code blocks around. There are no signs of adding new features or changing behavior.",
        "commit_message": "Disabled JavaFX based preview by default.\nAdded warning to options panel.\nChanged preview action to always open preview in external browser."
    },
    {
        "repository": "https://github.com/OpenGamma/OG-Platform",
        "commit_hash_before": "4625a7db512ec2a8c4fca0f58b6bbc25a1f7d957",
        "commit_hash_current": "b3a2f0ee52aceeb84f336b79389117fe2d2c490f",
        "refactoring_type": "pure",
        "justification": "The changes made in this commit mainly consist of renaming variables, methods and reorganizing the class structure. There are no indications of any behavior or functionality changes, bug fixes, new features additions, or changes to method signatures that could affect behavior. Hence it is classified as 'pure' refactoring.",
        "commit_message": "[PLAT-3807] Remove version latching from ViewProcessorManager"
    },
    {
        "repository": "https://github.com/OpenGamma/OG-Platform",
        "commit_hash_before": "f9b2de254748db084bd78c7d161e52c109a2d3f2",
        "commit_hash_current": "1d44a96284f01d723306426839579e0e4c506c27",
        "refactoring_type": "pure",
        "justification": "The commit primarily involves renaming variables and methods, reorganizing code structure while maintaining the same behavior. There are no indications of changes to functionality or bug fixes.",
        "commit_message": "[PLAT-5512] bloomberg diagnostic tool - fixing checkstyle"
    },
    {
        "repository": "https://github.com/OpenGamma/OG-Platform",
        "commit_hash_before": "61d2a8ecb8352e3ff7c7275d65132024d440c883",
        "commit_hash_current": "7538f3e61dc6ad64182dfc29659642f92df9f97c",
        "refactoring_type": "pure",
        "justification": "The commit changes the variable and method names, extracts a method, and reorganizes the code structure without any apparent change in behavior or functionality. This is indicative of 'pure' refactoring.",
        "commit_message": "[PLAT-5023] Removed unnecessary RegressionIdPreProcessor; CalculationResults now uses ObjectId.toString() as default regression id if not already populated; Added filtering so only records accessed are persisted in dump."
    },
    {
        "repository": "https://github.com/OpenGamma/OG-Platform",
        "commit_hash_before": "7538f3e61dc6ad64182dfc29659642f92df9f97c",
        "commit_hash_current": "232159b1550171e1d6e7ec0f98db40423408e58d",
        "refactoring_type": "pure",
        "justification": "The commit introduces a DoubleFormatter parameter to the LabelledMatrix2DFormatter class constructor, but it does not seem to change any existing behavior or functionality. It simply restructures the code by making the DoubleFormatter dependency explicit and passing it as an argument during instantiation.",
        "commit_message": "[PLAT-5529], [PLAT-5530], [PLAT-5531] Improving error reporting if there is missing recovery rate, yield curve or credit spread curve data"
    },
    {
        "repository": "https://github.com/OpenGamma/OG-Platform",
        "commit_hash_before": "232159b1550171e1d6e7ec0f98db40423408e58d",
        "commit_hash_current": "9af46b2978e3c8ae4760d3709205e7a02f83063e",
        "refactoring_type": "pure",
        "justification": "The commit refactors the code by organizing it better, renaming variables, and extracting methods without changing their behavior or adding any new features. The changes are purely structural with no functional changes.",
        "commit_message": "[PLAT-5023] DP ids ignored in HTS master; Changed db filters to outright queries on masters due to slow performing iterating queries"
    },
    {
        "repository": "https://github.com/chiehmin/MinMinGuard",
        "commit_hash_before": "caacbbd56bcf61918db7569083f9b4b4d6b51c5a",
        "commit_hash_current": "f0f49152218c13ad1701173d633475b9e66218ad",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new method in the 'Main' class for url filtering and another helper method for converting pixels to dp. However, these changes do not alter the existing functionality or behavior of the codebase. The existing removeAdView() method is also refactored to accept an additional boolean parameter (apiBased), but it does not affect the method's operation. Hence, this commit can be classified as pure refactoring.",
        "commit_message": "improvement urlfiltering performance. clear empty space for url filtering approach"
    },
    {
        "repository": "https://github.com/chiehmin/MinMinGuard",
        "commit_hash_before": "ccda5b000c5e84bf6dbc8e181c1a4a0c3f87e9ce",
        "commit_hash_current": "1ed20eca0dc3aa3c652e35301bf6b84bbc09db9d",
        "refactoring_type": "pure",
        "justification": "The commit removes a file, which is a pure refactoring as it doesn't change the behavior or functionality of the codebase.",
        "commit_message": "remove dummy files. add 2chmate for app-specific support"
    },
    {
        "repository": "https://github.com/chiehmin/MinMinGuard",
        "commit_hash_before": "fd258379ab8d2cf10d6735aa9800d64e0586ea91",
        "commit_hash_current": "4d6635269954edb7881c624ade33d2b8e362e954",
        "refactoring_type": "pure",
        "justification": "The commit includes changes such as renaming a local variable 'adExist' to 'static boolean adExist', converting a non-static method to a static one, and moving the logic inside the method into a new static method outside of it. These changes are purely structural, with no indication that they alter the functionality or behavior of the code. There is also a slight modification in logging statements, but this does not seem to affect the overall functioning of the program.",
        "commit_message": "Fix bug in url filtering"
    },
    {
        "repository": "https://github.com/spotify/trickle",
        "commit_hash_before": "29f34d868c519610218c88d1435f5d580a58131b",
        "commit_hash_current": "344bd6c3ef1b6b93404ba42139f24fdd3ccaecea",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit consist mainly of renaming a class and removing some unsupported operation exceptions. These changes do not seem to affect the functionality or behavior of the code, as they only modify the structure and remove unused elements.",
        "commit_message": "fixed some sonar warnings"
    },
    {
        "repository": "https://github.com/federicoiosue/Omni-Notes",
        "commit_hash_before": "ac0c3b8e62402cdfb91473c6d0d844f2c21a03fd",
        "commit_hash_current": "cf48b92c2d8e1b67e1565858edb59bede314a435",
        "refactoring_type": "pure",
        "justification": "The commit changes the theme of the application to a darker version, modifies some styles related to the UI and renaming some style names. However, these changes do not seem to affect the behavior or functionality of the app, making it a 'pure' refactoring.",
        "commit_message": "Improved tagging: multi-checkbox preselection, title tags search, avoided redundance"
    },
    {
        "repository": "https://github.com/federicoiosue/Omni-Notes",
        "commit_hash_before": "01dda51c98b39b2c36067094b9b2bd18be3f7acf",
        "commit_hash_current": "dd3311b9694d969af4d9e19ea846fe5b0d733598",
        "refactoring_type": "pure",
        "justification": "The commit makes changes to the color of FloatingActionButton, but these changes do not affect the functionality or behavior of the app. The code refactoring is purely cosmetic and does not change how the app operates.",
        "commit_message": "Tags can now be removed by unchecking them into the \"add tag\" dialog"
    },
    {
        "repository": "https://github.com/federicoiosue/Omni-Notes",
        "commit_hash_before": "dd3311b9694d969af4d9e19ea846fe5b0d733598",
        "commit_hash_current": "c9c1a83758ff1700f1da45ea0a32f87bdd51351f",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new method `getDominantColor` without modifying the existing functionality of the class. The change affects the structure of the code and adds a new method, but it doesn't alter any behavior or functionality. Therefore, this refactoring is classified as 'pure'.",
        "commit_message": "Zooming effect on note opening is filled by touched view's dominant color"
    },
    {
        "repository": "https://github.com/federicoiosue/Omni-Notes",
        "commit_hash_before": "c9c1a83758ff1700f1da45ea0a32f87bdd51351f",
        "commit_hash_current": "159ec4776d85da48128098b89594ad7f03cffbf6",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new styles.xml file for Android Oreo (v21) and modifies the existing styles.xml to support transparent navigation bars based on a boolean value. However, none of these changes appear to alter the functionality or behavior of the application.",
        "commit_message": "All AlertDialogs should have been replaced with MaterialDialog and PasswordActivity layout is fixed"
    },
    {
        "repository": "https://github.com/gonjay/rubychina4android",
        "commit_hash_before": "7b5df23f48315a43d92bd95a85ed6086d82fe4e8",
        "commit_hash_current": "2e01ad241ec077a9420ccf174fddb5e9bae7fdc0",
        "refactoring_type": "pure",
        "justification": "The commit adds new files and classes, but it does not seem to change the behavior or functionality of the existing code. The changes appear to be related to adding new features (Notification center and Undo row), which indicates that this is a pure refactoring.",
        "commit_message": "\u6d88\u606f\u4e2d\u5fc3\u529f\u80fd\u5b8c\u6210"
    },
    {
        "repository": "https://github.com/gonjay/rubychina4android",
        "commit_hash_before": "eacd2f3305cc22bf32e81c1310ab6b476c1583e7",
        "commit_hash_current": "317d1c12d441f8b4bb7b2c06a9d17ee0551b98c5",
        "refactoring_type": "pure",
        "justification": "The commit does not show any changes that could affect the behavior or functionality of the code. Instead, it focuses solely on restructuring and improving the readability by initializing private Gson instances in multiple classes to avoid redundancy. This is an example of 'pure' refactoring as defined.",
        "commit_message": "\u628a\u751f\u6210 gson \u7684\u90e8\u5206\u4ece\u65b9\u6cd5\u4e2d\u62bd\u51fa\uff0c\u53d8\u6210\u4e00\u4e2a\u79c1\u6709\u53d8\u91cf\u6765\u4f7f\u7528\uff1b\u5e76\u628a\u7c7b\u91cc\u9762\u672a\u52a0\u4e0a\u4f5c\u7528\u57df\u7684\u5c5e\u6027\u53d8\u6210 private"
    },
    {
        "repository": "https://github.com/jmxtrans/jmxtrans",
        "commit_hash_before": "5c11868fd14f17cb08e9a3f08d30a6d62fd7140a",
        "commit_hash_current": "ef5ea4870e56e3657902b3e512632c16e129059e",
        "refactoring_type": "pure",
        "justification": "The commit introduces two new classes for different connection types to the JmxConnectionFactory class. However, there are no changes to existing functionality or behavior in the code. Instead, it simply extends and modifies the existing base class. This indicates a 'pure' refactoring as there are no functional changes.",
        "commit_message": "Split OpenTSDBWriter and merge Kieren Hynd's TCollectorUDPWriter into the class hierarchy to ensure consistent handling of tags, settings, and more.\nAlso applied checks for numeric values and cleanup of quotes and other special characters to both writers."
    },
    {
        "repository": "https://github.com/jmxtrans/jmxtrans",
        "commit_hash_before": "ef5ea4870e56e3657902b3e512632c16e129059e",
        "commit_hash_current": "4d726a94670a41487a02f2108cdf597b52d98bc5",
        "refactoring_type": "pure",
        "justification": "The changes in this commit appear to be purely structural, with no discernible impact on behavior or functionality. For example, the method names have been changed and some class attributes have been renamed, but these changes do not seem to alter how the code operates.",
        "commit_message": "TCollectorUdpWriter: simplify datagram handling, remove unneeded code.\nOpenTSDBGenericWriter: support JEXL for naming metrics; sanitize metric names, tag names, and tag values; enable skipping of hostname tag."
    },
    {
        "repository": "https://github.com/jmxtrans/jmxtrans",
        "commit_hash_before": "d7531e9ec4775ed5f3b81974a09c5c667eba3346",
        "commit_hash_current": "2e0e24db02d3e8d7a413e98f072d83f35dd8d015",
        "refactoring_type": "pure",
        "justification": "The code changes are primarily concerned with adding a new Java class (TypedProperties) and modifying the JmxTransContextListener class to use this new class when loading properties. However, there's no evidence of changes in behavior or functionality, as the new class is used to handle typed properties conversion rather than altering existing functionality.",
        "commit_message": "Refactor configuration and arg parsing"
    },
    {
        "repository": "https://github.com/jmxtrans/jmxtrans",
        "commit_hash_before": "2e0e24db02d3e8d7a413e98f072d83f35dd8d015",
        "commit_hash_current": "243c1ea237448ed84103cdc43557a5059c63c92b",
        "refactoring_type": "pure",
        "justification": "The commit removes the unnecessary dependency on JCommanderArgumentParser, which was not used in the code. This refactor does not change the behavior or functionality of the JmxTransContextListener class.",
        "commit_message": "Refactor properties config loading"
    },
    {
        "repository": "https://github.com/jmxtrans/jmxtrans",
        "commit_hash_before": "07d9f6bc873eaf895ef9490a1795359a91cb1c39",
        "commit_hash_current": "adccaffca7970802e65afdd89391a7fa5708003b",
        "refactoring_type": "pure",
        "justification": "The commit does not seem to introduce any new functionality or modify the existing behavior. Changes made are mostly related to version updates, renaming of packages and classes, and adjustments in dependencies, which are typical characteristics of a pure refactoring.",
        "commit_message": "Upgrade Guava and drop Java 7 support"
    },
    {
        "repository": "https://github.com/Astonex/Antox",
        "commit_hash_before": "253d8b434de922b3702595ec5dd264ddb20a96b1",
        "commit_hash_current": "bd6821e82978edc20e65a10c129971b61662b6a0",
        "refactoring_type": "pure",
        "justification": "The commit appears to be a refactoring of the code structure without any changes in behavior or functionality. The changes mainly include: - Modifying the layout of some views, such as ListView and RelativeLayout - Changing the background color and text color for various UI elements. However, these changes do not seem to affect the app's functionality.",
        "commit_message": "sliding layout with chat 'working'"
    },
    {
        "repository": "https://github.com/Astonex/Antox",
        "commit_hash_before": "250327004d43c350dc52661d01e7a15970708a8d",
        "commit_hash_current": "d9d280c86137134aa35d957bdffd7ec2d04c4d4b",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit appear to be purely structural, with no apparent alterations to functionality or behavior. Examples include: the addition of a new Button for accepting/rejecting files (but without associated functions), renaming of layout IDs, and reorganization of layout components without affecting their roles or interactions. No bug fixes, changes to existing functionality, or introduction of new features are evident.",
        "commit_message": "Toxme integration with the ability to skip it"
    },
    {
        "repository": "https://github.com/Astonex/Antox",
        "commit_hash_before": "ffbb85799e21aa83df9972cc2f23525f0ef51add",
        "commit_hash_current": "9446653f57bfbf24c01e9451823948e596d37766",
        "refactoring_type": "pure",
        "justification": "The commit involves changes to the UI layout, but none of these alter the behavior or functionality of the application. It appears that the code is being reorganized and refactored for better readability and maintainability without affecting how the app functions.",
        "commit_message": "Toxme integration with the ability to skip it"
    },
    {
        "repository": "https://github.com/kohsuke/github-api",
        "commit_hash_before": "caac294e79b5e1076781965a679ed346a554be8a",
        "commit_hash_current": "a74cfd453a2f58a9edf70a78fbd24f23f9ddd42d",
        "refactoring_type": "pure",
        "justification": "The commit primarily focuses on adding a new method 'kohsuke()' and making some organizational changes to the code, such as moving comments and creating a helper method for checking membership. However, none of these changes seem to affect the behavior or functionality of the existing methods. Therefore, this commit can be classified as a 'pure' refactoring.",
        "commit_message": "Added support for getting issues by milestone and state.\n\nrework AppTest to work better for people other than kohsuke\n\nThis patch was originally from @evanchooly. Reworked to avoid whitespace\nchanges."
    },
    {
        "repository": "https://github.com/kohsuke/github-api",
        "commit_hash_before": "9c02f918c1a09baa730c5b4ea59c1bf035de7dc2",
        "commit_hash_current": "926776204b9dc18eedac34a749932c4b8f0510a9",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new method 'asIterator' with a different parameter and returns an Iterator instead of a List. However, the changes do not appear to alter any existing functionality or behavior as the method calls still result in the same data being retrieved. Additionally, the method is marked as package-private ('/*package*/') which indicates it is intended for internal use within the library.",
        "commit_message": "Implemented the builder pattern to my liking"
    },
    {
        "repository": "Not specified in the provided diff",
        "commit_hash_before": "Not specified in the provided diff",
        "commit_hash_current": "Not specified in the provided diff",
        "refactoring_type": "pure",
        "justification": "The commit appears to only include changes such as renaming variables and reorganizing code structure without altering functionality. There are no signs of changes that could affect behavior or functionality, thus it is classified as 'pure' refactoring.",
        "commit_message": "extend id from int to long"
    },
    {
        "repository": "https://github.com/kohsuke/github-api",
        "commit_hash_before": "2627dc5ee4ed60c0250ce5a9e99d586d480603f2",
        "commit_hash_current": "cb7620395a18caace541e66b7637194d89ef8d21",
        "refactoring_type": "pure",
        "justification": "In this commit, there are no changes to the behavior or functionality of the code. The only observable change is an update to the version number in the pom.xml file and an addition of a new import statement for SocketTimeoutException in Requester.java. However, since the newly imported exception type doesn't seem to be used anywhere in the provided diff, it appears to be a preparation or cleanup action for future changes rather than affecting the current functionality. Thus, this refactoring qualifies as 'pure'.",
        "commit_message": "[JENKINS-45142] Retry connections after getting SocketTimeoutException."
    },
    {
        "repository": "https://github.com/kohsuke/github-api",
        "commit_hash_before": "be081eec3ff24317bb6423a11230712c2107e2b3",
        "commit_hash_current": "692dccf110ceb2281c1d8ac887b6a66c70387f3a",
        "refactoring_type": "pure",
        "justification": "The code changes in the diff only involve renaming variables, methods, and classes without changing their behavior or functionality. There are no new features added, no bugs fixed, and no changes to behavior or outputs of methods. Additionally, there is no evidence of any changes that could affect behavior or functionality. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "Massaging the change a bit"
    },
    {
        "repository": "https://github.com/BaseXdb/basex",
        "commit_hash_before": "4b5b6184106a7d3167852c3e82cc29ad421385aa",
        "commit_hash_current": "2d3d09296e21db1072ea2aea6b9eb2213e3de931",
        "refactoring_type": "pure",
        "justification": "The commit appears to have made changes only in the organization of the code, renaming classes and restructuring the test file. There are no apparent functional changes or bug fixes; instead, it seems like an attempt to clean up the codebase for better readability and maintainability.",
        "commit_message": "[MOD] XQuery: optimize detection of updating queries"
    },
    {
        "repository": "https://github.com/BaseXdb/basex",
        "commit_hash_before": "2d3d09296e21db1072ea2aea6b9eb2213e3de931",
        "commit_hash_current": "eb59dd9754a987bb32469d43d5863d4de014a942",
        "refactoring_type": "pure",
        "justification": "The commit consists of renaming variables and methods without changing their behavior, extracting methods without altering functionality, reorganizing code structure while maintaining the same behavior, and simplifying conditional logic without changing the outcomes. These changes are considered as 'pure' refactoring.",
        "commit_message": "[MOD] XQuery: refactoring of query resources (preparing #878)"
    },
    {
        "repository": "https://github.com/BaseXdb/basex",
        "commit_hash_before": "2ef2e620a04b1557fe9170ac9fe760b426f8a55e",
        "commit_hash_current": "d76fabd29ed77de84b22cb3c3e476daf52b63124",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit primarily restructure the code without changing its behavior or functionality. The purpose of the changes appears to be to simplify the code, extract methods, and improve readability.",
        "commit_message": "[ADD] XQuery, xquery:update() (#878)"
    },
    {
        "repository": "https://github.com/BaseXdb/basex",
        "commit_hash_before": "d76fabd29ed77de84b22cb3c3e476daf52b63124",
        "commit_hash_current": "4701835afa4c1f927c5071c37d8ed50a1b58da0f",
        "refactoring_type": "pure",
        "justification": "The commit does not appear to introduce any new functionality or change existing behavior. Instead, it modifies options related to only-updates mode and mix-updates mode without altering the underlying code structure. This indicates a pure refactoring.",
        "commit_message": "[MOD] XQuery: ONLYUPDATES \u2192 MIXUPDATES"
    },
    {
        "repository": "https://github.com/BaseXdb/basex",
        "commit_hash_before": "4701835afa4c1f927c5071c37d8ed50a1b58da0f",
        "commit_hash_current": "43497287e863c6f4317ab749ca7fe6a829e4452b",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit appear to be focused on improving consistency and readability by changing the method used to add collections and documents. This refactoring does not seem to alter the functionality or behavior of the code, as indicated by the absence of any noticeable changes in function names, logic, or output.",
        "commit_message": "[FIX] XQuery, #896, no immediate dep. check when importing repo modules."
    },
    {
        "repository": "https://github.com/caelum/caelum-stella",
        "commit_hash_before": "3ab712d15a39e76d7031fe2bbae882a5efd8d1e0",
        "commit_hash_current": "655678b32399720c582b3886d59500b4948576dc",
        "refactoring_type": "pure",
        "justification": "The code changes involve the addition of a new import for DigitoPara class, and the refactoring of the calcularDigitoVerificador method to use this new import. However, there are no behavioral modifications or bug fixes observed in the code. Instead, it seems that the method has been made more readable and maintainable by using a utility class for calculating digits, which indicates pure refactoring.",
        "commit_message": "Ajustar para utilizar a classe DigitoPara"
    },
    {
        "repository": "https://github.com/caelum/caelum-stella",
        "commit_hash_before": "7440025d7e7667309831a43969ad4163071199b2",
        "commit_hash_current": "ac19ee45dfaef38901987f28831dc2d41efd08a6",
        "refactoring_type": "pure",
        "justification": "In this commit, there are no functional changes or bug fixes visible in the code diff. The only change is the renaming of the method `calcularDigitoVerificador` to `calcularDigitoVerificadorNossoNumero`. This change does not affect the behavior of the method as it still accepts the same argument and performs the same calculations based on the provided context. Therefore, this commit represents 'pure' refactoring.",
        "commit_message": "Alterar nome do m\u00e9todo"
    },
    {
        "repository": "https://github.com/throrin19/Android-Validator",
        "commit_hash_before": "91074ab04608578a975ab50002966992eba8325e",
        "commit_hash_current": "a8e58afe7673e255005ee917bf24f26a1aff4165",
        "refactoring_type": "pure",
        "justification": "The code changes in the diff focus solely on improving code structure, readability, and maintainability by refactoring methods and variables. There are no functional changes or bug fixes observed in the provided code snippets. The behavior of the code remains unchanged since the code structure changes have not affected the logic of the methods.\n\nFor example: \n- The `BaseValidate` class's method signatures remain the same, but their names were changed for better readability (e.g., 'isValid()' replaced 'isAllValidatorsValid()').\n- The loop implementation was changed from a while loop to a for loop in the `ConfirmValidate.java` file.\nThese changes are considered pure refactoring as they don't affect the functionality of the code.",
        "commit_message": "Refactor class. Change variables names to be more consistent."
    },
    {
        "repository": "https://github.com/apache/jackrabbit-oak",
        "commit_hash_before": "606ec0892c8dab3436d508c8cd0b4e603181bc04",
        "commit_hash_current": "50e1382b211e19ab3e7afb6f03cccf000bba7795",
        "refactoring_type": "pure",
        "justification": "The commit does not appear to change any functionality or behavior. It only involves renaming classes, methods, and variables, and extracting a utility class without changing the existing code's behavior. This is indicative of a 'pure' refactoring.",
        "commit_message": "OAK-1684 Non-blocking reindexing doesn't save the initial checkpoint\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1585680 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/jackrabbit-oak",
        "commit_hash_before": "50e1382b211e19ab3e7afb6f03cccf000bba7795",
        "commit_hash_current": "62aa0531fcc8be4e14c755cd51e7820da2b7dfd0",
        "refactoring_type": "pure",
        "justification": "The commit appears to consist of structural changes in the code, such as adding new conditions to check for fulltext queries and modifying some query-building logic. However, there is no evidence of any changes to behavior or functionality. The code still performs the same function, but in a slightly different way. This indicates that this is a pure refactoring.",
        "commit_message": "OAK-1696: Repository fails to restart on Windows\n\nAvoid memory-mapping a tar file before we're sure that it has a valid index.\nMake the recovery code in TarReader more resilient against unexpected problems.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1586364 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/jackrabbit-oak",
        "commit_hash_before": "64eebd7fcb04d552504504fec43d8acdff335d6b",
        "commit_hash_current": "0dbf09cc86a65e9ef6554b785602d2d94db2d12b",
        "refactoring_type": "pure",
        "justification": "The commit seems to be focusing on organizing the code, renaming variables, extracting methods without altering functionality, and reorganizing code structure while maintaining the same behavior. There are no apparent changes to behavior or functionality.",
        "commit_message": "OAK-1732: Cluster node lease not renewed in time\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1587538 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/solr",
        "commit_hash_before": "91a45c9b64364a4dda62b4c6cd5ec15380050a5e",
        "commit_hash_current": "1d73d0108062c4b1cc395f00e694bf1c5db224b9",
        "refactoring_type": "pure",
        "justification": "The commit primarily removes and comments out code related to the Velocity and XSLT response writers. Removing functionality does not necessarily mean it has been changed, so this refactoring is considered 'pure'. The removal of the VelocityResponseWriter class suggests it was no longer being used, but the change doesn't affect the overall functionality or behavior of Solr.",
        "commit_message": "OAK-1775: Avoid lock contention in IndexTracker.getIndexNode()\n\nUse a ReadWriteLock instead of exclusive synchronization.\nAlso refactor getIndexNode() into acquireIndexNode() so we can better\ntrack which IndexNode instances are still in use and correctly close\nobsolete ones when no longer accessed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1590697 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/jackrabbit-oak",
        "commit_hash_before": "43b36333039951477707c7e51357d627d253eb65",
        "commit_hash_current": "d6e257dca04e9d509718042bd9209212a9d4be50",
        "refactoring_type": "pure",
        "justification": "The commit adds new functionality (TarFile) alongside the refactoring of existing code in VersionGarbageCollectorTest and TarFileTest. However, upon closer inspection, the changes seem to be purely structural and do not appear to alter the behavior or functionality of either class.",
        "commit_message": "OAK-1780: Faster TarMK cleanup\n\nStore a precompiled version of the segment graph at the end of the tar file along with the segment index.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1591101 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/addthis/hydra",
        "commit_hash_before": "00f5f9d9fd5f6d5d3b51b2f3ef74fe4d9be4f523",
        "commit_hash_current": "c984395e6f1c574dcd4bfab007214be359295f0c",
        "refactoring_type": "pure",
        "justification": "The code changes appear to be purely organizational in nature, with no functional changes or additions. The changes involve the introduction of Netty channels and promises, but their implementation does not seem to affect the overall behavior or functionality of the program.",
        "commit_message": "mostly working again; many changes; mostly good\n\n- couple edge case error handling things. I am pretty sure a few\nexceptionCaughts should take care of them\n- need to change UI to better use changed query details end point\n- need to finish re-enabling query queue\n- need to unschedule / reschedule processing when writability changes\nand also possibly expose that logic for query ops. Might just have to\nmake them more handler-like as well, or jam the backoff into result\nthing.\n- need to finish cleaning up concurrency constructs that are no\nlonger needed and document new contracts"
    },
    {
        "repository": "https://github.com/addthis/hydra",
        "commit_hash_before": "00f5f9d9fd5f6d5d3b51b2f3ef74fe4d9be4f523",
        "commit_hash_current": "c984395e6f1c574dcd4bfab007214be359295f0c",
        "refactoring_type": "pure",
        "justification": "The changes made in this commit are primarily structural, such as renaming variables, methods, and classes without affecting their functionality. There are also some minor changes to the way promises and executors are used, but these do not alter the behavior of the code. Additionally, there is a new import for netty channel progressive promise, but it's only used in conjunction with data channels which have not been altered in any significant way that would affect their functionality.",
        "commit_message": "mostly working again; many changes; mostly good\n\n- couple edge case error handling things. I am pretty sure a few\nexceptionCaughts should take care of them\n- need to change UI to better use changed query details end point\n- need to finish re-enabling query queue\n- need to unschedule / reschedule processing when writability changes\nand also possibly expose that logic for query ops. Might just have to\nmake them more handler-like as well, or jam the backoff into result\nthing.\n- need to finish cleaning up concurrency constructs that are no\nlonger needed and document new contracts"
    },
    {
        "repository": "https://github.com/addthis/hydra",
        "commit_hash_before": "8f923bd34b7452f1619f23005db36c60e5cd8565",
        "commit_hash_current": "fb11573760ca485dadaaebac2f741f40d4d31f9f",
        "refactoring_type": "pure",
        "justification": "The commit primarily renames the class `TaskDataOutputChain` to `DataOutputTypeList` and adds a new property `copy`. However, there are no changes in behavior or functionality that indicate 'floss' refactoring. The changes are purely structural and do not affect the output of methods.",
        "commit_message": "reservoir data attachment naive model fitting."
    },
    {
        "repository": "https://github.com/addthis/hydra",
        "commit_hash_before": "fb11573760ca485dadaaebac2f741f40d4d31f9f",
        "commit_hash_current": "c9ca3f63e18203a61473f34a90d573d427b4c287",
        "refactoring_type": "pure",
        "justification": "The commit consists primarily of refactoring changes such as renaming variables, methods, and classes without altering their behavior or functionality. There are no indications of new features, bug fixes, changes to behavior, or additions of new parameters that would suggest floss refactoring.",
        "commit_message": "fixes and cleanup for query system\n\n- table factory moved to delegation for op processor and\nconstructors weakened and fix accordingly\n- various promise objects renamed to be more accurate\n- QueryOp.close is no longer daisy chained (to simplify error\nsuppression and isolation from other QueryOps)\n- QueryOp.close should now reliably be called for every op object\n- switch and map used to construct QueryOp objects factored into\nthe already existing enum\n- OpLimit.sendComplete should no longer ever be called twice (even\nwithout the extra done guard)\n- cancellations and other misc. errors should be detected by\nqueries in ops more rapidly (ones that check the query promise at\nleast -- eg. disk sort)\n- a few misc clean ups in various query ops\n- the initial http 200 response should once again be deferred\nuntil the string buffer is full -- not just until the first bundle\nis written. This allows for more user-friendly error reporting\nunder more circumtances"
    },
    {
        "repository": "https://github.com/addthis/hydra",
        "commit_hash_before": "d8754b738d55ce511e4817cc34819369a9a3e2ce",
        "commit_hash_current": "50ce9ccdc62e9d8eda613b16f8bc5cf375b900d7",
        "refactoring_type": "pure",
        "justification": "The commit removes unused code and files, adjusts the project's version number, and modifies the build process. These changes do not seem to affect the functionality or behavior of the software. It is a pure refactoring aimed at improving maintainability and cleanliness.",
        "commit_message": "support run and validate tasks via codec config\n\ncustom commands run off codec config via the hocon runner class (\npreviously it just parsed into json and fed back to the normal\njson-based task runner). to make things easier and to support\njob validation (which ignores the command), I added autodetection.\n\nthe autodetection is a bit of a hack atm -- if CodecJSON complains\nabout the lack of top-level braces, then we retry with CodecConfig."
    },
    {
        "repository": "https://github.com/Kickflip/kickflip-android-sdk",
        "commit_hash_before": "3d8f881d7f034ed0c744785a55005eb65d453407",
        "commit_hash_current": "2624090988215488f6ebdec39f1ebb3a87d5f753",
        "refactoring_type": "pure",
        "justification": "In this commit, there are no functional changes or bug fixes. The code refactoring consists of adding two variables (totalSamplesNum and startPTS) and making adjustments to the existing getJitterFreePTS method by renaming some variables and changing a few calculations. These changes only affect the internal structure of the MicrophoneEncoder class and do not alter its behavior or functionality. Therefore, this commit represents 'pure' refactoring.",
        "commit_message": "Improved getJitterFreePTS(): instead of adding the duration of each buffer frame, add the number of samples. This way, rounding errors do not accumulate"
    },
    {
        "repository": "https://github.com/ApmeM/android-flowlayout",
        "commit_hash_before": "a52fad5eb066d347c58fe83b9ff8982f938832e6",
        "commit_hash_current": "e8447b2cb7358ae91852c7ca4c5855eccb6666c4",
        "refactoring_type": "pure",
        "justification": "The commit introduces new classes and resources for the FlowLayout library, but none of the changes appear to alter existing functionality. The code reorganization includes creating new classes for LineDefinition, LayoutConfiguration, and modifying the attrs.xml file to include new attributes such as fillLines, debugDraw, weightSum, and weightDefault. These additions seem intended to expand the capabilities of the library without affecting its current behavior.",
        "commit_message": "[SPLIT] logic into several classes"
    },
    {
        "repository": "https://github.com/ApmeM/android-flowlayout",
        "commit_hash_before": "e8447b2cb7358ae91852c7ca4c5855eccb6666c4",
        "commit_hash_current": "38526e68dfe41ce3ac0c7bc7ba74e129fd27e7df",
        "refactoring_type": "pure",
        "justification": "This commit introduces a new class `ViewContainer` to encapsulate the spacing information between views. However, the changes do not affect the overall functionality or behavior of the existing codebase. The modifications are limited to the addition and reorganization of classes and methods without altering their original purpose.",
        "commit_message": "[ADD] gravity to layout itself."
    },
    {
        "repository": "https://github.com/gitblit/gitblit",
        "commit_hash_before": "1b34b05f5b8d2d0fd51819b286e22d7ddd27cb27",
        "commit_hash_current": "c828cf2db88956094a31a79741145688876879df",
        "refactoring_type": "pure",
        "justification": "The code changes in the commit introduce dependency injection via Guice, but there are no behavioral or functional changes observed. The modifications primarily affect how the classes are initialized and interact with each other.",
        "commit_message": "Use Guice-Servlet rather than custom code and expose the Injector\n\nThis is a fairly functional variation of Gitblit with one notable\nexception:\n\n    The security filters are not working properly.\n\nThis is a design flaw in Guice that I have reported upstream [1].  The\ngeneral idea is that Guice-Servlet filters are not properly wrapping the\nServletRequest. This has historically been a problem for Guice-Servlet\nservlets but Google has fixed most of those issues.  Unfortunately, all\nthe same flaws reported against the servlet delegation also exist in\nGuice-Servlet filter delegation. :(\n\n[1]: https://code.google.com/p/google-guice/issues/detail?id=807"
    },
    {
        "repository": "https://github.com/gitblit/gitblit",
        "commit_hash_before": "c828cf2db88956094a31a79741145688876879df",
        "commit_hash_current": "7d3a31514afbe88664081b4ea57cd7939de99014",
        "refactoring_type": "pure",
        "justification": "The commit changes the dependencies used for building Gitblit. The change to google-guice from another dependency (not specified) is a pure refactoring, as it doesn't seem to alter any functionality or behavior of Gitblit.",
        "commit_message": "Extract services manager into a top-level injectable manager"
    },
    {
        "repository": "https://github.com/gitblit/gitblit",
        "commit_hash_before": "7b6c1bdaba9877397ffdaf0c8641196cfb060c39",
        "commit_hash_current": "be49ef9b1b2ab0ee251085efd5930b6f99bbced9",
        "refactoring_type": "pure",
        "justification": "The code changes in the provided diff focus on organizing and restructuring existing code without modifying behavior or functionality. For example, the 'git.sshKrb5StripDomain' configuration value is now set to a boolean literal 'true', and 'SshKrbAuthenticator' constructor accepts an IStoredSettings object which includes all relevant settings including 'git.sshKrb5StripDomain'. Additionally, the conditional logic within the SshKrbAuthenticator class remains unchanged with this refactoring.",
        "commit_message": "Address review comments"
    },
    {
        "repository": "https://github.com/eclipse/smarthome",
        "commit_hash_before": "55695547fadabf91faf0880c066ad5a817cc4993",
        "commit_hash_current": "d1263ee7084d035ad26923c7094b2771152e092b",
        "refactoring_type": "pure",
        "justification": "The commit introduces some changes in the code, such as renaming a class from RuleEngine to RuleEngineImpl and adding an exported package for org.eclipse.smarthome.model.rule.runtime. However, these changes do not seem to alter the behavior or functionality of the code. The removed debug logging code and the addition of a new interface without any implementation are also purely structural changes. Additionally, there are no functional changes or bug fixes in the commit.",
        "commit_message": "Bug #423516: RuleEngine is no longer automatically activated. It is only activated as soon as somebody requests it as a service.\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>"
    },
    {
        "repository": "https://github.com/Slowpoke101/FTBLaunch",
        "commit_hash_before": "346621d087490e8642478b1576f8e0d7799e3e31",
        "commit_hash_current": "ffcf858252b585fb6a98854e662d7c0a66edb2d0",
        "refactoring_type": "pure",
        "justification": "The commit introduces changes to the code structure and imports, but these changes do not appear to alter any existing functionality or behavior. The main focus seems to be on reorganizing the code and making use of Lombok and other libraries for improved development experience. However, it is important to note that without running the code, we cannot be completely certain that there are no functional changes.",
        "commit_message": "Updated I18N"
    },
    {
        "repository": "https://github.com/Slowpoke101/FTBLaunch",
        "commit_hash_before": "ffcf858252b585fb6a98854e662d7c0a66edb2d0",
        "commit_hash_current": "d964517f69f67c3bf40c4e6b545224b41bfe6397",
        "refactoring_type": "pure",
        "justification": "The commit includes several changes that are purely structural and do not seem to affect the behavior or functionality of the code. These include renaming variables, reorganizing class structure, extracting methods, and simplifying conditional logic. Additionally, there is no evidence of any bug fixes or addition of new features. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "Misc tweaks to I18N, force settings to be saved upon launcher close"
    },
    {
        "repository": "https://github.com/Slowpoke101/FTBLaunch",
        "commit_hash_before": "a3313da0149a1ed32b6f3531c60c592ef4822a79",
        "commit_hash_current": "e25fb0407d8f9c774d0c2b87efd6e2931be79dfd",
        "refactoring_type": "pure",
        "justification": "The commit adds new classes and interfaces for organizing the code, but there are no changes to existing functionality or behavior. The changes appear to be focused on improving the structure of the codebase.",
        "commit_message": "Misc UI Update"
    },
    {
        "repository": "https://github.com/Slowpoke101/FTBLaunch",
        "commit_hash_before": "e25fb0407d8f9c774d0c2b87efd6e2931be79dfd",
        "commit_hash_current": "44b235d3b672512c801c0a1e365a31b78d0f11a7",
        "refactoring_type": "pure",
        "justification": "The commit mainly focuses on reorganizing the layout of the Java classes and adding a LightBarScrollPane component for better presentation. The changes do not seem to alter any functionality or behavior, making this a pure refactoring.",
        "commit_message": "Update"
    },
    {
        "repository": "https://github.com/Slowpoke101/FTBLaunch",
        "commit_hash_before": "9eba311dc21b77af41b529cea84f87554c185414",
        "commit_hash_current": "fd28aa7a00f77d66f241e85c1bfe7a04e6fc3b4a",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit primarily involve adding a new class called TrayMenu, which extends PopupMenu and implements ItemListener. This class is responsible for handling the show/hide functionality of the console window from the system tray menu. However, there are no visible functional changes to the existing codebase or behavior. The existing LauncherConsole class remains unchanged, and its visibility is modified by the new TrayMenu class when certain conditions are met. This indicates that this commit involves structural refactoring (addition of a new class) without any modifications to the existing functionality, making it a 'pure' refactoring.",
        "commit_message": "CHANGED: reimplemented LauncherConsole\n\n * Use JTextPane instead of JEditorPanel+HTMLEditorKit\n * Added SmartScroller library\n   * Automatically stop scrolling if scrollbrar is not bottom\n * Reordered code in Main and TrayMenu to minimize missed log messages"
    },
    {
        "repository": "https://github.com/robert-bor/aho-corasick",
        "commit_hash_before": "285a74c37f678e23cb827cf2f4fa1211709dcc65",
        "commit_hash_current": "9bce51e00121ec8281e6ed8ebc3fe05b2d43407c",
        "refactoring_type": "pure",
        "justification": "The commit introduces a static method to the Trie class for creating an instance of the class with predefined settings. This change does not seem to alter any existing functionality or behavior in the codebase.",
        "commit_message": "Issue #16 Use builder pattern to create Trie\n\nPreviously, there was a race condition in Trie#parseText since\nit called constructFailureStates on first run without synchronization.\nSee https://github.com/robert-bor/aho-corasick/issues/16\n\nThis commit fixes this by using the builder pattern in order to\ncreate a fully initialized Trie.\n\nN.B. This changes the API"
    },
    {
        "repository": "https://github.com/robert-bor/aho-corasick",
        "commit_hash_before": "9bce51e00121ec8281e6ed8ebc3fe05b2d43407c",
        "commit_hash_current": "88799fb3da93edb2268a82ed65c5d8de4d3756e1",
        "refactoring_type": "pure",
        "justification": "The commit adds a new test class ParseConfigurationTest, which includes tests for the ParseConfiguration class's behavior with different input configurations. However, it does not seem to change any existing functionality or introduce any new features. Instead, it appears to be focused on testing and validating the current codebase.",
        "commit_message": "Issue #23 added callback handler concept which omits the custom setting up of a list, but instead places direct calls to the handler. The handler are only supported on the lowest level of aho-corasick, ie no overlap, whole words and token support\nAlso added the possibility to pass a reader to the same level as above."
    },
    {
        "repository": "https://github.com/greenrobot/EventBus",
        "commit_hash_before": "cf6f736057c3f4bfe23495c4fe562b4636fd872c",
        "commit_hash_current": "9bd7391bf8fee11be781d34d1cbce4d861fd4249",
        "refactoring_type": "pure",
        "justification": "The commit appears to be purely a renaming of the annotation processor module in the settings.gradle file and does not seem to affect functionality or behavior.",
        "commit_message": "EventBusAnnotationProcessor for creating a subscriber index during build"
    },
    {
        "repository": "https://github.com/greenrobot/EventBus",
        "commit_hash_before": "ecfc93a28059c021eadea45381bcb891cd2aa9b8",
        "commit_hash_current": "7952c05234bb845552599fe86148112eb2bcf20c",
        "refactoring_type": "pure",
        "justification": "The code diff shows changes in naming conventions and class organization without any apparent changes to the functionality or behavior of the code. For example, 'eventBus.registerSticky(this)' is replaced with 'eventBus.register(this)', and classes like NonStickySubscriber are introduced. These changes do not seem to affect the output or functionality of the code.",
        "commit_message": "subscriber priority and stickyness are now part of @Subscribe"
    },
    {
        "repository": "https://github.com/greenrobot/EventBus",
        "commit_hash_before": "d0e4303b32b36c265b3e8550cb1e7f3f2bdfb3f6",
        "commit_hash_current": "26a00665106eeadd3f8c6249fe9e670ffd3483db",
        "refactoring_type": "pure",
        "justification": "The changes in the commit consist mainly of renaming constants, methods, and class names within strings.xml, TestRunnerActivity.java, PerfTestEventBus.java, EventBusMainThreadTest.java files. These naming changes do not seem to alter the functionality or behavior of the code. As a result, this refactoring can be classified as 'pure'.",
        "commit_message": "SubscriberInfo super class"
    },
    {
        "repository": "https://github.com/greenrobot/EventBus",
        "commit_hash_before": "72e080b330b12773daa47585559fd99a66fd93d5",
        "commit_hash_current": "6a37ce715294cccc57586fd4f00352319c0899f7",
        "refactoring_type": "pure",
        "justification": "The commit changes the package name of several classes, but it does not alter their functionality or behavior. This is a pure refactoring aimed at better organizing the code structure.",
        "commit_message": "reworked EventBusAnnotationProcessor, dynamic creation of SubscriberMethod by subscriber index"
    },
    {
        "repository": "https://github.com/greenrobot/EventBus",
        "commit_hash_before": "6a37ce715294cccc57586fd4f00352319c0899f7",
        "commit_hash_current": "89bb5357d7ac0bcf45696a86832cc9ee67650039",
        "refactoring_type": "pure",
        "justification": "The commit introduces a check for anonymous classes and adds an exception if an anonymous class is encountered during registration. However, these changes do not alter the behavior or functionality of the code. Instead, they focus on improving code structure and readability, making it a pure refactoring.",
        "commit_message": "generate super class hierarchy and consider method inheritance"
    },
    {
        "repository": "https://github.com/alkacon/opencms-core",
        "commit_hash_before": "9e4309b17ff1c9cc1665ce660e7611676d11c27d",
        "commit_hash_current": "23208c4091c8dfc0f9481784c672418599123815",
        "refactoring_type": "pure",
        "justification": "The commit introduces new servlets for handling workplace UI requests and mapping them to specific URL patterns. However, the functionality remains unchanged, and there are no indications of behavior or output changes in the code.",
        "commit_message": "Adding support for a Vaadin based workplace UI."
    },
    {
        "repository": "https://github.com/alkacon/opencms-core",
        "commit_hash_before": "70e45817ceeb3a6c6f3912e127b468a15ae7089d",
        "commit_hash_current": "66ad145e2afe6239f640c6266ffd6c824067d72c",
        "refactoring_type": "pure",
        "justification": "The commit appears to change the Lucene version used by the Solr instance and move the solrconfig.xml file from spellcheck directory to the spellcheck subdirectory of solr, but there are no changes in behavior or functionality that could be observed.",
        "commit_message": "Updating to Lucene/Solr 5.1"
    },
    {
        "repository": "https://github.com/alkacon/opencms-core",
        "commit_hash_before": "810a289c2d678d987c40ea3d0aeacf3803c34cf1",
        "commit_hash_current": "c8f6043124d39ab51825afa309100e702da40eb6",
        "refactoring_type": "pure",
        "justification": "The commit changes the analysis of some fields in the schema.xml file, but there is no evidence of any functional or behavioral changes. The new field 'search_channel' has been added while other fields such as 'containerTypes' and 'additionalInfo' have been renamed to 'container_types' and 'additional_info', respectively. However, these changes do not affect the functionality or outputs of the code.",
        "commit_message": "Integrated remaining changes from branch_9_0_x_solr + fix in Solr\nconfiguration:\n- Based Gallery search on Solr offline\n- Integrated correction of Solr highlighting result (Type mismatch\nList<String> vs. String[] in original result)\n- Fix: replaced SnowballAnalyzer in Solr configuration (does not exist\nin Solr 5.1 anymore)\n- more fixes taken from branch_9_0_x_solr"
    },
    {
        "repository": "https://github.com/alkacon/opencms-core",
        "commit_hash_before": "61748958c096cefd38e0285a16b719cdba5c29bc",
        "commit_hash_current": "5012c49a3031e7b5149a8eca33cba9d8ec3832f1",
        "refactoring_type": "pure",
        "justification": "The commit introduces new theme files and styles but does not appear to change any existing functionality or behavior. The code modifications include creating new variable, SCSS, and image files as well as updates to _variables.scss and _opencms.scss. This refactoring seems to be focused on organizing the code structure and improving the appearance of the theme without affecting its functionality.",
        "commit_message": "Adding replace all element instances feature to former copy models."
    },
    {
        "repository": "https://github.com/skadistats/clarity",
        "commit_hash_before": "a3ccea1eb88bc09e6bb6df7e32a54c69233d2f5c",
        "commit_hash_current": "4082f902debc20ab732f842ea87e3cee92531ef1",
        "refactoring_type": "pure",
        "justification": "The commit only contains changes to the code structure, such as renaming variables and methods, extracting methods, reorganizing code, and simplifying conditional logic. These changes do not appear to affect the behavior or functionality of the code.",
        "commit_message": "remove remnants of clarity V1\npackage renaming"
    },
    {
        "repository": "https://github.com/square/okhttp",
        "commit_hash_before": "8e0a87a37436b645481b58216df84f01fed10d3e",
        "commit_hash_current": "4ef805fa1d9f7451a0a8498d03c45c289c3703e1",
        "refactoring_type": "pure",
        "justification": "The code changes in the provided diff do not introduce any functional changes or new features. Instead, they focus on improving readability and maintainability through refactoring. The most evident example of this is the change from a for-each loop to a traditional for loop in the ConnectionPool.java file. This change does not affect the functionality but enhances the code structure. Similarly, the Util.java file undergoes several structural changes without altering its behavior. Lastly, the modification in RouteSelector.java involves only organizational adjustments of the ConnectionSpec list without impacting the overall functionality. These changes indicate that the commit represents pure refactoring.",
        "commit_message": "Remove some needless allocations.\n\nThese individually do not contribute a lot, but as a whole end up being seen on allocation tracker."
    },
    {
        "repository": "https://github.com/SomMeri/less4j",
        "commit_hash_before": "1e8025fa2b11dd9c96b88547d2a057ef81e6646f",
        "commit_hash_current": "bde2b7e669c4a87fb3046be818d6a775bfc94fc2",
        "refactoring_type": "pure",
        "justification": "The commit consists of structural changes without any apparent alterations to the behavior or functionality of the code. The changes include renaming variables, methods, and extraction of methods without modifying their function, as well as simplification of conditional logic. Additionally, there are no bug fixes or new features added in this refactoring.",
        "commit_message": "Messy refactoring so I can fix the \"attempt to compile guarded mixins and\nthus fails\" problem. #275"
    },
    {
        "repository": "https://github.com/SomMeri/less4j",
        "commit_hash_before": "8c11e7828a01872d1fba010844460eb4a7df6535",
        "commit_hash_current": "08cd31de6e829a5a592e65e36ba92c99a48c12da",
        "refactoring_type": "pure",
        "justification": "The commit mainly contains structural changes in the code, such as adding a new mixin and moving some existing code. However, there is no evidence of changes to behavior or functionality in the provided diff. The for loop mixin has been modified slightly, but it does not seem to affect its functionality.",
        "commit_message": "Close #275 - compile mixin only if it is going to be used."
    },
    {
        "repository": "https://github.com/perwendel/spark",
        "commit_hash_before": "fb1f1d45af945fe8e1ef1884d2118565e8386217",
        "commit_hash_current": "bcc05c741ccab468f0bc6268a048400cc492ecda",
        "refactoring_type": "pure",
        "justification": "The commit mainly focuses on refactoring the example code for simpler syntax and improved readability. The changes do not alter the functionality or behavior of the existing code.",
        "commit_message": "Re-adding support for gzip compression based on the presence of a proper \"Content-Encoding\" header signaling that gzip should be in place"
    },
    {
        "repository": "https://github.com/perwendel/spark",
        "commit_hash_before": "4acfcaac5b7bc80f6b0b58bb3d9b2da2c17cc068",
        "commit_hash_current": "919f3a4ca0864868ad4d6188ff14084710685881",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit mainly consist of reorganizing the existing code structure, renaming variables and methods without changing their behavior or functionality. There are no apparent modifications that could lead to a change in output or behavior.",
        "commit_message": "Changed call name to done()"
    },
    {
        "repository": "https://github.com/perwendel/spark",
        "commit_hash_before": "26b57d0596ee73c14c558463943ef0857e53b91f",
        "commit_hash_current": "afeee2b48d7c63e7f1d58f72522a0c7c6b6d1502",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new method 'removeLeadingAndTrailingSlashesFrom' in StringUtils, and this change does not seem to affect the functionality of existing methods. The refactoring appears to be purely structural, as it improves the code readability by providing a utility function for removing leading and trailing slashes from strings.",
        "commit_message": "Some fixes. Checks made only when resource exists, leading/trailing (and back)slashes removed"
    },
    {
        "repository": "https://github.com/perwendel/spark",
        "commit_hash_before": "afeee2b48d7c63e7f1d58f72522a0c7c6b6d1502",
        "commit_hash_current": "83dcaa45dc9dfc3bfdf34a8a90d2c2f30dbab1ea",
        "refactoring_type": "pure",
        "justification": "The commit moved the StaticFilesTestExternal class to a new package and added an import statement for spark.Spark, but it did not change any of the functionality or behavior in the code. The changes are purely organizational.",
        "commit_message": "Enable opt-out possibility for mime type guessing"
    },
    {
        "repository": "https://github.com/perwendel/spark",
        "commit_hash_before": "77c854b6f6db7f5da111c338e85df0c474cd1f60",
        "commit_hash_current": "ae306c48bc7ddcd7e9ff2f97ce56cfaf578a6306",
        "refactoring_type": "pure",
        "justification": "The commit does not appear to add any new functionality or change behavior. Instead, it appears to be a refactoring of the code by changing data types and names of variables, methods, and classes without altering their functionality. The changes also include simplifying some conditional logic. However, since the focus is on code structure without affecting the outcomes, I classify this commit as 'pure' refactoring.",
        "commit_message": "rename from getPort to port to follow Spark conventions"
    },
    {
        "repository": "https://github.com/redsolution/xabber-android",
        "commit_hash_before": "14e17b78fbdc7eb854fcfbe9703cb4585e75a500",
        "commit_hash_current": "a405f276c641f5bf0ef2e87229206f8fd11c69ea",
        "refactoring_type": "pure",
        "justification": "The commit mainly focuses on renaming variables, methods, and resources as well as adjusting layout properties. There are no functional changes or additions of new features that could affect the behavior or functionality of the application. This indicates a 'pure' refactoring.",
        "commit_message": "Chat: work with input text simplified and refactored. Keyboard hided every chat change now."
    },
    {
        "repository": "https://github.com/redsolution/xabber-android",
        "commit_hash_before": "bfa625b465cc1c4216b4f250598b58cbc78375f1",
        "commit_hash_current": "431322314bf4b0b78e85613e7783186063af30d8",
        "refactoring_type": "pure",
        "justification": "The commit appears to only restructure the code without changing functionality. The removal of a class (RoomSelectFragment) and its associated methods, along with renaming variables and classes, suggests a refactor for better organization or readability, but no new features have been added and no existing behavior has been altered.",
        "commit_message": "Conference filter activity added - list of conferences can be filtered by typing. #503"
    },
    {
        "repository": "https://github.com/redsolution/xabber-android",
        "commit_hash_before": "118989c189906171208a4d0140232785ad9defb9",
        "commit_hash_current": "2a99789924b2f56d716a8a3d56350ffba0e53366",
        "refactoring_type": "pure",
        "justification": "The commit contains only structural changes without affecting the behavior or functionality of the code. Classes and methods have been renamed, and a new class has been added for ContactListGroupUtils, but their functionality remains the same.",
        "commit_message": "Contact list refactoring"
    },
    {
        "repository": "https://github.com/redsolution/xabber-android",
        "commit_hash_before": "a5d4d23e9746c1da9b89a8074687a7d3deefafa3",
        "commit_hash_current": "23c5aa65fe5dcdc1b9e34609f2171fcfbfe26ee4",
        "refactoring_type": "pure",
        "justification": "The commit introduces new layout files for the search toolbar, but there are no changes to existing functionality or behavior. The additions appear to be solely structural changes, such as renaming variables and adding new views, which indicates a 'pure' refactoring.",
        "commit_message": "different crop library"
    },
    {
        "repository": "https://github.com/redsolution/xabber-android",
        "commit_hash_before": "f6a4735bc9c02c799c44cbe685d73f6556b696aa",
        "commit_hash_current": "2797c7cfdd98ef76d994a48f318d4bb2b8ec0f9f",
        "refactoring_type": "pure",
        "justification": "The commit adds the ReliableMessageDeliveryManager class and its methods to the project, but it does not seem to change any existing functionality. Instead, it extends the AbstractChat class with a new ReceiptRequestElement extension for reliable message delivery when the feature is supported. This can be considered a pure refactoring as it does not affect the behavior or functionality of the existing code.",
        "commit_message": "Implemented parsing incoming delivery receipt"
    },
    {
        "repository": "https://github.com/yammer/tenacity",
        "commit_hash_before": "981de750edd4edaec65c4f820340c5a2541106ab",
        "commit_hash_current": "db295ca760c22a742b26ed40dc4f6a151577ae19",
        "refactoring_type": "pure",
        "justification": "The commit contains only renaming of a variable and reorganization of imports, which do not affect the functionality or behavior of the code.",
        "commit_message": "ignored all failing tests for now to focus on the simplest one"
    },
    {
        "repository": "https://github.com/yammer/tenacity",
        "commit_hash_before": "db295ca760c22a742b26ed40dc4f6a151577ae19",
        "commit_hash_current": "048942a8c710ec9a7f81258d1a5948122df00ee6",
        "refactoring_type": "pure",
        "justification": "The commit primarily renames some variables and methods, extracts a few lines of code into separate methods for better organization, and simplifies the conditional logic in one function. These changes do not alter the functionality or behavior of the code.",
        "commit_message": "updated to current master and migrated it, code wise. tests still not passing"
    },
    {
        "repository": "https://github.com/yammer/tenacity",
        "commit_hash_before": "048942a8c710ec9a7f81258d1a5948122df00ee6",
        "commit_hash_current": "e7c98148a45b6e8a1710d238284437e82f347223",
        "refactoring_type": "pure",
        "justification": "The commit appears to be primarily focused on renaming a variable (from 'mock' to 'tenacityPropertyKeyFactoryMock') and making corresponding changes throughout the code. There are no noticeable changes in behavior or functionality, indicating this is a pure refactoring.",
        "commit_message": "Updated the test for when dw bug removed.\n\nNew Jersey client has a different architecture, so we don't need to test async/sync calls or different methods independently.\n- test that timeout actually occur when not enough set\n- test reconfiguration\n- test override\n\n(simpler tests now)"
    },
    {
        "repository": "https://github.com/yammer/tenacity",
        "commit_hash_before": "d56555aed6ca49472ba1c4818c9e592906e6273a",
        "commit_hash_current": "c6f57b0e39dfce301033e6354329a2b20b812ab8",
        "refactoring_type": "pure",
        "justification": "The commit primarily involves reorganizing the code structure and refactoring for improved readability and maintainability. There are no changes to behavior or functionality in the provided diff.",
        "commit_message": "updated to current master and migrated it, code wise. tests still not passing"
    },
    {
        "repository": "https://github.com/yammer/tenacity",
        "commit_hash_before": "c6f57b0e39dfce301033e6354329a2b20b812ab8",
        "commit_hash_current": "55152f6495a673d71f73975d3407407a4eeb069e",
        "refactoring_type": "pure",
        "justification": "The commit appears to be primarily a reorganization of code without any functional changes or alterations in behavior. It involves renaming variables and methods, and extracting constants to separate classes, which are common examples of 'pure' refactoring.",
        "commit_message": "ignored all failing tests for now to focus on the simplest one"
    },
    {
        "repository": "https://github.com/jayway/JsonPath",
        "commit_hash_before": "d7c5fc34ea253cb21a537547315100186851e293",
        "commit_hash_current": "454b7d49a34246b3629c7a20adefe503859aad34",
        "refactoring_type": "pure",
        "justification": "The commit removes unused imports, changes the order of some import statements, and refactors some variable names. However, none of these changes affect the functionality or behavior of the code.",
        "commit_message": "PathCompiler simplifications."
    },
    {
        "repository": "https://github.com/jayway/JsonPath",
        "commit_hash_before": "8647a607da8628b900c4229bee4a259925928560",
        "commit_hash_current": "6353b20ad426ab904441ff1841cb6b8f9b01391f",
        "refactoring_type": "pure",
        "justification": "The code change in this commit does not introduce any new functionality or modify existing behavior. Instead, it refactors the error message of a 'PathNotFoundException' to provide more detailed information about the type of object found and expected. This can be considered a pure refactoring as it focuses solely on improving readability and maintainability without altering the functional outcome.",
        "commit_message": "Fixed null issue."
    },
    {
        "repository": "https://github.com/mcharmas/Android-ReactiveLocation",
        "commit_hash_before": "1d4792b0feb56636fb95af726e940b63dd0447b4",
        "commit_hash_current": "33e37eff986ddd17e1992cf2eda337d5f7fa3f3a",
        "refactoring_type": "pure",
        "justification": "The code changes appear to be purely structural. The class names, method names, and variable names have been changed for better naming conventions without altering the functionality or behavior of the code.",
        "commit_message": "Some ranaming to match GMS api. Added some docs."
    },
    {
        "repository": "https://github.com/spring-projects/spring-hateoas",
        "commit_hash_before": "c8465c3773d9cb7d813307436ca9f04be4525fd8",
        "commit_hash_current": "47ab356327732eda6f517aae6fd9614b9278170b",
        "refactoring_type": "pure",
        "justification": "The code changes seem to only involve renaming a method from 'resource' to 'entityFromResource', without altering its functionality or adding any new behavior. This is an example of 'pure' refactoring as it simplifies the code structure while maintaining the same behavior.",
        "commit_message": "Removed some duplication from XhtmlWriter\nAdded bootstrap classes for form controls\nSee https://github.com/dschulten/hydra-java/blob/master/hydra-sample/service/src/main/java/de/escalon/hypermedia/sample/Config.java#L67 for an example how to set up for bootstrap"
    },
    {
        "repository": "https://github.com/spring-projects/spring-hateoas",
        "commit_hash_before": "47ab356327732eda6f517aae6fd9614b9278170b",
        "commit_hash_current": "99be3996a09404129b1fd17561722859038d401d",
        "refactoring_type": "pure",
        "justification": "The commit focuses on refactoring the code without any changes to behavior or functionality. It involves renaming variables, methods, and reorganizing code structure while maintaining the same behavior. The addition of new properties in classes doesn't seem to affect their original purpose.",
        "commit_message": "Added support for hidden fields"
    },
    {
        "repository": "https://github.com/spring-projects/spring-hateoas",
        "commit_hash_before": "f3195c7e06a41b841ebd75d2114a7f8dd839d1f7",
        "commit_hash_current": "f0df0c69f7c6f56d5ed9d5ef56de8e848b0f5a8a",
        "refactoring_type": "pure",
        "justification": "The commit only adds a new test case for a read-only select field in the XhtmlResourceMessageConverterTest class. This change does not alter the functionality or behavior of the existing code, but rather extends its capabilities to test for read-only input fields. Therefore, it is classified as 'pure' refactoring.",
        "commit_message": "Added support for readonly fields in request body input parameters"
    },
    {
        "repository": "https://github.com/spring-projects/spring-hateoas",
        "commit_hash_before": "def1def2e504d79185cb2d7c15b4f03df5f1d4ff",
        "commit_hash_current": "5441253b9adf0e9bc016ce0cd350357ac6881822",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new class and implements methods, but it doesn't seem to change the existing functionality or add new features. The changes are mainly structural, such as adding a new test case and refactoring some code organization.",
        "commit_message": "support @Import(include, exclude)\nwrite and read form input field names as property paths to support nested beans"
    },
    {
        "repository": "https://github.com/spring-projects/spring-hateoas",
        "commit_hash_before": "9394b87af725fbc6c8c39a4393852403b2ab7e8a",
        "commit_hash_current": "ea50a2e4e61cbff034bc8553c22a3359b333f3ae",
        "refactoring_type": "pure",
        "justification": "The commit primarily focuses on refactoring the codebase without any noticeable changes to behavior or functionality. Changes include renaming variables, methods, and classes (e.g., UberUtilsTest, RequestMethod), extracting methods, reorganizing code structure, and simplifying conditional logic. There are no additions of new features or bug fixes found in the provided code diff.",
        "commit_message": "Added transclude property to ResourceHandler\nAdded support for Uber.templated\nRender model only for POST, PUT, PATCH"
    },
    {
        "repository": "https://github.com/infinitest/infinitest",
        "commit_hash_before": "be25aa4265f652677ed7ed58fc937472e30a9da6",
        "commit_hash_current": "9bf7f1b59e6b3dbe77af75d1d3d517aa4876d63a",
        "refactoring_type": "pure",
        "justification": "The commit introduces a change in the naming convention of a constant, specifically PreferencesConstants.FAIL_BACKGROUND_COLOR to PreferencesConstants.FAILING_BACKGROUND_COLOR, and corresponding changes in various places within the codebase (e.g., tests). However, there is no indication that this change affects the functionality or behavior of the application.",
        "commit_message": "replaced usage of FailBackgroundColor and similar with FailingBackgroundColor and equivalents"
    },
    {
        "repository": "https://github.com/infinitest/infinitest",
        "commit_hash_before": "536d71dcbd4641584de403ac6c83d9bd3a9fe007",
        "commit_hash_current": "ef5a762701fbbc2dedeca6a7e7729d04082c6b8c",
        "refactoring_type": "pure",
        "justification": "The commit introduces new Java files for a JUnit 5 test project, but it does not seem to change the existing functionality or behavior. Instead, it appears to be setting up a new JUnit 5 testing environment by creating a 'settings.gradle' file and adding the necessary dependencies to a 'build.gradle' file. This change is mainly structural in nature, focusing on code organization and setup for testing, rather than changing existing functionality or introducing new features.",
        "commit_message": "test: upgraded Infinitest's own tests to JUnit5 (#354)\n\n* stop running tests inside JUnit4\n* added assertions when no exception is expected\n* fixed some issues detected by sonar\n* removed unnecessary public modifiers\n* replaced JUnit4's TemporaryFolder by JUnit5's @TempDir\n* replaced some assertions to use AssertJ"
    },
    {
        "repository": "https://github.com/tgwizard/sls",
        "commit_hash_before": "c08319a607dc8179c5c7b6ad5ea5706969b80309",
        "commit_hash_current": "db2a0bd15fd538020eb137c49805483f3c1c2f98",
        "refactoring_type": "pure",
        "justification": "The code changes only remove a test view from the layout file and do not affect the functionality or behavior of the app. This is considered as 'pure' refactoring since it does not introduce any new features, bug fixes, or changes to existing behavior.",
        "commit_message": "status page now works. lets begin that pull request."
    },
    {
        "repository": "https://github.com/github/android",
        "commit_hash_before": "f5b0aa39a73f7dc9d9586037a9992cd841896cb9",
        "commit_hash_current": "a23f58522dfd1214ab935d4d9b832142d3f5f248",
        "refactoring_type": "pure",
        "justification": "The commit introduces new classes and methods, but they are purely structural changes without any apparent change in functionality or behavior of the existing code. The codebase seems to be organized and restructured without affecting its core operations.",
        "commit_message": "Activities updated to use new SDK"
    },
    {
        "repository": "https://github.com/github/android",
        "commit_hash_before": "3e6fb8332246089a620734630f0f643417990316",
        "commit_hash_current": "b65bbf51371c35a3db20c7bc7e5c027498a3b781",
        "refactoring_type": "pure",
        "justification": "The commit mainly contains renaming of packages, classes, and methods without changing their functionality or adding new features. This qualifies as a 'pure' refactoring since it only reorganizes the code structure while maintaining the same behavior.",
        "commit_message": "Changed package name to com.github.pockethub.android"
    },
    {
        "repository": "https://github.com/mrniko/redisson",
        "commit_hash_before": "63543ced1c3b0b7d1c791130b2e043c85992dcd8",
        "commit_hash_current": "bbe5e7e71f2c50677696e60d7e31b099bcae8142",
        "refactoring_type": "pure",
        "justification": "The commit adds a new import, but it doesn't change the behavior or functionality of the code. The class and method names remain unchanged, and there are no changes to conditional logic, bug fixes, or new features. This refactoring appears to be purely structural in nature.",
        "commit_message": "ConnectionWatchdog added. #183"
    },
    {
        "repository": "https://github.com/mrniko/redisson",
        "commit_hash_before": "bbe5e7e71f2c50677696e60d7e31b099bcae8142",
        "commit_hash_current": "dd5bf7c353d8f9d6e673996ff251478ef0fa3e34",
        "refactoring_type": "pure",
        "justification": "The commit adds new features in the form of RedissonSetTest and RedissonTopicPatternTest classes, but no existing functionalities are altered. The code reorganization is purely for structuring purposes (e.g., moving imports, creating new classes) without any changes to the behavior or outputs.",
        "commit_message": "RedisClient pipeline support. #42"
    },
    {
        "repository": "https://github.com/mrniko/redisson",
        "commit_hash_before": "dd5bf7c353d8f9d6e673996ff251478ef0fa3e34",
        "commit_hash_current": "ea2ba453d4dc20feeaac234ba4ad3c12697452b1",
        "refactoring_type": "pure",
        "justification": "The commit adds tests, but the code changes only restructure the existing tests and test setup without altering their behavior or functionality. This is considered a 'pure' refactoring.",
        "commit_message": "RScriptAsync interface added. #186"
    },
    {
        "repository": "https://github.com/mrniko/redisson",
        "commit_hash_before": "ea2ba453d4dc20feeaac234ba4ad3c12697452b1",
        "commit_hash_current": "67fe978a5b6c612449be73eea969c54461695b66",
        "refactoring_type": "pure",
        "justification": "The commit appears to be focused on improving the organization and readability of the codebase by implementing the Override annotation for specific methods in a subclass. This change does not seem to alter the functionality or behavior of the code, making it a pure refactoring.",
        "commit_message": "CommandExecutor extracted, pubsub fixed. #42"
    },
    {
        "repository": "https://github.com/mrniko/redisson",
        "commit_hash_before": "103d0f6fd4adf8a33b5d2b7b47efd033067fe52e",
        "commit_hash_current": "83633b238f4ccb597390edc51093526c7c12b304",
        "refactoring_type": "pure",
        "justification": "The commit involves renaming the `RedisRunner.shutdown()` method to `RedisRunner.stop()` and similar changes in the test class, which are purely structural changes and do not affect the functionality or behavior of the code.",
        "commit_message": "Enhancements to handle redis server version during test\n\nAdded RedisVersion class\nMoved version related information from RedisRunner.RedisProcess to\nRedisVersion\nAdded code that performs redis version check on commands that only\navailable to redis at or above given version number\nEnabled RedissonGeoTest for all versions in travis (Should auto skip\nthe test class when version number mismatch)"
    },
    {
        "repository": "https://github.com/void256/nifty-gui",
        "commit_hash_before": "14f27622f98dbe07f051adfde91ebf640f82e243",
        "commit_hash_current": "7d0351cdcd7ce1cbc526aa393ab3c810724dff38",
        "refactoring_type": "pure",
        "justification": "The commit only contains renaming of variables, methods, and classes without changing their behavior or functionality. Additionally, there are no new features added or bug fixes made.",
        "commit_message": "feat: Added new padding layout node"
    },
    {
        "repository": "https://github.com/revetkn/restfb",
        "commit_hash_before": "1f0a2a0dcef785de1ba3c254fad08a0f9f13d0e2",
        "commit_hash_current": "53111e0e21393c997a0898cea97054fafc08e2bf",
        "refactoring_type": "pure",
        "justification": "The changes in this commit are primarily focused on adding a new JSON file and modifying some test files to include this new file. The existing functionality remains unchanged as there are no alterations to the behavior or outcomes of any methods. Additionally, no bug fixes were implemented alongside these changes.",
        "commit_message": "Issue #337 - photo comments return comments type instead of comment list"
    },
    {
        "repository": "https://github.com/revetkn/restfb",
        "commit_hash_before": "53111e0e21393c997a0898cea97054fafc08e2bf",
        "commit_hash_current": "2c8d36a21b05314d0fbec64e7372b57e6e82a178",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new method 'getImages' for the Photo class and modifies the existing test case to match the new method. However, it doesn't seem to affect the behavior or functionality of the existing methods, and instead only reorganizes the code by adding a new method. The existing methods like 'checkWithAlbum', 'checkFrom', and 'checkNameTags' still function as before.",
        "commit_message": "Issue #80 - new ExceptionGenerator classes added, Exception handling moved to these new classes"
    },
    {
        "repository": "https://github.com/revetkn/restfb",
        "commit_hash_before": "3b77cd31a060c4d90d361a243f78a3c113b02b4a",
        "commit_hash_current": "71f4ed75b87b516953743ed8ad35043e76795505",
        "refactoring_type": "pure",
        "justification": "The code changes in this commit appear to be purely structural. The class `PageRating` has been updated with new fields and methods related to the `publish_time`, `no_feed_story`, `data`, and other properties, but there is no evidence of any changes in behavior or functionality. Instead, it seems like an effort to accommodate new data from a different API version while keeping the existing structure intact.",
        "commit_message": "Issue #186 - page rating type fixed"
    },
    {
        "repository": "https://github.com/revetkn/restfb",
        "commit_hash_before": "71f4ed75b87b516953743ed8ad35043e76795505",
        "commit_hash_current": "49e3d251b46d2593ea7dc5d94a104b1555867361",
        "refactoring_type": "pure",
        "justification": "The code changes involve renaming an interface method and adding a new method to another class without altering their functionality, indicating pure refactoring. No behavior or functionality changes are present in the provided diff.",
        "commit_message": "Issue #352: access to facebook debug headers added, access to header fields added"
    },
    {
        "repository": "https://github.com/revetkn/restfb",
        "commit_hash_before": "2d93c835ff9664f6e3d0146c29e3a5dd70fdcd6d",
        "commit_hash_current": "b205d8fd8672b496dbb9c4416481fc311cdd26d5",
        "refactoring_type": "pure",
        "justification": "The commit makes changes to class names and method calls but does not seem to change the functionality or behavior of the code. The refactored classes are MessageTag, Post.MessageTag, SetterGetterTestBase, ApiCheckGenerator, setter/MessageTagTest, setter/PostTest, and test/resources/json/v2_5/page-callToActions.json. This indicates that the changes are structural, without affecting the program's functionality.",
        "commit_message": "Issue #364 - inner class MessageTag removed"
    },
    {
        "repository": "https://github.com/fernandezpablo85/scribe-java",
        "commit_hash_before": "d91f6ee0dd58c09c899bfc82888b1add63905a09",
        "commit_hash_current": "e088788a982940f8f4ef7a2a41d8580eadcc3e19",
        "refactoring_type": "pure",
        "justification": "The changes in this commit only involve renaming a class property, adding a new method parameter for the Verifier and changing the method signature to accept a String instead. The addition of a new method parameter does not seem to change the functionality or behavior of the methods. Furthermore, the commit message does not indicate any changes to the behavior or functionality of the classes.",
        "commit_message": "remove Verifier object, we just need Strings, 'code' for OAuth2 and 'oauthVerifier' for OAuth1"
    },
    {
        "repository": "https://github.com/FluentLenium/FluentLenium",
        "commit_hash_before": "ddd4795c1165906f6e72acd4d00e0a6b8712cda3",
        "commit_hash_current": "d6c34bbc550b5e2387523a89bdbb3cf6ba47a27a",
        "refactoring_type": "pure",
        "justification": "The commit does not seem to introduce any new functionality or behavior changes, instead it appears to be a reorganization and simplification of the code. The newly added test method 'seleniumWaitIsAvailable' is unlikely to affect existing functionality as it simply checks if the 'FluentWait' instance returned by the 'await().getWait()' call is indeed an instance of FluentWait.",
        "commit_message": "Increase test coverage for wait package."
    },
    {
        "repository": "https://github.com/FluentLenium/FluentLenium",
        "commit_hash_before": "70d15b00f394971c6cd3393ac1fc67f3c686dcb2",
        "commit_hash_current": "b1c578d2e4c8d628a56cf5d5f3a799286ccbf8ae",
        "refactoring_type": "pure",
        "justification": "The commit primarily changes method names and variable names for consistency, renaming 'takeScreenShot' to 'takeScreenshot', and 'takeHtmlDump' to 'takeHtmlDump'. There are no functional changes or additions of new features. Therefore, this is classified as a pure refactoring.",
        "commit_message": "Code review of Alert screenshot feature"
    },
    {
        "repository": "https://github.com/FluentLenium/FluentLenium",
        "commit_hash_before": "4d5427274cf959114d7205183db1a61575d8f3fc",
        "commit_hash_current": "eae99e2ac73b8eac6e390cb942827237ab43c873",
        "refactoring_type": "pure",
        "justification": "The changes in this commit appear to be primarily structural and organizational. There are no functional changes or behavior modifications observed in the code diff. The code is reorganized, methods are refactored, tests are added for the new ShadowRootPage, and the IntegrationFluentTest is extended for a new test case (ShadowRootTest). However, the existing functionality remains unchanged.",
        "commit_message": "Feature/1415 (#1456)\n\n* fixes 1374: ShadowRoot in handle ChromeDriver 96+\n\nCo-authored-by: filip.cynarski <filip@cynarski.eu>"
    },
    {
        "repository": "https://github.com/FluentLenium/FluentLenium",
        "commit_hash_before": "eae99e2ac73b8eac6e390cb942827237ab43c873",
        "commit_hash_current": "40968ad4b866862ca791739ecf1793bbffcd012c",
        "refactoring_type": "pure",
        "justification": "The commit contains updates to the versions of dependencies (e.g., Checkstyle) and bumps the version number of FluentLenium itself, but there are no observable changes in behavior or functionality as a result of these updates.",
        "commit_message": "Code review fixes"
    },
    {
        "repository": "https://github.com/rampatra/jbot",
        "commit_hash_before": "e007d145c015d10ea4b7027af86ad2af71d28118",
        "commit_hash_current": "17e0d25cdaa1d7a9ea863770ec5590d130796d03",
        "refactoring_type": "pure",
        "justification": "The commit introduces new files for Slack and Facebook bot configurations, but there are no changes to the existing functionality or behavior. It appears to be mainly a matter of adding new features (Slack integration) and configuration settings while keeping the original code structure intact.",
        "commit_message": "webhook models completed"
    },
    {
        "repository": "https://github.com/rampatra/jbot",
        "commit_hash_before": "17e0d25cdaa1d7a9ea863770ec5590d130796d03",
        "commit_hash_current": "0225c9c888637f136b162435ecfddacf7ad33a7c",
        "refactoring_type": "pure",
        "justification": "The changes in the code diff focus on renaming and adding variables and properties without modifying their behavior or functionality. Additionally, there are no bug fixes, new features, or changes to method signatures or outputs. These factors suggest that this is a pure refactoring.",
        "commit_message": "Refactored code, BaseBot class added"
    },
    {
        "repository": "https://github.com/rampatra/jbot",
        "commit_hash_before": "0225c9c888637f136b162435ecfddacf7ad33a7c",
        "commit_hash_current": "a7a0d49cb4bf07fbfd4b163509a37eedb07c26f7",
        "refactoring_type": "pure",
        "justification": "The commit adds a new EventType field to the Event class in Slack and Facebook event models. However, this change does not alter any existing functionality or behavior. Instead, it extends the Event class with an additional attribute for better organization and easier access to event types within the application. This can be considered as a pure refactoring.",
        "commit_message": "Refactored BaseBot"
    },
    {
        "repository": "https://github.com/bytemanproject/byteman",
        "commit_hash_before": "995bd486141eafc1177d6d25c6625591347697bd",
        "commit_hash_current": "881c243885540116974143021910aa4705b6e3b5",
        "refactoring_type": "pure",
        "justification": "The commit adds new functionality in the form of a 'TestExceptionExit' test script, but the changes to the codebase are primarily refactoring. There are no functional changes or behavior alterations made as part of this commit.",
        "commit_message": "Updates for 4.0.0-BETA3 release\n\nswitch to using methodhandles for non-public/exported access on JDK9\nstore bindings as lcoal vars rather than in hash map\nhandle non-public data generically as Object -- with accesss via MethodHandle\nadd debug trace capability to JigsawAccessEnabler"
    },
    {
        "repository": "https://github.com/iotaledger/iri",
        "commit_hash_before": "599eee115888345ac94f899cfe8497dee83dc650",
        "commit_hash_current": "de5b312f3259c2297fcb1bf915265124416f7aec",
        "refactoring_type": "pure",
        "justification": "The code changes in the commit appear to be purely structural. There are no behavior or functionality changes, and no new features have been added. Instead, it seems that the code has been refactored for better organization and readability, which is a typical characteristic of 'pure' refactoring.",
        "commit_message": "Updating PearlDiver"
    },
    {
        "repository": "https://github.com/iotaledger/iri",
        "commit_hash_before": "577f2ad2db561a4044cbf9a81beae15da599d2ab",
        "commit_hash_current": "a0cc667fbc49c1894e7dccdc7969165d43afe549",
        "refactoring_type": "pure",
        "justification": "The commit introduces two changes: the creation of an array for 'workers' and the modification of how threads are started. However, these changes do not affect the behavior or functionality of the PearlDiver class. The workers array is created without any specific assignments or functional implications. The change in thread creation from anonymous classes to a separate variable followed by assigning it to the workers array also does not seem to alter the behavior. Therefore, this refactoring appears to be purely structural in nature and falls under 'pure' refactoring.",
        "commit_message": "Threading issues in PearlDiver.java (#35)\n\n* Thread safety and thread coordination\n\n* Update PearlDiver.java\n\nIndentation with spaces instead of tabs"
    },
    {
        "repository": "https://github.com/iotaledger/iri",
        "commit_hash_before": "c87b2f25dcafe240153702a9fb39f8c37bff4999",
        "commit_hash_current": "d9460f75924194ac1e649d22dbc010dd4235eca7",
        "refactoring_type": "pure",
        "justification": "The commit contains structural changes, such as renaming variables, methods, and extracting methods without altering functionality. There are no changes to behavior or functionality that suggest floss refactoring.",
        "commit_message": "Neighbors DNS resolver"
    },
    {
        "repository": "https://github.com/iotaledger/iri",
        "commit_hash_before": "5ae55bc5a9d592a583c73dd183e5e55659b5e9d7",
        "commit_hash_current": "6509f56a6b14702394e3c2ee899acbc67f015a05",
        "refactoring_type": "pure",
        "justification": "The commit does not include any changes that affect the behavior or functionality of the code. The refactorings appear to be purely structural, such as renaming constants (e.g., SIZE_IN_TRYTES -> HASH_SIZE and TRYTES_SIZE), adding error checks for invalid trytes input in certain cases, and updating variable names and control flow statements without modifying the logic.",
        "commit_message": "More input validation."
    },
    {
        "repository": "https://github.com/iotaledger/iri",
        "commit_hash_before": "f178a6bd7edc7ed3c597025a38c76854ae39198f",
        "commit_hash_current": "a83a6cefe947464745a2a86df82361484bc8b684",
        "refactoring_type": "pure",
        "justification": "The changes in the code diff indicate that there are no functional or behavioral changes. The project is reorganizing and simplifying its code structure, renaming variables, methods, and removing commented out lines without altering their functionality. This is a common practice in software development known as refactoring, but in this case, it appears to be purely structural in nature and does not seem to affect the behavior or outputs of the program.",
        "commit_message": "updated latest snapshot to be instanced"
    },
    {
        "repository": "https://github.com/neuland/jade4j",
        "commit_hash_before": "0ad6f49a8407c7c3d14f1fc1c83dd6d9ca8ffd1f",
        "commit_hash_current": "68356f2a1fccbe5fa20ec213c9612870202474f8",
        "refactoring_type": "pure",
        "justification": "The changes in this commit are primarily focused on code organization and structure, such as creating new files, moving some code, and renaming a few variables. None of these alterations seem to affect the functionality or behavior of the application. Therefore, it is classified as 'pure' refactoring.",
        "commit_message": "Jexl3 (#179)\n\n* Upgrade to jexl3"
    },
    {
        "repository": "https://github.com/neuland/jade4j",
        "commit_hash_before": "90623c33a3a37d00ef18cc78389bd4a89bd575e9",
        "commit_hash_current": "6c87f25b45a11aaecd32bae6339b984e2a39c695",
        "refactoring_type": "pure",
        "justification": "The commit modifies the templates to use 'jade' as the default file extension instead of 'pug'. However, this change does not affect the behavior or functionality of the code. It is merely a refactoring for consistency.",
        "commit_message": "Remove BasePath from PugConfiguration - Leave Base Path to the Template Loader"
    },
    {
        "repository": "https://github.com/mpetazzoni/ttorrent",
        "commit_hash_before": "b0d0ffe581775000866655a0853cdb744eae11fb",
        "commit_hash_current": "e588c013354b95c83615b700139006652e5ceecb",
        "refactoring_type": "pure",
        "justification": "The commit includes refactoring and reorganization of code, such as moving import statements to the top of files, removing no longer needed imports, and removing an unused class. The changes do not appear to affect the functionality or behavior of the software.",
        "commit_message": "refactoring: renamed AnnounceableFileTorrent -> LoadedTorrent"
    },
    {
        "repository": "https://github.com/mylhyl/Android-CircleDialog",
        "commit_hash_before": "d3e608ddbf2bfcf15596cee27b83dceab2946fe5",
        "commit_hash_current": "0a9137f7358dae1bbec312905890ad75d0cb35bb",
        "refactoring_type": "pure",
        "justification": "The commit introduces new classes (BodyProgressView, TitleView, OnLvItemClickListener, OnRvItemClickListener) and modifies existing ones (TitleView), but none of these changes seem to affect the functionality or behavior. The code reorganization appears to be for better organization and clarity.",
        "commit_message": "OnLvItemListener and OnRvItemListener add return params"
    },
    {
        "repository": "https://github.com/mylhyl/Android-CircleDialog",
        "commit_hash_before": "0a9137f7358dae1bbec312905890ad75d0cb35bb",
        "commit_hash_current": "27c6ac63cb1b2ad99a43ce00caa58074bff92ac6",
        "refactoring_type": "pure",
        "justification": "The code changes in the commit only rename import statements and do not seem to affect behavior or functionality. There are no new features, bug fixes, changes to method signatures, or alterations of conditional logic that would indicate a floss refactoring.",
        "commit_message": "\u4f18\u5316"
    },
    {
        "repository": "https://github.com/mylhyl/Android-CircleDialog",
        "commit_hash_before": "27c6ac63cb1b2ad99a43ce00caa58074bff92ac6",
        "commit_hash_current": "06b792a8b54a8a25477fbe8da0a9b1be274be344",
        "refactoring_type": "pure",
        "justification": "The code changes appear to focus on organizational improvements and naming conventions without any notable impact on functionality or behavior. For example, the `mParams` variable is replaced with `popupParams` and `dialogParams` in different parts of the codebase, and a few new variables are introduced for better encapsulation (such as `dialogX`, `dialogY`). Additionally, some calculations related to dialog placement have been refactored, but these changes don't seem to impact the overall behavior or functionality.",
        "commit_message": "\u5f00\u653einput\u5de5\u5177"
    },
    {
        "repository": "https://github.com/apache/pdfbox",
        "commit_hash_before": "61c9ce698f82a72ea25b6fe6e7be37713aa9c28d",
        "commit_hash_current": "60ccf04c11aeee0b3fe8696200e84cd240c94344",
        "refactoring_type": "pure",
        "justification": "The commit adds a boolean variable 'sourcePageHadContents' and a check for its value in the PDPageContentStream class, but it does not affect the behavior or functionality of the code. The addition is purely aimed at improving maintainability by providing context about whether the source page had contents before the new content stream was created. Other than that, there are no changes to existing functionality, method signatures, or logic. Additionally, in the PageDrawer class, some variables are saved and restored during function calls, but these changes do not impact the behavior of the code either.",
        "commit_message": "PDFBOX-4071: improve variable names\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/issue4569@1862495 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/pdfbox",
        "commit_hash_before": "839dd53168400d700c3badb44a9106d89a879783",
        "commit_hash_current": "57ddc47e1b3ba61a0c59b2edf051f43a6f91d750",
        "refactoring_type": "pure",
        "justification": "The commit primarily consists of refactoring code within the PDFBox project. The changes include renaming variables, methods, and classes without changing their behavior (e.g., PDType1CFont). In addition, there are some minor changes in the implementation of the Matrix class, but these changes do not affect the functionality or behavior of the library. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "PDFBOX-4071: avoid duplicate code; clone matrix object to avoid modifying it\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/issue4569@1863454 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/pdfbox",
        "commit_hash_before": "168b21633d3156d8e08da550703a823c76c46824",
        "commit_hash_current": "e8f75ce1a491c150a2603c56994b6a8a162d7d61",
        "refactoring_type": "pure",
        "justification": "The commit introduces the usage of createCOSStream() instead of new COSStream(), indicating a pure refactoring. This change does not alter any functionality or behavior.",
        "commit_message": "PDFBOX-3353: try to get font from default resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/issue4569@1865253 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/pdfbox",
        "commit_hash_before": "e8f75ce1a491c150a2603c56994b6a8a162d7d61",
        "commit_hash_current": "e9bd8771a55d1aea5a2e0d404555cb0e7a8cf6ec",
        "refactoring_type": "pure",
        "justification": "The commit mainly consists of internal changes, renaming variables and methods, restructuring code, and simplifying conditional logic without changing the behavior or functionality. No new features were added, no bugs were fixed, and there are no changes that could affect behavior or functionality. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "PDFBOX-4071: use same names everywhere\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/issue4569@1865548 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/pdfbox",
        "commit_hash_before": "41699f0eaebd1042a7d36d954cf3621a83bd4d0b",
        "commit_hash_current": "214396c6da16b8b1e9abc500e9801d337a32ba0c",
        "refactoring_type": "pure",
        "justification": "The commit includes refactoring of code without any changes to the functionality or behavior. It renames a variable, extracts a method, and simplifies a conditional statement within classes. No new features are added nor bugs fixed.",
        "commit_message": "PDFBOX-4071: refactor\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/issue4569@1865874 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/hibernate/hibernate-orm",
        "commit_hash_before": "00da979e70a415234a29d156a7754eabc37cb75f",
        "commit_hash_current": "76b42a94c378869dab405f461b7f1c999928a628",
        "refactoring_type": "pure",
        "justification": "The commit removes the dependency on hibernate-spatial for building distributions, but there are no changes to behavior or functionality. It simply refactors the build configuration to exclude the spatial artifacts from the distribution.",
        "commit_message": "Initial working support for selecting a \"query root\" - i.e. `select e from TheEntity e`"
    },
    {
        "repository": "https://github.com/hibernate/hibernate-orm",
        "commit_hash_before": "26ff169db2405f6cd9e59f4c50632bad1e62f7fd",
        "commit_hash_current": "d9446e7c77f3be637314ac679942498e31ae150e",
        "refactoring_type": "pure",
        "justification": "The commit adds new files for an entity and test cases, but it does not change the behavior or functionality of the existing code. The changes are purely structural, creating a new entity class, its test file, and configuration files. The log4j properties file is added without modifying any existing functions.",
        "commit_message": "Fix a few test issues, implement tuple emulation, group by support and support configuring criteria value handling mode"
    },
    {
        "repository": "https://github.com/hibernate/hibernate-orm",
        "commit_hash_before": "d9446e7c77f3be637314ac679942498e31ae150e",
        "commit_hash_current": "6b66feb0ac6b14eefeadebee06951de273c8d450",
        "refactoring_type": "pure",
        "justification": "The commit only adds a new configuration for the JVM when testing with Java 9 or later versions. This change does not alter any functionality or behavior of the codebase, but rather extends it to support newer Java versions. This is considered a 'pure' refactoring.",
        "commit_message": "HHH-14452 Support set operations in JPA Criteria API"
    },
    {
        "repository": "https://github.com/hibernate/hibernate-orm",
        "commit_hash_before": "6b66feb0ac6b14eefeadebee06951de273c8d450",
        "commit_hash_current": "523113d2caebb90dba3a137bfe3cbc9015bb047f",
        "refactoring_type": "pure",
        "justification": "The commit modifies the Java Type Descriptor classes for CommaDelimitedStrings and CommaDelimitedStringMap, changing them from extending AbstractTypeDescriptor to AbstractClassTypeDescriptor. This is a refactoring change that does not affect the functionality or behavior of these classes.",
        "commit_message": "re-enable tests\nre-organize some tests\n\nfixed EnumType mapping from hbm.xml\nvarious fixes in HQL, Criteria and parameter handling related to enum values"
    },
    {
        "repository": "https://github.com/hibernate/hibernate-orm",
        "commit_hash_before": "523113d2caebb90dba3a137bfe3cbc9015bb047f",
        "commit_hash_current": "ef69465f48ee88c1c3574450db30039b1627329e",
        "refactoring_type": "pure",
        "justification": "The commit introduces a new boolean parameter to the constructor of PreparedStatementSpyConnectionProvider, but the changes do not affect the behavior or functionality of the class. This refactoring appears to be purely structural.",
        "commit_message": "move several new types out of the root package\n\nThe namespace org.hibernate is already much too cluttered and\nwe should try hard to not make it worse in H6.\n\nFurthermore, some of these things look to be of more interest\nto developers of Hibernate than to users.\n\nNow, I'm not sure that org.hibernate.query is absolutely the\nbest place either, but it's at least better."
    },
    {
        "repository": "https://github.com/caprica/vlcj",
        "commit_hash_before": "1bdaa3668c5c9aebe592986d5a27031fa8f5843e",
        "commit_hash_current": "fc167d4841188ee91afa41305bd6a530c41daef4",
        "refactoring_type": "pure",
        "justification": "The code diff shows several changes related to the structure of the project, such as the addition of a new Java file and class (AWTVideoSurface.java), and the removal of some lines in MediaPlayerFactory.java and LinuxNativeInit.java. However, there are no apparent behavioral modifications or bug fixes, making it a purely structural change.",
        "commit_message": "Move the bespoke Linux initialisation to the video surface\n\nPreviously this initialisation was in the MediaPlayerFactory and it\nwas executed whether it was needed or not (e.g. it is not needed in\na JavaFX application).\n\nIn fact, executing this initialisation in a JavaFX environment led\nto fatal JVM crashses in some circumstances (like opening a native\nfile chooser dialog).\n\nThe solution therefore is to create a new base class for video\nsurfaces that use AWT and put the initialisation in there.\n\nThis change also removes the need to pass the VLCJ_INITX=no system\nproperty that was previously used to workaround this issue."
    },
    {
        "repository": "https://github.com/caprica/vlcj",
        "commit_hash_before": "3b6a39586d66cf67f83db1d6f445af0274980b26",
        "commit_hash_current": "b13a3163b5fdfb17c86783a69c30e04dc5379a11",
        "refactoring_type": "pure",
        "justification": "The commit introduces new classes and interfaces for the media player, but it does not appear to change any existing behavior or functionality. Instead, it seems to be an organization of the code to better separate concerns and potentially make future development easier. The changes are purely structural and do not alter the output or impact the user experience.",
        "commit_message": "Refactor media list player to use the original native media player\n\nPreviously, the media list component players created a new native\nmedia player instance (wrapped in a vlcj media player) and then set\nthat instance onto the native media list player.\n\nThis change now creates a new media player using the native media\nplayer instance that is already set (natively) on the native media\nlist player.\n\nWithout this, some unexpected issues *may* occur (although it seems\ninconsistent across platforms, no issue on Linux but causing a\nproblem on Windows).\n\nThe original reported issue was that despite \"sout-keep\" settings\nthe media player was creating a new output for each subequent item\nin a media list.\n\nSee #1012."
    },
    {
        "repository": "https://github.com/caprica/vlcj",
        "commit_hash_before": "cdde7e1f2cfc5be1e5f31d3f1f05de436d5908dd",
        "commit_hash_current": "5086dcea7c1d4d0a935fcf6d4a91073d1bad2aed",
        "refactoring_type": "pure",
        "justification": "The changes made in this commit do not seem to alter the functionality of the code. Instead, the refactored code extracts some methods and creates separate classes for Titles and Chapters descriptions, which can be considered as a form of organization or structural change without affecting the behavior. The new imports (com.sun.jna.Pointer, com.sun.jna.Structure, and uk.co.caprica.vlcj.binding.internal.libvlc_title_description_t) also indicate that these classes were previously used but not directly imported in the original code.",
        "commit_message": "Move utility methods to where they're used"
    },
    {
        "repository": "https://github.com/caprica/vlcj",
        "commit_hash_before": "5086dcea7c1d4d0a935fcf6d4a91073d1bad2aed",
        "commit_hash_current": "8bdfdfb5249bc830652d677d1172aa26cf2fc18b",
        "refactoring_type": "pure",
        "justification": "The commit added a new class `RendererApi` and made changes to the existing `TitleApi` class to separate functionality related to media player renderer. However, there are no visible behavior or functional changes in the provided diff, suggesting this is a pure refactoring.",
        "commit_message": "Move renderer method to its own API for consistency\n\nThis is for e.g. a Chromecast renderer."
    },
    {
        "repository": "https://github.com/caprica/vlcj",
        "commit_hash_before": "8bdfdfb5249bc830652d677d1172aa26cf2fc18b",
        "commit_hash_current": "5b0e8aa9acf98dbbdd3d2c5784af34325ec6b4b5",
        "refactoring_type": "pure",
        "justification": "The commit changes the name of a class and a method, as well as renames some variables and imports. However, there are no functional changes or additions, indicating this is a pure refactoring aimed at improving code readability and organization.",
        "commit_message": "Use macOS instead of OSX in naming"
    },
    {
        "repository": "https://github.com/apache/mina",
        "commit_hash_before": "8f525b67eed4102fcc1bdb6fdadc71f0f074dc6c",
        "commit_hash_current": "b6a1444fdce2b6758dd641dd7c520ccfd2d33455",
        "refactoring_type": "pure",
        "justification": "In the provided diff, there are no changes that indicate a modification of behavior or functionality. Instead, the code shows structural changes such as renaming variables and methods, adding new classes, and reorganizing existing ones. Additionally, there's a new test case added for 'testBindTwice', but it does not seem to affect any existing functionality. Therefore, this commit can be classified as 'pure' refactoring.",
        "commit_message": "[DIRMINA-1169] Acceptor: fix unbinding a ServerSocketChannel\n\nSince Java 11, closing a ServerSocketChannel may release the socket\nonly on the next select() call. If we try to register a new binding for\nan unbound socket before the next select, a BindException may be thrown.\n\nEnsure that there is a select() call between unbinding some sockets and\nbinding new sockets. Mark the unbind futures as \"done\" only after that\nintervening select()."
    },
    {
        "repository": "https://github.com/opentripplanner/OpenTripPlanner",
        "commit_hash_before": "3ce7ae521bbd15936f3419522761ca648c364e1e",
        "commit_hash_current": "b4872d5129e578be7ccaa5c4451d9591f6612498",
        "refactoring_type": "pure",
        "justification": "The commit mainly consists of renaming a class name and adjusting import statements, which are examples of 'pure' refactoring as these changes do not affect the functionality or behavior of the code.",
        "commit_message": "Issue #4494Via search - Pard D\n\n\t- RouteViaRequest removed reference to RouteRequest\n    - ViaLocation with default values for maxSlack, minSlack\n\t- ViaRoutingWorker with sensible name on predicate\n\t- Rename TestViaRoutingWorker to ViaRoutingWorkerTest"
    },
    {
        "repository": "https://github.com/opentripplanner/OpenTripPlanner",
        "commit_hash_before": "b32fe424cf9ecf1c03804d080f2ac49b1729369e",
        "commit_hash_current": "3ae5bb4b0a51aeba05e27ea5fbfefdec2e9865e2",
        "refactoring_type": "pure",
        "justification": "The commit contains structural changes in the code such as renaming variables, methods and classes without changing their behavior or functionality. Additionally, there are no apparent bug fixes or new features added. As a result, this refactoring is classified as 'pure'.",
        "commit_message": "Issue #4494 Minor code review fixes"
    },
    {
        "repository": "https://github.com/apache/log4j",
        "commit_hash_before": "e4bb5e96052e534613fcd43f74efba6e12339d32",
        "commit_hash_current": "9b83dcfdbc613a281c1e30d7c148eff4038db25e",
        "refactoring_type": "pure",
        "justification": "The changes in this commit are mostly structural and do not appear to alter the functionality of the code. This includes file renaming, adding a missing semicolon, and removing unnecessary comments. There are no new features added or existing bugs fixed that would suggest this is floss refactoring.",
        "commit_message": "Bug 41708: PropertyPrinter.printOptions breaking signature change in log4j 1.2.9\n\ngit-svn-id: https://svn.apache.org/repos/asf/logging/log4j/branches/v1_2-branch@512082 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/log4j",
        "commit_hash_before": "90d4e78e7ab65cb2588808474355cb6907f37111",
        "commit_hash_current": "c4a748ac5a13d4deed5ce9f7cc03951d7a29bcd7",
        "refactoring_type": "pure",
        "justification": "The commit appears to only refactor the code structure without making any functional changes or bug fixes. Specifically, there are changes in variable declarations and method invocations that are purely organizational. For instance, a new byte buffer (buf) is created for the DatagramPacket in two places which simplifies the code by removing repetition of creating a new packet each time. However, this change does not affect the functionality or behavior of the SyslogAppenderTest.",
        "commit_message": "Bug 40502: Fix syslog tests to not reuse packets, fails on jdk 1.3\n\ngit-svn-id: https://svn.apache.org/repos/asf/logging/log4j/branches/v1_2-branch@512139 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/log4j",
        "commit_hash_before": "c4a748ac5a13d4deed5ce9f7cc03951d7a29bcd7",
        "commit_hash_current": "cf4d8a2be2ccf6919037be7070526a79e02c223e",
        "refactoring_type": "pure",
        "justification": "The commit adds new test cases for the RollingFileAppender class, specifically focusing on file locking during renaming. However, it does not appear to change any existing functionality or behavior of the appender itself. The changes are purely structural, such as adding new test methods and modifying existing ones slightly, without altering their original purpose.",
        "commit_message": "Bug 41735: RollingFileAppender may delete files during rollover\n\ngit-svn-id: https://svn.apache.org/repos/asf/logging/log4j/branches/v1_2-branch@513638 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/apache/log4j",
        "commit_hash_before": "70b884ecb34e74d65eaf654a9bd489f6e9a68fe8",
        "commit_hash_current": "0663eb2a1301f7622f017496c5983789b1cbae38",
        "refactoring_type": "pure",
        "justification": "The commit only consists of renaming a class and a test case without any changes in their behavior or functionality. This refactoring does not affect the code's output or logic.",
        "commit_message": "- Internal logging is now on even after a LogManager.resetConfiguration.\n(Temporary code. All this will be radically changed when Domains enter \nthe scene.)\n\n- PropertySetter.setProperties method no longer activates the options \nof OptionHandlers. This results in slighly less confusing code. \nChanged ProppertyConfigurator to take thismodification  into account.\n\n- Renamed test cases from XTestCase to XTest where X varies.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/logging/log4j/trunk@310055 13f79535-47bb-0310-9956-ffa450edef68"
    },
    {
        "repository": "https://github.com/kohsuke/hudson",
        "commit_hash_before": "b0c8e2bea2ff018f62bb91ce4a21238eb79ef447",
        "commit_hash_current": "70c10658148c3eab3b4c4122705e1ed3a12e193d",
        "refactoring_type": "pure",
        "justification": "The commit does not contain any changes to behavior or functionality. The code is mainly focused on renaming, moving methods and adding comments. There are no new features added, bug fixes, or changes in method signatures that could affect behavior.",
        "commit_message": "Stage 1 : Create hudson.model.Jenkins, make Hudson derive from Jenkins.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"
    },
    {
        "repository": "https://github.com/kohsuke/hudson",
        "commit_hash_before": "b0c8e2bea2ff018f62bb91ce4a21238eb79ef447",
        "commit_hash_current": "70c10658148c3eab3b4c4122705e1ed3a12e193d",
        "refactoring_type": "pure",
        "justification": "The commit mainly consists of adding new methods and variables without changing the functionality or behavior of the existing code. There are no changes to existing methods, no bug fixes, and no alterations in the outputs. Instead, there is an addition of new features (isWindows(), isDarwin()) while restructuring the code, which indicates 'pure' refactoring.",
        "commit_message": "Stage 1 : Create hudson.model.Jenkins, make Hudson derive from Jenkins.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"
    },
    {
        "repository": "https://github.com/Netflix/ribbon",
        "commit_hash_before": "2ba22b809df9413dbb08fe19ae922f58a912480d",
        "commit_hash_current": "bb38ed1875d2c0d2cdadc554a2561c6222e4c4a6",
        "refactoring_type": "pure",
        "justification": "The commit introduces changes only to the import statements and class hierarchy, while maintaining the same functionality. The code does not exhibit any behavior or functionality modifications, nor is there evidence of bug fixes alongside refactoring. These changes are purely organizational in nature.",
        "commit_message": "Refactor and consolidation. Use HttpReuqest and HttpResponse for RestClient. Fix PMD, find bugs."
    },
    {
        "repository": "https://github.com/Netflix/ribbon",
        "commit_hash_before": "3401c7be36ceae942b9b4297628094232add0750",
        "commit_hash_current": "b6d07b56134bc833678a31165661d3c496e3cf60",
        "refactoring_type": "pure",
        "justification": "The changes made in this commit seem to be primarily focused on updating the request structure, using HttpRequest<ByteBuf> instead of HttpRequest. This is a structural change without altering functionality, as it appears the code still behaves identically when making requests. Additionally, there are no bug fixes or new features added that would indicate floss refactoring.",
        "commit_message": "Changes to use RxNetty\u2019s new HttpRequest, HttpResponse."
    },
    {
        "repository": "https://github.com/Netflix/ribbon",
        "commit_hash_before": "5f53976b0282954cf038972b3a22b2b44e0a75ed",
        "commit_hash_current": "cc75132319e59363204055e9c0eb23b6a3f8e6ac",
        "refactoring_type": "pure",
        "justification": "The commit does not appear to change any behavior or functionality. It modifies the creation of HttpClient objects, but the changes are purely structural (using NettyHttpClient instead of HttpClient). The new classes and methods introduced do not seem to affect existing functionality.",
        "commit_message": "Change rxnetty version to 0.3.6. Implementation of ResourceGroup. Change to ConfigurationBasedServerList to make the server list part of client configuration."
    },
    {
        "repository": "https://github.com/javers/javers",
        "commit_hash_before": "cfb4f202b625c71b7a9ca3b9e19a0855ae6fcb1b",
        "commit_hash_current": "7b1d91dfd69e06cbee3eda88fddad4b16f23d8f0",
        "refactoring_type": "pure",
        "justification": "The code changes appear to be purely organizational in nature. The MongoRepository class has been modified to use a different collection name, but the functionality remains the same. There are no indication of new features being added, bugs being fixed or any alterations that could affect behavior or functionality. As such, this refactoring can be classified as 'pure'.",
        "commit_message": "added support for querying by ValueObjectID in MongoRepository, added index on snapshots.global_id"
    },
    {
        "repository": "https://github.com/javers/javers",
        "commit_hash_before": "714feabac2242d9a1b5d9c795a64ecc16011ea5b",
        "commit_hash_current": "3922a00267ade30b58e472e5526318dfafbf0bd4",
        "refactoring_type": "pure",
        "justification": "The commit changes the dialect from H2 to PostgreSQL, but it doesn't seem to affect the behavior or functionality of the code. It appears to be a change in configuration rather than altering existing functionality.",
        "commit_message": "https://github.com/javers/javers/issues/103\nfrom-JSON workaround removed"
    },
    {
        "repository": "https://github.com/javers/javers",
        "commit_hash_before": "5729426b7465f3fc4555420b919775fdca42023d",
        "commit_hash_current": "dbc5719f090d22e8c0ae2a98c0a03bac16b49e04",
        "refactoring_type": "pure",
        "justification": "The commit involves changes in the test cases, adding new tests and renaming some variables and classes, but there is no evidence of changes to functionality or behavior. The purpose seems to be for better organization, readability, and clarity.",
        "commit_message": "missing properties are treated as nulls"
    },
    {
        "repository": "https://github.com/javers/javers",
        "commit_hash_before": "862d2cf47faec4849ee46191c74ffeb2f4a4b95f",
        "commit_hash_current": "7b3f91c30f5f11be82f2dc8a53c4b54955b9e814",
        "refactoring_type": "pure",
        "justification": "The commit includes renaming of classes and imports, as well as minor refactorings in various methods. However, none of these changes seem to alter the functionality or behavior of the code. Instead, it appears to be a maintenance update for improved organization and readability.",
        "commit_message": "work in progress"
    },
    {
        "repository": "https://github.com/javers/javers",
        "commit_hash_before": "45c80ac79e62f538d8140a023bf6c2eb0d469f11",
        "commit_hash_current": "3181474113fc5bcff251e6217ca07ccb756f2172",
        "refactoring_type": "pure",
        "justification": "In this commit, there are no functional changes or bug fixes. The code refactoring involves changing the way the ALTER TABLE statements are executed by removing the dialect-specific conditional checks and replacing them with a more generic method called `addStringColumn`. Additionally, the SQL update statements for `populateSnapshotManagedType` and `populateGlobalIdTypeName` methods have been restructured. However, these changes do not alter the functionality of the code; they only improve its structure and maintainability. Therefore, this commit is classified as 'pure' refactoring.",
        "commit_message": "JaversSchemaManager.addStringColumn()"
    },
    {
        "repository": "https://github.com/apache/log4j",
        "commit_hash_before": "397e5f50c3313f8c757495beb771d6ed9db92838",
        "commit_hash_current": "4c77e0a0b8489c67c96c5973363b0432e9414494",
        "refactoring_type": "floss",
        "justification": "The commit introduces a new functionality to limit packet size in SyslogAppender to 1024 bytes. This is evident from the addition of the 'splitPacket' method and the test case for testing big packets (testBigPackets()).",
        "technical_evidence": "Addition of splitPacket method in SyslogWriter.java, testBigPackets() method in SyslogAppenderTest.java, and the corresponding bug fix reference (42087) in download.xml.",
        "confidence_level": "high",
        "diff_source": "direct",
        "commit_message": "Bug 42087: SyslogAppender packets not limited to 1024 bytes\n\ngit-svn-id: https://svn.apache.org/repos/asf/logging/log4j/branches/v1_2-branch@530990 13f79535-47bb-0310-9956-ffa450edef68",
        "diff_size_chars": 6916,
        "diff_lines": 179,
        "processing_method": "direct"
    },
    {
        "repository": "https://github.com/apache/maven-plugins",
        "commit_hash_before": "d1132ebf10914bc666db42499d6beb858d0cf282",
        "commit_hash_current": "05e14fc6b81918a5e581940f119246c828d50a65",
        "refactoring_type": "pure",
        "justification": "All changes are purely structural. The version numbers have been updated in the pom.xml file, but there is no behavioral modification as a result. Additionally, a new import statement has been added for StringOutputStream, which does not affect functionality.",
        "technical_evidence": "Version number updates in pom.xml do not change behavior; addition of StringOutputStream import does not alter logic flow or introduce new conditional statements.",
        "confidence_level": "high",
        "diff_source": "direct",
        "commit_message": "PR: MNG-1111\nSubmitted by: Edwin Punzalan\nReviewed by:  Brett Porter\nhonour use file directive (output to a string which is logged).\nmodifed: original patch used system.out\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk/maven-plugins/maven-checkstyle-plugin@307349 13f79535-47bb-0310-9956-ffa450edef68",
        "diff_size_chars": 4988,
        "diff_lines": 143,
        "processing_method": "direct"
    },
    {
        "repository": "javers",
        "commit_hash_before": "ab328129bad60bd61530b9756b3ae89acdd44f35",
        "commit_hash_current": "4092519b4a81fadce2f4c68b1950d65928b155f8",
        "refactoring_type": "floss",
        "justification": "The commit adds a new column 'version' to the 'jv_snapshot' table in various databases. This modification affects the behavior of the database schema, as it introduces a new column that did not exist before.",
        "technical_evidence": "Addition of 'addSnapshotVersionColumnIfNeeded()' method and the subsequent 'addLongColumn(String tableName, String colName)' method. The code also includes SQL statements to add the 'version' column in different databases.",
        "confidence_level": "high",
        "diff_source": "direct",
        "commit_message": "https://github.com/javers/javers/issues/361",
        "diff_size_chars": 1952,
        "diff_lines": 40,
        "processing_method": "direct"
    },
    {
        "diff_source": "direct",
        "behavioral_changes": [
            {
                "file": "src/main/java/org/javers/repository/sql/finders/CdoSnapshotsEnricher.java",
                "additions": [],
                "deletions": [
                    "CommitPropertyFinder.class"
                ],
                "description": "Removed CommitPropertyFinder from the list of classes to be bound in JaversSqlModule"
            },
            {
                "file": "src/main/java/org/javers/repository/sql/finders/CdoSnapshotsEnricher.java",
                "additions": [],
                "deletions": [
                    "CdoSnapshotsEnricher.class"
                ],
                "description": "Removed CdoSnapshotsEnricher from the list of classes to be bound in JaversSqlModule"
            },
            {
                "file": "src/main/java/org/javers/repository/sql/finders/CommitPropertyFinder.java",
                "additions": [],
                "deletions": [],
                "description": "No changes in CommitPropertyFinder class, but it is no longer bound in JaversSqlModule"
            },
            {
                "file": "src/main/java/org/javers/repository/sql/pico/JaversSqlModule.java",
                "additions": [
                    "CdoSnapshotsBuilder.class"
                ],
                "deletions": [
                    "CdoSnapshotsEnricher.class"
                ],
                "description": "Added CdoSnapshotsBuilder to the list of classes to be bound in JaversSqlModule and removed CdoSnapshotsEnricher"
            },
            {
                "file": "src/main/java/org/javers/spring/jpa/JaversTransactionalDecorator.java",
                "additions": [],
                "deletions": [
                    "Map<String, String> properties"
                ],
                "description": "Removed the 'properties' parameter from the commit method signature in JaversTransactionalDecorator"
            }
        ],
        "structural_changes": [
            {
                "file": "src/main/java/org/javers/repository/sql/finders/CommitPropertyDTOMapper.java",
                "additions": [],
                "deletions": [
                    "CommitPropertyDTOMapper"
                ],
                "description": "Deleted CommitPropertyDTOMapper class"
            }
        ],
        "repository": "",
        "commit_hash_before": "",
        "commit_hash_current": "",
        "refactoring_type": "floss",
        "justification": "Analysis failed - insufficient data",
        "technical_evidence": "Not provided",
        "confidence_level": "low",
        "commit_message": "CR fixes",
        "diff_size_chars": 44416,
        "diff_lines": 917,
        "processing_method": "direct"
    },
    {
        "diff_source": "direct",
        "behavioral_changes": 6,
        "structural_changes": 5,
        "overall_changes": 11,
        "repository": "",
        "commit_hash_before": "",
        "commit_hash_current": "",
        "refactoring_type": "floss",
        "justification": "Analysis failed - insufficient data",
        "technical_evidence": "Not provided",
        "confidence_level": "low",
        "commit_message": "-Concurrency bug in getNextTask() solved\n-Java Timer to handle edge case\n-Changes in SPSC and MPSC queue",
        "diff_size_chars": 29170,
        "diff_lines": 792,
        "processing_method": "direct"
    }
]